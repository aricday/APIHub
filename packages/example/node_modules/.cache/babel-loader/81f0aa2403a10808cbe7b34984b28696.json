{"ast":null,"code":"import _slicedToArray from \"/Users/aricday/Projects/APIHub/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React, { useState, forwardRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport classnames from 'classnames';\nvar useStyles = makeStyles({\n  button: {\n    textTransform: 'none'\n  }\n}, {\n  name: 'Layer7LocaleSwitcherMenu'\n});\nexport var LocaleSwitcherMenu = function LocaleSwitcherMenu(props) {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      anchorEl = _useState2[0],\n      setAnchorEl = _useState2[1];\n\n  var onChange = props.onChange,\n      locale = props.locale,\n      locales = props.locales,\n      className = props.className,\n      rest = __rest(props, [\"onChange\", \"locale\", \"locales\", \"className\"]);\n\n  var classes = useStyles(props);\n  var open = Boolean(anchorEl);\n\n  var handleMenu = function handleMenu(event) {\n    return setAnchorEl(event.currentTarget);\n  };\n\n  var handleClose = function handleClose() {\n    return setAnchorEl(null);\n  };\n\n  var handleSetLocale = function handleSetLocale(newLocale) {\n    onChange(newLocale);\n    handleClose();\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(Button, Object.assign({\n    \"aria-owns\": open ? 'menu-appbar' : null,\n    \"aria-haspopup\": true,\n    color: \"inherit\",\n    variant: \"text\",\n    className: classnames(classes.button, className),\n    onClick: handleMenu,\n    endIcon: React.createElement(ArrowDropDownIcon, null)\n  }, rest), locales[locale]), React.createElement(Menu, {\n    id: \"menu-appbar\",\n    anchorEl: anchorEl,\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    transformOrigin: {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    open: open,\n    onClose: handleClose\n  }, Object.keys(locales).map(function (key) {\n    return React.createElement(LocaleSwitcherMenuItem, {\n      key: key,\n      locale: key,\n      onSetLocale: handleSetLocale\n    }, locales[key]);\n  })));\n};\nexport var LocaleSwitcherMenuItem = forwardRef(function (_a, ref) {\n  var locale = _a.locale,\n      onSetLocale = _a.onSetLocale,\n      props = __rest(_a, [\"locale\", \"onSetLocale\"]);\n\n  return React.createElement(MenuItem, Object.assign({\n    ref: ref,\n    onClick: function onClick() {\n      return onSetLocale(locale);\n    }\n  }, props));\n});","map":null,"metadata":{},"sourceType":"module"}