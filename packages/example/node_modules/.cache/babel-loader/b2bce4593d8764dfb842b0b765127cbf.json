{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React from 'react';\nimport { Admin, Resource } from 'react-admin';\nimport { Route } from 'react-router';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport merge from 'lodash/fp/merge';\nimport { ApiHubProvider, guessApihubUrl, guessApihubTenantName } from './ApiHubContext';\nimport { authProvider } from './authentication';\nimport { dataProvider } from './dataProvider';\nimport { i18nProvider, defaultLocale } from './i18n';\nimport { LoginPage, NewPasswordPage, ResetPasswordPage, AccountSetupPage } from './authentication';\nimport { HomePageContent } from './homepage';\nimport { apis } from './apis';\nimport { applications } from './applications';\nimport { userContexts } from './userContexts';\nimport { ApiHubLayout } from './ApiHubLayout';\nimport { readApiHubPreference } from './preferences';\nimport { theme } from './theme';\nimport { documentationReducer } from './apis/Documentation/documentationReducer';\nexport const ApiHubAdmin = _a => {\n  var _a$url = _a.url,\n      url = _a$url === void 0 ? guessApihubUrl() : _a$url,\n      _a$tenantName = _a.tenantName,\n      tenantName = _a$tenantName === void 0 ? guessApihubTenantName() : _a$tenantName,\n      _a$useSameOrigin = _a.useSameOrigin,\n      useSameOrigin = _a$useSameOrigin === void 0 ? true : _a$useSameOrigin,\n      _a$dashboard = _a.dashboard,\n      dashboard = _a$dashboard === void 0 ? HomePageContent : _a$dashboard,\n      _a$layout = _a.layout,\n      layout = _a$layout === void 0 ? ApiHubLayout : _a$layout,\n      _a$loginPage = _a.loginPage,\n      loginPage = _a$loginPage === void 0 ? LoginPage : _a$loginPage,\n      _a$resetPasswordPage = _a.resetPasswordPage,\n      resetPasswordPage = _a$resetPasswordPage === void 0 ? ResetPasswordPage : _a$resetPasswordPage,\n      _a$newPasswordPage = _a.newPasswordPage,\n      newPasswordPage = _a$newPasswordPage === void 0 ? NewPasswordPage : _a$newPasswordPage,\n      _a$accountSetupPage = _a.accountSetupPage,\n      accountSetupPage = _a$accountSetupPage === void 0 ? AccountSetupPage : _a$accountSetupPage,\n      customReducers = _a.customReducers,\n      props = __rest(_a, [\"url\", \"tenantName\", \"useSameOrigin\", \"dashboard\", \"layout\", \"loginPage\", \"resetPasswordPage\", \"newPasswordPage\", \"accountSetupPage\", \"customReducers\"]);\n\n  const defaultLocaleFromPreferences = readApiHubPreference('locale', defaultLocale);\n  return React.createElement(ApiHubProvider, {\n    url: url,\n    tenantName: tenantName\n  }, React.createElement(Admin, Object.assign({\n    authProvider: authProvider(url, tenantName),\n    dataProvider: dataProvider(url, tenantName),\n    i18nProvider: i18nProvider(defaultLocaleFromPreferences),\n    theme: createMuiTheme(theme),\n    layout: layout,\n    loginPage: loginPage,\n    dashboard: dashboard,\n    customRoutes: [React.createElement(Route, {\n      path: \"/reset-password\",\n      component: resetPasswordPage,\n      noLayout: true\n    }), React.createElement(Route, {\n      path: \"/new-password\",\n      component: newPasswordPage,\n      noLayout: true\n    }), React.createElement(Route, {\n      path: \"/account-setup\",\n      component: accountSetupPage,\n      noLayout: true\n    })],\n    customReducers: merge(documentationReducer, customReducers)\n  }, props), React.createElement(Resource, Object.assign({\n    name: \"apis\"\n  }, apis)), React.createElement(Resource, Object.assign({\n    name: \"applications\"\n  }, applications)), React.createElement(Resource, {\n    name: \"assets\"\n  }), React.createElement(Resource, {\n    name: \"specs\"\n  }), React.createElement(Resource, {\n    name: \"tags\"\n  }), React.createElement(Resource, {\n    name: \"documents\"\n  }), React.createElement(Resource, Object.assign({\n    name: \"userContexts\"\n  }, userContexts))));\n};","map":null,"metadata":{},"sourceType":"module"}