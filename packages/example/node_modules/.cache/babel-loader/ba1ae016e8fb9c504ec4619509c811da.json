{"ast":null,"code":"import _regeneratorRuntime from \"/Users/aricday/Projects/APIHub/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nexport var credentialsAuthProvider = function credentialsAuthProvider(apiUrl, adminUrl) {\n  return {\n    login: function login(_ref) {\n      var username, password, response, _ref2, respCode, respMsg;\n\n      return _regeneratorRuntime.async(function login$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              username = _ref.username, password = _ref.password;\n              _context.prev = 1;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(fetch(\"\".concat(apiUrl, \"/authenticate/login\"), {\n                method: 'POST',\n                body: JSON.stringify({\n                  username: username,\n                  password: password,\n                  eula: 'accept'\n                }),\n                credentials: 'include',\n                headers: new Headers({\n                  'Content-Type': 'application/json; charset=UTF-8'\n                })\n              }));\n\n            case 4:\n              response = _context.sent;\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(response.json());\n\n            case 7:\n              _ref2 = _context.sent;\n              respCode = _ref2.respCode;\n              respMsg = _ref2.respMsg;\n\n              if (!(respCode < 200 || respCode >= 300)) {\n                _context.next = 12;\n                break;\n              }\n\n              throw new Error(respMsg);\n\n            case 12:\n              _context.next = 18;\n              break;\n\n            case 14:\n              _context.prev = 14;\n              _context.t0 = _context[\"catch\"](1);\n              console.error(_context.t0);\n              throw new Error(_context.t0);\n\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[1, 14]]);\n    },\n    logout: function logout() {\n      return _regeneratorRuntime.async(function logout$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(fetch(\"\".concat(adminUrl, \"/logout\"), {\n                credentials: 'include'\n              }));\n\n            case 3:\n              return _context2.abrupt(\"return\", Promise.resolve());\n\n            case 6:\n              _context2.prev = 6;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.error(_context2.t0);\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    },\n    checkAuth: function checkAuth() {\n      return Promise.resolve();\n    },\n    checkError: function checkError() {\n      return Promise.resolve();\n    },\n    getPermissions: function getPermissions() {\n      return _regeneratorRuntime.async(function getPermissions$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              return _context3.abrupt(\"return\", Promise.resolve());\n\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      });\n    }\n  };\n};","map":null,"metadata":{},"sourceType":"module"}