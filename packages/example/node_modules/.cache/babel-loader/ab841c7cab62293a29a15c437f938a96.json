{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React from 'react';\nimport { MenuItemLink } from 'react-admin';\nimport { useSelector } from 'react-redux';\nimport classnames from 'classnames';\nimport { useTranslate } from 'ra-core';\nimport { makeStyles, useMediaQuery } from '@material-ui/core';\nimport { IconHome, IconApi, IconApps } from './ui/icons';\nconst useStyles = makeStyles({\n  main: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-start'\n  }\n}, {\n  name: 'RaMenu'\n});\n/**\n * The ApiHub Menu used in the ApiHub Sidebar.\n *\n * Inspired by https://github.com/marmelab/react-admin/blob/2c167a4693b4ca060f72b272f19e9af8f41eb091/packages/ra-ui-materialui/src/layout/Menu.tsx\n *\n * @param {*} props Menu properties\n */\n\nexport const ApiHubMenu = props => {\n  const classesOverride = props.classes,\n        className = props.className,\n        dense = props.dense,\n        hasDashboard = props.hasDashboard,\n        _props$onMenuClick = props.onMenuClick,\n        onMenuClick = _props$onMenuClick === void 0 ? () => null : _props$onMenuClick,\n        logout = props.logout,\n        rest = __rest(props, [\"classes\", \"className\", \"dense\", \"hasDashboard\", \"onMenuClick\", \"logout\"]);\n\n  const translate = useTranslate();\n  const classes = useStyles(props);\n  const isXSmall = useMediaQuery(theme => theme.breakpoints.down('xs'));\n  const open = useSelector(state => state.admin.ui.sidebarOpen); // Used to force redraw on navigation\n\n  useSelector(state => state.router.location.pathname);\n  return React.createElement(\"div\", Object.assign({\n    className: classnames(classes.main, className)\n  }, rest), hasDashboard && React.createElement(MenuItemLink, Object.assign({\n    onClick: onMenuClick,\n    to: \"/\",\n    exact: true,\n    primaryText: translate('ra.page.dashboard'),\n    leftIcon: React.createElement(IconHome, null),\n    dense: dense,\n    sidebarIsOpen: open\n  }, props)), React.createElement(MenuItemLink, {\n    key: \"apis\",\n    to: \"/apis\",\n    primaryText: translate(`resources.apis.name`, {\n      smart_count: 2\n    }),\n    leftIcon: React.createElement(IconApi, null),\n    onClick: onMenuClick,\n    dense: dense,\n    sidebarIsOpen: open\n  }), React.createElement(MenuItemLink, {\n    key: \"applications\",\n    to: \"/applications\",\n    primaryText: translate(`resources.applications.name`, {\n      smart_count: 2\n    }),\n    leftIcon: React.createElement(IconApps, null),\n    onClick: onMenuClick,\n    dense: dense,\n    sidebarIsOpen: open\n  }), isXSmall && logout);\n};","map":null,"metadata":{},"sourceType":"module"}