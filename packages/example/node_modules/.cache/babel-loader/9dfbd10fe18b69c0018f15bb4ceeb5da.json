{"ast":null,"code":"import _slicedToArray from \"/Users/aricday/Projects/APIHub/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { Children, cloneElement, isValidElement, useState } from 'react';\nimport classnames from 'classnames';\nimport { useTranslate } from 'ra-core';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Divider from '@material-ui/core/Divider';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport { Link, useLocation } from 'react-router-dom';\nimport { CurrentUserId } from './dataProvider/userContexts';\nimport { UserOrganizationSwitcher, useUserContext } from './userContexts';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    menuItem: {\n      color: theme.palette.text.secondary,\n      marginBottom: theme.spacing()\n    },\n    menuItemLogout: {\n      marginBottom: '0px'\n    },\n    divider: {\n      marginBottom: theme.spacing()\n    },\n    icon: {\n      minWidth: theme.spacing(5)\n    }\n  };\n}, {\n  name: 'RaUserMenu'\n});\n/**\n * An hook to get the path of the related list of resources\n * from the current location.\n *\n * @example <caption>Simple usage</caption>\n *\n * const MyComponent = () => {\n *     const location = useLocation();\n *     console.log(location.pathname); // Shows \"/apis/uuid-of-api/show\"\n *\n *     const resourceListLocation = useResourceListLocation();\n *     console.log(resourceListLocation) // Show \"/apis\"\n * };\n *\n */\n\nexport var useResourceListLocation = function useResourceListLocation() {\n  var location = useLocation();\n  var RESOURCE_LIST_MATCH = /\\/[^/]*/;\n  var match = location.pathname.match(RESOURCE_LIST_MATCH);\n  return match[0];\n};\n/**\n * The ApiHub UserMenu used in the ApiHub AppBar.\n *\n * @param {*} props UserMenu properties\n *\n * @example <caption>Simple usage</caption>\n * <ApiHubUserMenu />\n *\n * const MyAppBar = props => <ApiHubAppBar userMenu={ApiHubUserMenu} {...props} />\n *\n */\n\nexport var ApiHubUserMenu = function ApiHubUserMenu(props) {\n  var translate = useTranslate();\n  var classes = useStyles(props);\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      anchorEl = _useState2[0],\n      setAnchorEl = _useState2[1];\n\n  var redirectTo = useResourceListLocation();\n\n  var _useUserContext = useUserContext(redirectTo),\n      _useUserContext2 = _slicedToArray(_useUserContext, 3),\n      userContext = _useUserContext2[0],\n      _handleChangeUserProfile = _useUserContext2[1],\n      // eslint-disable-line no-unused-vars\n  handleChangeUserActiveOrg = _useUserContext2[2];\n\n  var children = props.children,\n      label = props.label,\n      icon = props.icon,\n      logout = props.logout;\n\n  if (!logout && !children) {\n    return null;\n  }\n\n  var userName = userContext ? translate('apihub.menu.user_details.full_name', {\n    last_name: userContext.userDetails.lastName,\n    first_name: userContext.userDetails.firstName\n  }) : '';\n  var open = Boolean(anchorEl);\n\n  var handleMenu = function handleMenu(event) {\n    return setAnchorEl(event.currentTarget);\n  };\n\n  var handleClose = function handleClose() {\n    return setAnchorEl(null);\n  };\n\n  return React.createElement(\"div\", null, React.createElement(Tooltip, {\n    title: label && translate(label, {\n      _: label\n    })\n  }, React.createElement(Button, {\n    \"aria-label\": label && translate(label, {\n      _: label\n    }),\n    \"aria-owns\": open ? 'menu-appbar' : null,\n    \"aria-haspopup\": true,\n    color: \"inherit\",\n    onClick: handleMenu,\n    startIcon: icon,\n    endIcon: React.createElement(ArrowDropDownIcon, null),\n    key: userName\n  }, userName)), React.createElement(Menu, {\n    id: \"menu-appbar\",\n    anchorEl: anchorEl,\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    transformOrigin: {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    open: open,\n    onClose: handleClose\n  }, React.createElement(MenuItem, {\n    component: Link,\n    to: \"/userContexts/\".concat(CurrentUserId),\n    onClick: handleClose,\n    className: classes.menuItem\n  }, React.createElement(ListItemIcon, {\n    className: classes.icon\n  }, React.createElement(AccountCircle, null)), translate('resources.userContexts.actions.edit_profile')), React.createElement(Divider, {\n    className: classes.divider\n  }), React.createElement(UserOrganizationSwitcher, {\n    userContext: userContext,\n    onChangeUserContext: handleChangeUserActiveOrg\n  }), Children.map(children, function (menuItem) {\n    return isValidElement(menuItem) ? cloneElement(menuItem, {\n      className: classes.menuItem,\n      onClick: handleClose\n    }) : null;\n  }), cloneElement(logout, {\n    className: classnames(classes.menuItem, classes.menuItemLogout)\n  })));\n};\nApiHubUserMenu.defaultProps = {\n  label: 'ra.auth.user_menu',\n  icon: React.createElement(AccountCircle, null)\n};","map":null,"metadata":{},"sourceType":"module"}