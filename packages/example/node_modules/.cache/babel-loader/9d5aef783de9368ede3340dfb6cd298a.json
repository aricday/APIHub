{"ast":null,"code":"import React, { useMemo } from 'react';\nimport { Datagrid as RaDatagrid } from 'react-admin';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nconst computeDatagridPadding = (theme, props) => props && props.size === 'small' ? `${theme.spacing(0.5)}px ${theme.spacing(3)}px` : `${theme.spacing(1)}px ${theme.spacing(3)}px`;\n\nconst useStyles = makeStyles(theme => ({\n  headerCell: {\n    backgroundColor: theme.palette.action.selected,\n    fontWeight: theme.typography.fontWeightBold,\n    textTransform: 'uppercase'\n  },\n  rowCell: {\n    padding: props => computeDatagridPadding(theme, props)\n  }\n}));\nexport const Datagrid = props => {\n  const theme = useTheme();\n  const classes = useStyles(props); // HACK: For some reason, the header cells loses their styles when dynamically\n  // changing the theme. Passing a new key when changing the theme fixes that\n\n  const key = useMemo(() => Math.random(), [theme]); // eslint-disable-line\n\n  return React.createElement(RaDatagrid, Object.assign({\n    key: key,\n    classes: classes\n  }, props));\n};","map":null,"metadata":{},"sourceType":"module"}