{"ast":null,"code":"import _defineProperty from \"/Users/aricday/Projects/APIHub/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport React from 'react';\nimport classNames from 'classnames';\nimport { Labeled, TextField, DateField } from 'react-admin';\nimport { useTranslate } from 'ra-core';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { MarkdownField, LinkField } from '../ui';\nimport { VisibilityField } from './VisibilityField';\nimport { ApiAssetsField } from './ApiAssetsField';\nimport { ApplicationUsageField } from './Application';\nimport { AsyncTagsField } from './TagsField';\nvar useOverviewStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      display: 'flex',\n      fontFamily: theme.typography.body2.fontFamily,\n      fontSize: theme.typography.caption.fontSize,\n      margin: -theme.spacing(1)\n    },\n    enabledContainer: {\n      width: 'auto'\n    },\n    enabled: {\n      color: theme.palette.success.main,\n      '& $enabledIcon': {\n        backgroundColor: theme.palette.success.main\n      }\n    },\n    disabled: {\n      '& $enabledIcon': {\n        backgroundColor: theme.palette.text.disabled\n      }\n    },\n    enabledIcon: {\n      width: theme.spacing(1.5),\n      height: theme.spacing(1.5),\n      borderRadius: 99999,\n      marginRight: theme.spacing()\n    },\n    field: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      minWidth: '100px'\n    },\n    type: {\n      textTransform: 'uppercase'\n    }\n  };\n});\nvar useHeaderStyles = makeStyles(function (theme) {\n  return {\n    label: {\n      textTransform: 'uppercase'\n    },\n    value: {\n      fontWeight: theme.typography.fontWeightBold\n    }\n  };\n});\nvar useContentStyles = makeStyles(function (theme) {\n  return {\n    label: {\n      fontWeight: theme.typography.fontWeightBold,\n      fontSize: '1.5rem'\n    }\n  };\n});\nvar useGridStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      borderBottom: \"1px solid \".concat(theme.palette.divider)\n    }\n  };\n});\nvar useRightGridStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      borderBottom: \"1px solid \".concat(theme.palette.divider),\n      borderLeft: \"1px solid \".concat(theme.palette.divider)\n    }\n  };\n});\nexport var Overview = function Overview(_ref) {\n  var _classNames;\n\n  var record = _ref.record,\n      userIsPublisher = _ref.userIsPublisher;\n  var classes = useOverviewStyles();\n  var gridClasses = useGridStyles();\n  var rightGridClasses = useRightGridStyles();\n  var headerLabelClasses = useHeaderStyles();\n  var contentLabelClasses = useContentStyles();\n  var translate = useTranslate();\n  return React.createElement(Grid, {\n    className: classes.root,\n    container: true,\n    spacing: 3\n  }, React.createElement(Grid, {\n    container: true,\n    item: true,\n    md: 8,\n    sm: 12,\n    direction: \"row\",\n    classes: gridClasses\n  }, React.createElement(Grid, {\n    item: true\n  }, React.createElement(Labeled, {\n    label: \"resources.apis.fields.portalStatus\",\n    classes: headerLabelClasses,\n    className: classes.field\n  }, React.createElement(Grid, {\n    item: true,\n    container: true,\n    alignItems: \"center\",\n    className: classNames(classes.enabledContainer, (_classNames = {}, _defineProperty(_classNames, classes.enabled, record.portalStatus === 'ENABLED'), _defineProperty(_classNames, classes.disabled, record.portalStatus !== 'ENABLED'), _classNames))\n  }, React.createElement(\"div\", {\n    className: classes.enabledIcon\n  }), React.createElement(Typography, {\n    variant: \"body2\",\n    className: headerLabelClasses.value\n  }, translate(\"resources.apis.portalStatus.\".concat(record.portalStatus.toLowerCase())))))), React.createElement(Grid, {\n    item: true\n  }, React.createElement(Labeled, {\n    label: \"resources.apis.fields.apiServiceType\",\n    classes: headerLabelClasses,\n    className: classes.field\n  }, React.createElement(TextField, {\n    record: record,\n    source: \"apiServiceType\",\n    className: classNames(headerLabelClasses.value, classes.type)\n  }))), React.createElement(Grid, {\n    item: true\n  }, React.createElement(Labeled, {\n    label: \"resources.apis.fields.version\",\n    classes: headerLabelClasses,\n    className: classes.field\n  }, React.createElement(Typography, {\n    variant: \"body2\",\n    className: headerLabelClasses.value\n  }, translate('resources.apis.overview.fields.version', {\n    version: record.version\n  })))), React.createElement(Grid, {\n    item: true\n  }, React.createElement(Labeled, {\n    label: \"resources.apis.fields.accessStatus\",\n    classes: headerLabelClasses,\n    className: classes.field\n  }, React.createElement(VisibilityField, {\n    record: record,\n    source: \"accessStatus\",\n    className: headerLabelClasses.value\n  }))), React.createElement(Grid, {\n    item: true\n  }, React.createElement(Labeled, {\n    label: \"resources.apis.fields.modifyTs\",\n    classes: headerLabelClasses,\n    className: classes.field\n  }, React.createElement(DateField, {\n    record: record,\n    source: \"modifyTs\",\n    className: headerLabelClasses.value\n  })))), React.createElement(Grid, {\n    container: true,\n    item: true,\n    md: 4,\n    sm: 12,\n    classes: rightGridClasses\n  }, React.createElement(Grid, {\n    item: true\n  }, React.createElement(Labeled, {\n    label: \"resources.apis.fields.applicationUsage\",\n    classes: headerLabelClasses,\n    className: classes.field\n  }, React.createElement(ApplicationUsageField, {\n    id: record.id,\n    className: headerLabelClasses.value\n  })))), React.createElement(Grid, {\n    container: true,\n    item: true,\n    md: 8,\n    sm: 12,\n    direction: \"column\",\n    classes: gridClasses\n  }, userIsPublisher ? React.createElement(Grid, {\n    item: true\n  }, React.createElement(Labeled, {\n    label: \"resources.apis.fields.apiLocation\",\n    classes: contentLabelClasses,\n    className: classes.field\n  }, React.createElement(LinkField, {\n    record: record,\n    source: \"locationUrl\",\n    target: \"_blank\",\n    rel: \"noopener\"\n  }))) : null, React.createElement(Grid, {\n    item: true\n  }, React.createElement(Labeled, {\n    label: \"resources.apis.fields.description\",\n    classes: contentLabelClasses,\n    className: classes.field\n  }, React.createElement(MarkdownField, {\n    record: record,\n    source: \"description\"\n  }))), userIsPublisher ? React.createElement(Grid, {\n    item: true\n  }, React.createElement(Labeled, {\n    label: \"resources.apis.fields.privateDescription\",\n    classes: contentLabelClasses,\n    className: classes.field\n  }, React.createElement(MarkdownField, {\n    record: record,\n    source: \"privateDescription\"\n  }))) : null, React.createElement(Grid, {\n    item: true\n  }, React.createElement(Labeled, {\n    label: \"resources.apis.fields.tags\",\n    classes: contentLabelClasses,\n    className: classes.field\n  }, React.createElement(Grid, {\n    item: true,\n    container: true,\n    alignItems: \"center\"\n  }, React.createElement(AsyncTagsField, {\n    id: record.id\n  }))))), React.createElement(Grid, {\n    container: true,\n    item: true,\n    md: 4,\n    sm: 12,\n    classes: rightGridClasses\n  }, React.createElement(Labeled, {\n    label: \"resources.apis.fields.assets\",\n    classes: contentLabelClasses,\n    className: classes.field\n  }, React.createElement(ApiAssetsField, {\n    id: record.id\n  }))));\n};","map":null,"metadata":{},"sourceType":"module"}