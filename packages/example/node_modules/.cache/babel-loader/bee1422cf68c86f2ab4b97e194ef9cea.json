{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport classNames from 'classnames';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { toggleSidebar, useTranslate } from 'ra-core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Tooltip } from '@material-ui/core';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginLeft: '0.5em',\n    marginRight: '0.5em'\n  },\n  closed: {\n    transition: theme.transitions.create(['transform'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    transform: 'rotate(0deg)'\n  },\n  open: {\n    transition: theme.transitions.create(['transform'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    transform: 'rotate(180deg)'\n  }\n}));\nexport const SidebarButton = _a => {\n  var open = _a.open,\n      props = __rest(_a, [\"open\"]);\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const translate = useTranslate();\n  const label = translate(open ? 'ra.actions.close_sidebar' : 'ra.actions.open_sidebar');\n  return React.createElement(Tooltip, {\n    title: label\n  }, React.createElement(IconButton, Object.assign({\n    color: \"inherit\",\n    \"aria-label\": label,\n    onClick: () => dispatch(toggleSidebar()),\n    className: classNames(classes.root)\n  }, props), React.createElement(MenuIcon, {\n    classes: {\n      root: open ? classes.open : classes.closed\n    }\n  })));\n};","map":null,"metadata":{},"sourceType":"module"}