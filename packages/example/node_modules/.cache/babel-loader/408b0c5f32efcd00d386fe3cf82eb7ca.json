{"ast":null,"code":"import _slicedToArray from \"/Users/aricday/Projects/APIHub/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useEffect, useState } from 'react';\nimport { useApiHub } from '../ApiHubContext';\nexport const fetchResetPassword = async (url, username) => {\n  const response = await fetch(`${url}/admin/Portal.svc/ResetMyPassword()?Username='${username}'`);\n\n  if (response.status < 200 || response.status >= 300) {\n    throw new Error(response.statusText);\n  }\n\n  return await response.json();\n};\nexport const useResetPassword = () => {\n  const _useApiHub = useApiHub(),\n        url = _useApiHub.url;\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        username = _useState2[0],\n        setUsername = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        fetched = _useState4[0],\n        setFetched = _useState4[1];\n\n  useEffect(() => {\n    if (!fetched && username !== '') {\n      fetchResetPassword(url, username).then(() => {\n        setFetched(true);\n      });\n    }\n  }, [url, fetched, username]);\n  return [username, setUsername];\n};","map":null,"metadata":{},"sourceType":"module"}