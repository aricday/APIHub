{"ast":null,"code":"import React from 'react';\nimport { useTranslate, useGetOne, CRUD_GET_ONE } from 'react-admin';\nimport get from 'lodash/get';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { buildDocumentId } from '../../dataProvider/documents';\nimport { MarkdownView } from '../../ui';\nimport { DocumentToolbar } from './DocumentToolbar';\nconst useStyles = makeStyles(theme => ({\n  markdown: {\n    padding: theme.spacing(2)\n  }\n}));\nexport const DocumentView = ({\n  allDocuments,\n  document,\n  entityType,\n  entityUuid,\n  locale,\n  userCanEdit,\n  userCanDelete,\n  hasChildren,\n  onEdit,\n  onAddNewDocument,\n  onDeleteDocument\n}) => {\n  const translate = useTranslate();\n  const classes = useStyles();\n  const documentId = buildDocumentId(entityType, entityUuid, document.navtitle, document.locale);\n\n  const _useGetOne = useGetOne('documents', documentId, {\n    action: CRUD_GET_ONE\n  }),\n        data = _useGetOne.data,\n        loaded = _useGetOne.loaded,\n        loading = _useGetOne.loading,\n        error = _useGetOne.error;\n\n  if (loading) {\n    return React.createElement(LinearProgress, null);\n  }\n\n  if (loaded && !!(!data || error)) {\n    return React.createElement(Typography, {\n      variant: \"body2\",\n      color: \"error\"\n    }, translate('ra.page.error'));\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(DocumentToolbar, {\n    allDocuments: allDocuments,\n    document: document,\n    entityType: entityType,\n    entityUuid: entityUuid,\n    userCanEdit: userCanEdit,\n    userCanAdd: userCanEdit,\n    userCanDelete: userCanDelete,\n    hasChildren: hasChildren,\n    onEdit: onEdit,\n    onAddNewDocument: onAddNewDocument,\n    onDeleteDocument: onDeleteDocument,\n    locale: locale\n  }), React.createElement(MarkdownView, {\n    className: classes.markdown,\n    value: get(data, 'markdown', '')\n  }));\n};","map":null,"metadata":{},"sourceType":"module"}