{"ast":null,"code":"import _slicedToArray from \"/Users/aricday/Projects/APIHub/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { useState } from 'react';\nimport { useTranslate, useGetList } from 'ra-core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Grid from '@material-ui/core/Grid';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Typography from '@material-ui/core/Typography';\nimport { ApplicationCredentials } from './ApplicationCredentials';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      fontFamily: theme.typography.body2.fontFamily,\n      padding: '0px 20px'\n    },\n    formControl: {\n      minWidth: '240px'\n    }\n  };\n});\nexport var Applications = function Applications(_ref) {\n  var id = _ref.id;\n  var translate = useTranslate();\n  var classes = useStyles();\n\n  var _useGetList = useGetList('applications', undefined, {\n    field: 'name',\n    order: 'ASC'\n  }, {\n    apiUuid: id\n  }),\n      data = _useGetList.data,\n      loaded = _useGetList.loaded,\n      error = _useGetList.error;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedApi = _useState2[0],\n      setSelectedApi = _useState2[1];\n\n  var handleChange = function handleChange(event) {\n    var selectedApiId = event.target.value;\n\n    if (!data) {\n      return;\n    }\n\n    setSelectedApi(data[selectedApiId]);\n  };\n\n  if (!loaded) {\n    return React.createElement(LinearProgress, null);\n  }\n\n  if (!data || error) {\n    return React.createElement(Typography, {\n      variant: \"body2\",\n      color: \"error\"\n    }, translate('ra.page.error'));\n  }\n\n  var applications = Object.keys(data).map(function (key) {\n    return data[key];\n  });\n\n  if (applications.length === 0) {\n    return null;\n  }\n\n  return React.createElement(\"div\", {\n    className: classes.root\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 3\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 7\n  }, React.createElement(Typography, {\n    variant: \"h6\",\n    color: \"textSecondary\",\n    gutterBottom: true\n  }, translate('resources.apis.specification.actions.select_application')), React.createElement(FormControl, {\n    className: classes.formControl\n  }, React.createElement(InputLabel, {\n    id: \"select-application-label\"\n  }, translate('resources.apis.specification.fields.select_application_label')), React.createElement(Select, {\n    labelId: \"select-application-label\",\n    value: selectedApi ? selectedApi.id : '',\n    onChange: handleChange\n  }, applications.map(function (_ref2) {\n    var id = _ref2.id,\n        name = _ref2.name;\n    return React.createElement(MenuItem, {\n      key: id,\n      value: id\n    }, name);\n  })))), React.createElement(Grid, {\n    item: true,\n    xs: 5\n  }, selectedApi && React.createElement(ApplicationCredentials, {\n    id: selectedApi.id\n  }))));\n};","map":null,"metadata":{},"sourceType":"module"}