{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { useTranslate, useGetManyReference } from 'ra-core';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Link from '@material-ui/core/Link';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport get from 'lodash/get';\nimport { useApiHub } from '../ApiHubContext';\nconst useStyles = makeStyles(theme => ({\n  error: {\n    color: theme.palette.error.main,\n    marginBottom: theme.spacing()\n  }\n}));\nconst DownloadButton = forwardRef((props, ref) => React.createElement(Button, Object.assign({\n  variant: \"outlined\",\n  color: \"primary\",\n  ref: ref\n}, props)));\n\nconst DownloadFilesButton = ({\n  id\n}) => {\n  const translate = useTranslate();\n\n  const _useApiHub = useApiHub(),\n        urlWithTenant = _useApiHub.urlWithTenant;\n\n  const href = `${urlWithTenant}/api-management/1.0/apis/${id}/assets/archive`;\n  const label = translate('resources.apis.overview.actions.download_assets');\n  return React.createElement(Link, {\n    component: DownloadButton,\n    href: href,\n    download: \"assets.zip\",\n    \"aria-label\": label\n  }, label);\n};\n\nexport const ApiAssetsField = ({\n  id\n}) => {\n  const translate = useTranslate();\n  const classes = useStyles();\n\n  const _useGetManyReference = useGetManyReference('assets', 'id', id, undefined, undefined, undefined, 'apis'),\n        data = _useGetManyReference.data,\n        loaded = _useGetManyReference.loaded,\n        error = _useGetManyReference.error;\n\n  if (!loaded) {\n    return React.createElement(LinearProgress, null);\n  }\n\n  if (error) {\n    return React.createElement(Typography, {\n      variant: \"body1\",\n      className: classes.error\n    }, translate('ra.page.error'));\n  }\n\n  if (!data) {\n    return React.createElement(Typography, {\n      variant: \"body1\"\n    }, translate('resources.apis.overview.notifications.no_assets'));\n  }\n\n  const links = Object.keys(data).map(key => {\n    const _data$key = data[key],\n          id = _data$key.id,\n          name = _data$key.name,\n          type = _data$key.type,\n          links = _data$key.links;\n    return {\n      id,\n      name,\n      type: type,\n      href: get(links, '[0].href', null),\n      rel: get(links, '[0].rel', null)\n    };\n  });\n  return React.createElement(AssetsList, {\n    id: id,\n    links: links\n  });\n};\nexport const AssetsList = ({\n  id,\n  links\n}) => {\n  const _useApiHub2 = useApiHub(),\n        urlWithTenant = _useApiHub2.urlWithTenant;\n\n  return React.createElement(React.Fragment, null, React.createElement(List, null, links.length > 0 && links.map(link => React.createElement(ListItem, {\n    key: link.id,\n    disableGutters: true\n  }, React.createElement(Link, {\n    type: link.type,\n    href: `${urlWithTenant}${link.href}`,\n    download: link.name\n  }, link.name)))), links.length > 1 ? React.createElement(DownloadFilesButton, {\n    id: id\n  }) : null);\n};","map":null,"metadata":{},"sourceType":"module"}