{"ast":null,"code":"import _regeneratorRuntime from \"/Users/aricday/Projects/APIHub/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React, { cloneElement, useCallback } from 'react';\nimport MuiGrid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useHistory } from 'react-router-dom';\nimport { linkToRecord } from 'ra-core';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      margin: '-2px'\n    },\n    gridList: {\n      width: '100%',\n      marginTop: 0,\n      marginBottom: 0,\n      marginLeft: -theme.spacing(),\n      marginRight: -theme.spacing()\n    },\n    placeholder: {\n      backgroundColor: theme.palette.grey[300],\n      height: '100%'\n    }\n  };\n});\n\nvar times = function times(nbChildren, fn) {\n  return Array.from({\n    length: nbChildren\n  }, function (_, key) {\n    return fn(key);\n  });\n};\n\nexport var LoadingCardGrid = function LoadingCardGrid(_ref) {\n  var _ref$nbItems = _ref.nbItems,\n      nbItems = _ref$nbItems === void 0 ? 10 : _ref$nbItems;\n  var classes = useStyles();\n  return React.createElement(\"div\", {\n    className: classes.root\n  }, React.createElement(MuiGrid, {\n    container: true,\n    className: classes.gridList\n  }, times(nbItems, function (key) {\n    return React.createElement(MuiGrid, {\n      item: true,\n      key: key\n    }, React.createElement(\"div\", {\n      className: classes.placeholder\n    }));\n  })));\n};\nexport var LoadedCardGrid = function LoadedCardGrid(_ref2) {\n  var basePath = _ref2.basePath,\n      children = _ref2.children,\n      data = _ref2.data,\n      ids = _ref2.ids,\n      resource = _ref2.resource,\n      rowClick = _ref2.rowClick,\n      _ref2$spacing = _ref2.spacing,\n      spacing = _ref2$spacing === void 0 ? 2 : _ref2$spacing;\n  var classes = useStyles();\n  return React.createElement(\"div\", {\n    className: classes.root\n  }, React.createElement(MuiGrid, {\n    className: classes.gridList,\n    container: true,\n    spacing: spacing\n  }, ids.map(function (id) {\n    return React.createElement(CardGridItem, {\n      key: id,\n      id: id,\n      basePath: basePath,\n      record: data[id],\n      resource: resource,\n      rowClick: rowClick\n    }, children);\n  })));\n};\nexport var CardGrid = function CardGrid(_a) {\n  var loaded = _a.loaded,\n      props = __rest(_a, [\"loaded\"]);\n\n  return loaded ? React.createElement(LoadedCardGrid, Object.assign({}, props)) : React.createElement(LoadingCardGrid, Object.assign({}, props));\n};\nexport var CardGridItem = function CardGridItem(_a) {\n  var basePath = _a.basePath,\n      children = _a.children,\n      id = _a.id,\n      record = _a.record,\n      resource = _a.resource,\n      rowClick = _a.rowClick,\n      _a$xsSize = _a.xsSize,\n      xsSize = _a$xsSize === void 0 ? 12 : _a$xsSize,\n      _a$smSize = _a.smSize,\n      smSize = _a$smSize === void 0 ? 6 : _a$smSize,\n      _a$mdSize = _a.mdSize,\n      mdSize = _a$mdSize === void 0 ? 4 : _a$mdSize,\n      _a$lgSize = _a.lgSize,\n      lgSize = _a$lgSize === void 0 ? 3 : _a$lgSize,\n      _a$xlSize = _a.xlSize,\n      xlSize = _a$xlSize === void 0 ? 3 : _a$xlSize,\n      props = __rest(_a, [\"basePath\", \"children\", \"id\", \"record\", \"resource\", \"rowClick\", \"xsSize\", \"smSize\", \"mdSize\", \"lgSize\", \"xlSize\"]);\n\n  var history = useHistory();\n  var handleClick = useCallback(function _callee(event) {\n    var effect;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (rowClick) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 2:\n            event.persist();\n\n            if (!(typeof rowClick === 'function')) {\n              _context.next = 9;\n              break;\n            }\n\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(rowClick(id, basePath, record));\n\n          case 6:\n            _context.t0 = _context.sent;\n            _context.next = 10;\n            break;\n\n          case 9:\n            _context.t0 = rowClick;\n\n          case 10:\n            effect = _context.t0;\n            _context.t1 = effect;\n            _context.next = _context.t1 === 'edit' ? 14 : _context.t1 === 'show' ? 16 : 18;\n            break;\n\n          case 14:\n            history.push(linkToRecord(basePath, id));\n            return _context.abrupt(\"return\");\n\n          case 16:\n            history.push(linkToRecord(basePath, id, 'show'));\n            return _context.abrupt(\"return\");\n\n          case 18:\n            if (effect) history.push(effect);\n            return _context.abrupt(\"return\");\n\n          case 20:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  }, [basePath, history, id, record, rowClick]);\n  return React.createElement(MuiGrid, Object.assign({\n    item: true,\n    onClick: handleClick,\n    xs: xsSize,\n    sm: smSize,\n    md: mdSize,\n    lg: lgSize,\n    xl: xlSize\n  }, props), cloneElement(children, {\n    basePath: basePath,\n    id: id,\n    record: record,\n    resource: resource\n  }));\n};","map":null,"metadata":{},"sourceType":"module"}