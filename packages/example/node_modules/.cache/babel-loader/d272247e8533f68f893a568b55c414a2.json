{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React from 'react';\nimport { useTranslate } from 'ra-core';\nimport get from 'lodash/get';\nimport Typography from '@material-ui/core/Typography';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport format from 'date-fns/format';\nexport var LastUpdateField = function LastUpdateField(_a) {\n  var basePath = _a.basePath,\n      record = _a.record,\n      source = _a.source,\n      addPrefix = _a.addPrefix,\n      props = __rest(_a, [\"basePath\", \"record\", \"source\", \"addPrefix\"]);\n\n  var value = get(record, source);\n  var translate = useTranslate();\n\n  if (!value) {\n    return null;\n  }\n\n  var date = new Date(value);\n  var formattedDate = format(date, 'P');\n  var label = addPrefix ? translate('resources.apis.last_update.fields.updated', {\n    date: formattedDate\n  }) : formattedDate;\n  return React.createElement(Tooltip, {\n    title: format(date, 'P')\n  }, React.createElement(Typography, Object.assign({\n    variant: \"body2\"\n  }, props), label));\n};","map":null,"metadata":{},"sourceType":"module"}