{"ast":null,"code":"import React from 'react';\nimport { SaveButton, Toolbar } from 'react-admin';\nimport { ValidationError } from 'ra-core';\nimport { makeStyles, Typography } from '@material-ui/core';\nimport { FormSpy } from 'react-final-form';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    toolbar: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'stretch',\n      flexBasis: '100%',\n      backgroundColor: 'transparent',\n      padding: 0,\n      marginTop: theme.spacing(2)\n    },\n    error: {\n      marginTop: theme.spacing(2)\n    },\n    success: {\n      color: theme.palette.success.main,\n      marginTop: theme.spacing(2)\n    }\n  };\n});\nvar subscription = {\n  error: true,\n  touched: true,\n  submitSucceeded: true\n};\nexport var AccountSetupToolbar = function AccountSetupToolbar(props) {\n  var classes = useStyles(props);\n  return React.createElement(FormSpy, {\n    subscription: subscription\n  }, function (_ref) {\n    var error = _ref.error,\n        touched = _ref.touched;\n    var showError = error && touched.password && touched.confirm_password;\n    return React.createElement(React.Fragment, null, showError ? React.createElement(Typography, {\n      variant: \"body1\",\n      color: \"error\",\n      className: classes.error\n    }, React.createElement(ValidationError, {\n      error: error\n    })) : null, React.createElement(Toolbar, Object.assign({\n      className: classes.toolbar\n    }, props), React.createElement(SaveButton, {\n      icon: React.createElement(\"span\", null),\n      label: \"apihub.account_setup.actions.submit\"\n    })));\n  });\n};","map":null,"metadata":{},"sourceType":"module"}