{"ast":null,"code":"import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport unified from 'unified';\nimport parse from 'remark-parse';\nimport remark2react from 'remark-react';\nimport removeMarkdown from 'remove-markdown';\nimport merge from 'lodash/merge';\nexport const removeTags = text => {\n  return removeMarkdown(text);\n}; // TODO: complete supported markdown syntax\n\nconst markdownOptions = {\n  remarkReactComponents: {\n    h1: props => React.createElement(Typography, Object.assign({\n      variant: \"h1\"\n    }, props)),\n    h2: props => React.createElement(Typography, Object.assign({\n      variant: \"h2\"\n    }, props)),\n    h3: props => React.createElement(Typography, Object.assign({\n      variant: \"h3\"\n    }, props)),\n    h4: props => React.createElement(Typography, Object.assign({\n      variant: \"h4\"\n    }, props)),\n    h5: props => React.createElement(Typography, Object.assign({\n      variant: \"h5\"\n    }, props)),\n    h6: props => React.createElement(Typography, Object.assign({\n      variant: \"h6\"\n    }, props)),\n    p: props => React.createElement(Typography, Object.assign({\n      component: \"p\",\n      variant: \"body1\"\n    }, props)),\n    a: props => React.createElement(Link, Object.assign({}, props)),\n    li: props => React.createElement(Typography, Object.assign({\n      component: \"li\",\n      variant: \"body1\"\n    }, props)),\n    td: props => React.createElement(Typography, Object.assign({\n      component: \"td\",\n      variant: \"body1\"\n    }, props)),\n    code: props => {\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      const classes = useMarkdownStyles();\n      return React.createElement(Typography, Object.assign({\n        component: \"code\",\n        variant: \"body1\",\n        className: classes.code\n      }, props));\n    }\n  }\n};\nconst useMarkdownStyles = makeStyles(theme => ({\n  code: {\n    fontFamily: 'initial',\n    backgroundColor: theme.palette.grey['300'],\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n    paddingTop: theme.spacing(0.5),\n    paddingBottom: theme.spacing(0.5)\n  }\n}));\nexport const markdownRenderer = (text, options = {}) => unified().use(parse).use(remark2react, merge({}, markdownOptions, options)).processSync(text).contents;","map":null,"metadata":{},"sourceType":"module"}