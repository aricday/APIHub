{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React from 'react';\nimport { SaveButton, Toolbar } from 'react-admin';\nimport { ValidationError } from 'ra-core';\nimport { makeStyles } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nconst useStyles = makeStyles(theme => ({\n  toolbar: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'stretch',\n    flexBasis: '100%',\n    backgroundColor: 'transparent',\n    padding: 0\n  },\n  circularProgress: {\n    color: theme.palette.grey[500]\n  }\n}));\nexport const LoginToolbar = _a => {\n  var _a$loading = _a.loading,\n      loading = _a$loading === void 0 ? false : _a$loading,\n      _a$error = _a.error,\n      error = _a$error === void 0 ? null : _a$error,\n      rest = __rest(_a, [\"loading\", \"error\"]);\n\n  const classes = useStyles(rest);\n  return React.createElement(React.Fragment, null, error ? React.createElement(Typography, {\n    variant: \"body1\",\n    color: \"error\",\n    className: classes.error\n  }, React.createElement(ValidationError, {\n    error: error\n  })) : null, React.createElement(Toolbar, Object.assign({\n    className: classes.toolbar\n  }, rest), React.createElement(SaveButton, {\n    icon: loading ? React.createElement(CircularProgress, {\n      className: classes.circularProgress,\n      size: 15\n    }) : React.createElement(\"span\", null),\n    label: \"apihub.login.actions.sign_in\",\n    disabled: loading\n  })));\n};","map":null,"metadata":{},"sourceType":"module"}