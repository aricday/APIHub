{"ast":null,"code":"import _defineProperty from \"/Users/aricday/Projects/APIHub/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/Users/aricday/Projects/APIHub/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport React from 'react';\nimport { required, minLength, maxLength, SimpleForm, TextInput, useTranslate } from 'react-admin';\nimport { makeStyles, Typography, InputAdornment } from '@material-ui/core';\nimport { InfoOutlined } from '@material-ui/icons';\nimport { FORM_ERROR } from 'final-form';\nimport { useApiHub } from '../../ApiHubContext';\nimport { HtmlTooltip, PasswordInput } from '../../ui';\nimport { TermsInput } from './TermsInput';\nimport { AccountSetupToolbar } from './AccountSetupToolbar';\nimport { validatePassword } from '../validatePassword';\nimport { checkUsernameUnicity } from './useAccountData';\n\nvar mustBeTrue = function mustBeTrue() {\n  return function (value) {\n    return !value ? 'apihub.account_setup.terms_of_use.terms_of_use_validation' : undefined;\n  };\n};\n\nvar checkUnicity = function checkUnicity(url) {\n  return function _callee(value) {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(value.length < 6)) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 2:\n            _context.prev = 2;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(checkUsernameUnicity(url, value));\n\n          case 5:\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](2);\n            return _context.abrupt(\"return\", 'apihub.account_setup.validation.error_username_not_unique');\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[2, 7]]);\n  };\n};\n\nvar useStyles = makeStyles(function (theme) {\n  return {\n    form: {\n      '& >:first-child': {\n        padding: 0\n      },\n      '& .ra-input': {\n        marginTop: theme.spacing(2)\n      }\n    },\n    title: {\n      fontSize: theme.typography.fontSize * 2,\n      marginBottom: theme.spacing(6),\n      color: theme.palette.getContrastText(theme.palette.background.default)\n    }\n  };\n});\nexport var AccountSetupForm = function AccountSetupForm(_ref) {\n  var initialValues = _ref.initialValues,\n      onSubmit = _ref.onSubmit;\n  var classes = useStyles();\n  var translate = useTranslate();\n\n  var _useApiHub = useApiHub(),\n      urlWithApi = _useApiHub.urlWithApi;\n\n  var validate = function validate(_ref2) {\n    var password = _ref2.password,\n        confirm_password = _ref2.confirm_password;\n\n    if (password !== confirm_password) {\n      return _defineProperty({}, FORM_ERROR, 'apihub.account_setup.validation.error_password_match');\n    }\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(Typography, {\n    variant: \"h2\",\n    className: classes.title\n  }, translate('apihub.account_setup.title')), React.createElement(SimpleForm, {\n    className: classes.form,\n    save: onSubmit,\n    toolbar: React.createElement(AccountSetupToolbar, null),\n    validate: validate,\n    initialValues: initialValues\n  }, React.createElement(TextInput, {\n    source: \"firstName\",\n    type: \"text\",\n    label: \"apihub.account_setup.fields.firstname\",\n    variant: \"outlined\",\n    fullWidth: true,\n    validate: required()\n  }), React.createElement(TextInput, {\n    source: \"lastName\",\n    type: \"text\",\n    label: \"apihub.account_setup.fields.lastname\",\n    variant: \"outlined\",\n    fullWidth: true,\n    validate: required()\n  }), React.createElement(TextInput, {\n    source: \"email\",\n    type: \"email\",\n    label: \"apihub.account_setup.fields.email\",\n    variant: \"outlined\",\n    fullWidth: true,\n    validate: required(),\n    disabled: true\n  }), React.createElement(TextInput, {\n    source: \"userName\",\n    type: \"text\",\n    label: \"apihub.account_setup.fields.username\",\n    variant: \"outlined\",\n    autoComplete: \"new_username\",\n    fullWidth: true,\n    InputProps: {\n      endAdornment: React.createElement(InputAdornment, {\n        position: \"end\"\n      }, React.createElement(HtmlTooltip, {\n        className: classes.tootip,\n        title: translate('apihub.tooltip_username'),\n        placement: \"right\",\n        arrow: true\n      }, React.createElement(InfoOutlined, null)))\n    },\n    validate: [required(), minLength(6), maxLength(60), checkUnicity(urlWithApi)]\n  }), React.createElement(PasswordInput, {\n    source: \"password\",\n    label: \"apihub.account_setup.fields.password\",\n    variant: \"outlined\",\n    autoComplete: \"new_password\",\n    fullWidth: true,\n    validate: [required(), validatePassword],\n    title: \"apihub.account_setup.validation.tooltip_password\"\n  }), React.createElement(PasswordInput, {\n    source: \"confirm_password\",\n    label: \"apihub.account_setup.fields.confirm_password\",\n    variant: \"outlined\",\n    autoComplete: \"confirm_new_password\",\n    fullWidth: true,\n    validate: [required()],\n    title: \"apihub.account_setup.validation.tooltip_password_confirm\"\n  }), React.createElement(TermsInput, {\n    source: \"terms\",\n    type: \"checkbox\",\n    validate: [mustBeTrue()]\n  })));\n};","map":null,"metadata":{},"sourceType":"module"}