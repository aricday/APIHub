{"ast":null,"code":"import React from 'react';\nimport { useTranslate, useGetOne, CRUD_GET_ONE } from 'react-admin';\nimport get from 'lodash/get';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { buildDocumentId } from '../../dataProvider/documents';\nimport { MarkdownView } from '../../ui';\nimport { DocumentToolbar } from './DocumentToolbar';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    markdown: {\n      padding: theme.spacing(2)\n    }\n  };\n});\nexport var DocumentView = function DocumentView(_ref) {\n  var allDocuments = _ref.allDocuments,\n      document = _ref.document,\n      entityType = _ref.entityType,\n      entityUuid = _ref.entityUuid,\n      locale = _ref.locale,\n      userCanEdit = _ref.userCanEdit,\n      userCanDelete = _ref.userCanDelete,\n      hasChildren = _ref.hasChildren,\n      onEdit = _ref.onEdit,\n      onAddNewDocument = _ref.onAddNewDocument,\n      onDeleteDocument = _ref.onDeleteDocument;\n  var translate = useTranslate();\n  var classes = useStyles();\n  var documentId = buildDocumentId(entityType, entityUuid, document.navtitle, document.locale);\n\n  var _useGetOne = useGetOne('documents', documentId, {\n    action: CRUD_GET_ONE\n  }),\n      data = _useGetOne.data,\n      loaded = _useGetOne.loaded,\n      loading = _useGetOne.loading,\n      error = _useGetOne.error;\n\n  if (loading) {\n    return React.createElement(LinearProgress, null);\n  }\n\n  if (loaded && !!(!data || error)) {\n    return React.createElement(Typography, {\n      variant: \"body2\",\n      color: \"error\"\n    }, translate('ra.page.error'));\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(DocumentToolbar, {\n    allDocuments: allDocuments,\n    document: document,\n    entityType: entityType,\n    entityUuid: entityUuid,\n    userCanEdit: userCanEdit,\n    userCanAdd: userCanEdit,\n    userCanDelete: userCanDelete,\n    hasChildren: hasChildren,\n    onEdit: onEdit,\n    onAddNewDocument: onAddNewDocument,\n    onDeleteDocument: onDeleteDocument,\n    locale: locale\n  }), React.createElement(MarkdownView, {\n    className: classes.markdown,\n    value: get(data, 'markdown', '')\n  }));\n};","map":null,"metadata":{},"sourceType":"module"}