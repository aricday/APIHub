{"ast":null,"code":"import _slicedToArray from \"/Users/aricday/Projects/APIHub/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { CRUD_DELETE, useDelete, useNotify, useTranslate, useRefresh } from 'ra-core';\nexport var DeleteDocumentButton = function DeleteDocumentButton(_a) {\n  var document = _a.document,\n      entityType = _a.entityType,\n      entityUuid = _a.entityUuid,\n      hasChildren = _a.hasChildren,\n      onClick = _a.onClick,\n      rest = __rest(_a, [\"document\", \"entityType\", \"entityUuid\", \"hasChildren\", \"onClick\"]);\n\n  var translate = useTranslate();\n  var notify = useNotify();\n  var refresh = useRefresh();\n\n  var _useDelete = useDelete('documents', document.id, document, {\n    action: CRUD_DELETE,\n    onSuccess: function onSuccess() {\n      notify('resources.documents.notifications.delete_success', 'info', {\n        smart_count: 1\n      });\n      refresh();\n      onClick();\n    },\n    onFailure: function onFailure() {\n      notify('resources.documents.notifications.delete_error', 'warning');\n    }\n  }),\n      _useDelete2 = _slicedToArray(_useDelete, 1),\n      deleteDocument = _useDelete2[0];\n\n  var handleDeleteDocument = function handleDeleteDocument() {\n    var shouldDelete = global.window.confirm(hasChildren ? translate('resources.apis.documentation.confirm_delete_document_with_children') : translate('resources.apis.documentation.confirm_delete_document_without_children'));\n\n    if (shouldDelete) {\n      deleteDocument();\n    }\n  };\n\n  return React.createElement(Button, Object.assign({\n    onClick: handleDeleteDocument\n  }, rest));\n};","map":null,"metadata":{},"sourceType":"module"}