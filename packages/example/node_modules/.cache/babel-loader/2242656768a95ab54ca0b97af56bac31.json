{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { Model, Server } from 'miragejs';\nimport minimongo from 'minimongo';\nimport defaultData from './defaultData.json';\nimport { login, getPublicKey, resetPassword, checkUserNameIsUnique, passwordResetTokenValidate, updateMyPassword, logout, getAccountSetup, putAccountSetup, getUserContexts } from './handlers/authentication';\nimport { listApis, getApi, listApiPermissions, getApiSpecContent } from './handlers/apis';\nimport { listApplications } from './handlers/applications';\nimport { listDocuments, getDocumentsTree, postDocument, putDocument, getDocument } from './handlers/documents';\nimport { listApiTags, listTags } from './handlers/tags';\nimport { listApiAssets } from './handlers/assets';\nimport { promisify } from './promisify';\nvar database;\n/**\n * Starts a Mirage Server mocking all the ApiHub APIs. This server runs in the browser and intercepts\n * all requests made to the /api routes\n * @param {options} Options The options.\n * @param {options.timing} timing The delay before responding\n */\n\nexport var startApiHubMockedServer = function startApiHubMockedServer(_a) {\n  if (_a === void 0) {\n    _a = {\n      data: defaultData,\n      timing: 500\n    };\n  }\n\n  return __awaiter(void 0, void 0, void 0, function () {\n    var server;\n\n    var data = _a.data,\n        options = __rest(_a, [\"data\"]);\n\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          return [4\n          /*yield*/\n          , getDatabase(data)];\n\n        case 1:\n          database = _b.sent();\n          server = new Server({\n            models: {\n              userContexts: Model.extend(),\n              apis: Model.extend(),\n              applications: Model.extend(),\n              documents: Model.extend()\n            },\n            seeds: function seeds(server) {\n              server.db.loadData(data);\n            },\n            routes: function routes() {\n              this.urlPrefix = 'https://apim.dev.ca.com';\n              this.get('/admin/passwordResetTokenValidate', passwordResetTokenValidate(database), options);\n              this.post('/admin/UpdateMyPassword', updateMyPassword(database), options);\n              this.get('/admin/Portal.svc/ResetMyPassword()', resetPassword(database), options);\n              this.get('/admin/logout', logout(database), options);\n              this.post('api/apim/authenticate/login', login(database), options);\n              this.get('api/admin/Portal.svc/UserNameUnique()', checkUserNameIsUnique(database), options);\n              this.get('api/admin/accountSetup', getAccountSetup(database), options);\n              this.put('/admin/accountSetup', putAccountSetup(database), options);\n              this.get('api/apim/authenticate/getPublicKey', getPublicKey(database), options);\n              this.get('api/apim/userContexts', getUserContexts(database), options);\n              this.get('api/apim/api-management/1.0/apis', listApis(database), options);\n              this.get('api/apim/api-management/1.0/applications', listApplications(database), options);\n              this.get('api/apim/document-service/0.1/:type/:typeUuid/docs', listDocuments(database), options);\n              this.post('api/apim/document-service/0.1/:type/:typeUuid/docs', postDocument(database), options);\n              this.put('api/apim/document-service/0.1/:type/:typeUuid/docs/:navtitle', putDocument(database), options);\n              this.get('api/apim/api-management/1.0/apis/:id', getApi(database), options);\n              this.get('api/apim/document-service/0.1/:type/:typeUuid/docs/tree', getDocumentsTree(database), options);\n              this.get('api/apim/document-service/0.1/:type/:typeUuid/docs/:navtitle', getDocument(database), options);\n              this.get('api/apim/api-management/1.0/apis/:id/tags', listApiTags(database), options);\n              this.get('api/apim/api-management/1.0/apis/:id/assets', listApiAssets(database), options);\n              this.get('api/apim/tags', listTags(database), options);\n              this.get('admin/api-management/internal/permissions/apis/:id/permitted', listApiPermissions(database), options); // This is the only way I found to make the SpecContent route work.\n              // Its url looks like api/apim/2.0/Apis(':id')/SpecContent.\n              // It seems either the parenthesises or the quotes make the route parameter\n              // parsing fail.\n\n              this.get('api/apim/2.0/*path', getApiSpecContent(database), options);\n            }\n          });\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n};\n\nfunction getDatabase(initialData) {\n  return __awaiter(this, void 0, void 0, function () {\n    var db;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          return [4\n          /*yield*/\n          , new Promise(function (resolve, reject) {\n            var indexedDb = new minimongo.IndexedDb({\n              namespace: 'layer7'\n            }, function () {\n              return resolve(indexedDb);\n            }, reject);\n          })];\n\n        case 1:\n          db = _a.sent();\n          return [4\n          /*yield*/\n          , _initDatabase(db, initialData)];\n\n        case 2:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , db];\n      }\n    });\n  });\n}\n\nfunction _initDatabase(db, initialData) {\n  if (initialData === void 0) {\n    initialData = defaultData;\n  }\n\n  return __awaiter(this, void 0, void 0, function () {\n    var hasData;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          return [4\n          /*yield*/\n          , Promise.all([promisify(db.addCollection.bind(db), 'apis'), promisify(db.addCollection.bind(db), 'applications'), promisify(db.addCollection.bind(db), 'userContexts'), promisify(db.addCollection.bind(db), 'documents'), promisify(db.addCollection.bind(db), 'specs'), promisify(db.addCollection.bind(db), 'assets'), promisify(db.addCollection.bind(db), 'tags')])];\n\n        case 1:\n          _a.sent();\n\n          return [4\n          /*yield*/\n          , promisify(db.apis.find().fetch)];\n\n        case 2:\n          hasData = _a.sent().length > 0;\n          if (!!hasData) return [3\n          /*break*/\n          , 9];\n          return [4\n          /*yield*/\n          , promisify(db.tags.upsert.bind(db.tags), initialData.tags)];\n\n        case 3:\n          _a.sent();\n\n          return [4\n          /*yield*/\n          , promisify(db.apis.upsert.bind(db.apis), initialData.apis)];\n\n        case 4:\n          _a.sent();\n\n          return [4\n          /*yield*/\n          , promisify(db.applications.upsert.bind(db.applications), initialData.applications)];\n\n        case 5:\n          _a.sent();\n\n          return [4\n          /*yield*/\n          , promisify(db.userContexts.upsert.bind(db.userContexts), initialData.userContexts)];\n\n        case 6:\n          _a.sent();\n\n          return [4\n          /*yield*/\n          , promisify(db.documents.upsert.bind(db.documents), initialData.documents)];\n\n        case 7:\n          _a.sent();\n\n          return [4\n          /*yield*/\n          , promisify(db.assets.upsert.bind(db.assets), initialData.assets)];\n\n        case 8:\n          _a.sent();\n\n          _a.label = 9;\n\n        case 9:\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n}\n\nwindow.Layer7Mock = {\n  clearDatabase: function clearDatabase() {\n    database.removeCollection('apis');\n    database.removeCollection('applications');\n    database.removeCollection('userContexts');\n    database.removeCollection('documents');\n    database.removeCollection('specs');\n    database.removeCollection('assets');\n    database.removeCollection('tags');\n  },\n  initDatabase: function initDatabase(initialData) {\n    _initDatabase(database, initialData);\n  }\n};","map":null,"metadata":{},"sourceType":"module"}