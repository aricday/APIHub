{"ast":null,"code":"import _regeneratorRuntime from \"/Users/aricday/Projects/APIHub/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _slicedToArray from \"/Users/aricday/Projects/APIHub/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { useState } from 'react';\nimport { PasswordInput, required, SimpleForm, TextInput, useLogin, useTranslate } from 'react-admin';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { makeStyles, Link, Typography } from '@material-ui/core';\nimport { LoginToolbar } from './LoginToolbar';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    form: {\n      '& >:first-child': {\n        padding: 0\n      }\n    },\n    title: {\n      fontSize: theme.typography.fontSize * 2,\n      marginBottom: theme.spacing(6),\n      color: theme.palette.getContrastText(theme.palette.background.default)\n    }\n  };\n});\nexport var LoginForm = function LoginForm(props) {\n  var login = useLogin();\n  var classes = useStyles(props);\n  var translate = useTranslate();\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      error = _useState4[0],\n      setError = _useState4[1];\n\n  var submit = function submit(_ref) {\n    var username, password;\n    return _regeneratorRuntime.async(function submit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            username = _ref.username, password = _ref.password;\n            setError(null);\n            setIsLoading(true);\n            _context.prev = 3;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(login({\n              scheme: 'credentials',\n              username: username,\n              password: password\n            }));\n\n          case 6:\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](3);\n            setError('apihub.login.notifications.invalid_credentials');\n\n          case 11:\n            setIsLoading(false);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[3, 8]]);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(Typography, {\n    variant: \"h2\",\n    className: classes.title\n  }, translate('apihub.login.title')), React.createElement(SimpleForm, {\n    className: classes.form,\n    save: submit,\n    toolbar: React.createElement(LoginToolbar, {\n      loading: isLoading,\n      error: error\n    })\n  }, React.createElement(TextInput, {\n    source: \"username\",\n    type: \"text\",\n    label: \"apihub.login.fields.username\",\n    variant: \"outlined\",\n    fullWidth: true,\n    validate: required()\n  }), React.createElement(PasswordInput, {\n    source: \"password\",\n    label: \"apihub.login.fields.password\",\n    variant: \"outlined\",\n    fullWidth: true,\n    validate: required()\n  })), React.createElement(Typography, {\n    variant: \"body1\"\n  }, React.createElement(Link, {\n    component: RouterLink,\n    to: \"/reset-password\"\n  }, translate('apihub.login.actions.forgot_password'))));\n};","map":null,"metadata":{},"sourceType":"module"}