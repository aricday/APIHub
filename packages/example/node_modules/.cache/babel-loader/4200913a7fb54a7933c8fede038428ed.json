{"ast":null,"code":"import _defineProperty from \"/Users/aricday/Projects/APIHub/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport React from 'react';\nimport { useTranslate } from 'ra-core';\nimport classNames from 'classnames';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport Grid from '@material-ui/core/Grid';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      height: '100%',\n      display: 'flex',\n      flexDirection: 'column',\n      cursor: 'pointer'\n    },\n    content: {\n      display: 'flex',\n      flexDirection: 'column',\n      flex: 1\n    },\n    header: {\n      borderBottomColor: theme.palette.divider,\n      borderBottomWidth: 1,\n      borderBottomStyle: 'solid'\n    },\n    subheader: {\n      display: 'flex',\n      fontFamily: theme.typography.body2.fontFamily,\n      fontSize: theme.typography.caption.fontSize\n    },\n    title: {\n      fontFamily: theme.typography.subtitle2.fontFamily,\n      fontSize: theme.typography.subtitle2.fontSize,\n      fontWeight: theme.typography.fontWeightBold,\n      wordBreak: 'break-word',\n      maxWidth: 300,\n      marginBottom: theme.spacing()\n    },\n    enabledContainer: {\n      width: 'auto'\n    },\n    enabled: {\n      color: theme.palette.success.main,\n      '& $enabledIcon': {\n        backgroundColor: theme.palette.success.main\n      }\n    },\n    disabled: {\n      '& $enabledIcon': {\n        backgroundColor: theme.palette.text.disabled\n      }\n    },\n    enabledIcon: {\n      width: theme.spacing(1.5),\n      height: theme.spacing(1.5),\n      borderRadius: 99999,\n      marginRight: theme.spacing()\n    },\n    divider: {\n      marginLeft: theme.spacing(),\n      marginRight: theme.spacing(),\n      minHeight: theme.spacing(2)\n    }\n  };\n});\nexport var ApplicationCard = function ApplicationCard(_ref) {\n  var _classNames;\n\n  var record = _ref.record;\n  var classes = useStyles();\n  var translate = useTranslate();\n  return React.createElement(Card, {\n    className: classes.root\n  }, React.createElement(CardHeader, {\n    className: classes.header,\n    title: React.createElement(Tooltip, {\n      title: record.name\n    }, React.createElement(Typography, {\n      variant: \"h5\",\n      component: \"span\",\n      display: \"block\",\n      className: classes.title,\n      noWrap: true\n    }, record.name)),\n    disableTypography: true,\n    subheader: React.createElement(Grid, {\n      container: true,\n      alignItems: \"center\",\n      className: classes.subheader\n    }, React.createElement(Grid, {\n      item: true,\n      container: true,\n      alignItems: \"center\",\n      className: classNames(classes.enabledContainer, (_classNames = {}, _defineProperty(_classNames, classes.enabled, record.status === 'ENABLED'), _defineProperty(_classNames, classes.disabled, record.status !== 'ENABLED'), _classNames))\n    }, React.createElement(\"div\", {\n      className: classes.enabledIcon\n    }), React.createElement(Typography, {\n      variant: \"caption\"\n    }, translate(\"resources.applications.status.\".concat(record.status.toLowerCase())))))\n  }), React.createElement(CardContent, {\n    className: classes.content\n  }, React.createElement(Typography, {\n    variant: \"body1\"\n  }, translate('resources.applications.fields.apiKey', {\n    apiKey: record.id\n  })), React.createElement(Tooltip, {\n    title: record.id || ''\n  }, React.createElement(Typography, {\n    variant: \"caption\"\n  }, record.id))));\n};","map":null,"metadata":{},"sourceType":"module"}