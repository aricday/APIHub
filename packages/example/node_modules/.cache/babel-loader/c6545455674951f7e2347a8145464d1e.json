{"ast":null,"code":"import _slicedToArray from\"/Users/aricday/Projects/APIHub/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectWithoutProperties from\"/Users/aricday/Projects/APIHub/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React,{cloneElement,useEffect}from'react';import AppBar from'@material-ui/core/AppBar';import Divider from'@material-ui/core/Divider';import IconButton from'@material-ui/core/IconButton';import Toolbar from'@material-ui/core/Toolbar';import Tooltip from'@material-ui/core/Tooltip';import{makeStyles}from'@material-ui/core/styles';import LightModeIcon from'@material-ui/icons/Brightness7';import DarkModeIcon from'@material-ui/icons/Brightness4';import{HideOnScroll,LoadingIndicator,useTranslate}from'react-admin';import{useDispatch,useSelector}from'react-redux';import{ApiHubUserMenu,ApiHubLanguageSwitcher,SidebarButton,useApiHubPreference}from'layer7-apihub';import{BrandLogo}from'../ui';import{changeTheme}from'../theme';var useStyles=makeStyles(function(theme){return{toolbar:{paddingRight:24},header:{flex:1,display:'flex',alignItems:'center',justifyContent:'flex-start',textOverflow:'ellipsis',whiteSpace:'nowrap',overflow:'hidden',minWidth:'156px'},divider:{alignSelf:'stretch',backgroundColor:theme.palette.primary.contrastText,height:'auto',marginBottom:theme.spacing(2),marginLeft:theme.spacing(4),marginRight:theme.spacing(4),marginTop:theme.spacing(2)},logo:{height:theme.spacing(9)}};},{name:'RaAppBar'});export var CustomAppBar=function CustomAppBar(_ref){var children=_ref.children,classesOverride=_ref.classes,className=_ref.className,languagesMenu=_ref.languagesMenu,logo=_ref.logo,logout=_ref.logout,open=_ref.open,sidebarButton=_ref.sidebarButton,title=_ref.title,userMenu=_ref.userMenu,rest=_objectWithoutProperties(_ref,[\"children\",\"classes\",\"className\",\"languagesMenu\",\"logo\",\"logout\",\"open\",\"sidebarButton\",\"title\",\"userMenu\"]);var classes=useStyles({classes:classesOverride});return React.createElement(HideOnScroll,null,React.createElement(AppBar,Object.assign({className:className,color:\"secondary\",elevation:0},rest),React.createElement(Toolbar,{disableGutters:true,variant:\"regular\",className:classes.toolbar},cloneElement(sidebarButton,{open:open}),React.createElement(\"div\",{className:classes.header},React.createElement(BrandLogo,{className:classes.logo,fill:\"#fff\"})),React.createElement(LoadingIndicator,null),React.createElement(ThemeModeButton,null),cloneElement(languagesMenu),React.createElement(Divider,{className:classes.divider,orientation:\"vertical\"}),cloneElement(userMenu,{logout:logout}))));};CustomAppBar.defaultProps={userMenu:React.createElement(ApiHubUserMenu,null),languagesMenu:React.createElement(ApiHubLanguageSwitcher,null),sidebarButton:React.createElement(SidebarButton,null)};var useThemeModeButtonStyles=makeStyles(function(theme){return{icon:{color:theme.palette.common.white}};});export var ThemeModeButton=function ThemeModeButton(){var classes=useThemeModeButtonStyles();var translate=useTranslate();var dispatch=useDispatch();var themeMode=useSelector(function(state){return state.theme;});var _useApiHubPreference=useApiHubPreference('themeMode'),_useApiHubPreference2=_slicedToArray(_useApiHubPreference,2),themeModePreference=_useApiHubPreference2[0],setThemeModePreference=_useApiHubPreference2[1];useEffect(function(){if(themeModePreference&&themeModePreference!==themeMode){dispatch(changeTheme(themeModePreference));}},[themeModePreference,themeMode,dispatch]);var handleClick=function handleClick(){var newTheme=themeMode==='light'?'dark':'light';setThemeModePreference(newTheme);};return React.createElement(Tooltip,{title:translate('example.action.toggle_dark_mode')},React.createElement(IconButton,{color:\"default\",onClick:handleClick},themeMode==='light'?React.createElement(DarkModeIcon,{className:classes.icon}):React.createElement(LightModeIcon,{className:classes.icon})));};","map":{"version":3,"sources":["/Users/aricday/Projects/APIHub/packages/example/src/layout/CustomAppBar.js"],"names":["React","cloneElement","useEffect","AppBar","Divider","IconButton","Toolbar","Tooltip","makeStyles","LightModeIcon","DarkModeIcon","HideOnScroll","LoadingIndicator","useTranslate","useDispatch","useSelector","ApiHubUserMenu","ApiHubLanguageSwitcher","SidebarButton","useApiHubPreference","BrandLogo","changeTheme","useStyles","theme","toolbar","paddingRight","header","flex","display","alignItems","justifyContent","textOverflow","whiteSpace","overflow","minWidth","divider","alignSelf","backgroundColor","palette","primary","contrastText","height","marginBottom","spacing","marginLeft","marginRight","marginTop","logo","name","CustomAppBar","children","classesOverride","classes","className","languagesMenu","logout","open","sidebarButton","title","userMenu","rest","defaultProps","useThemeModeButtonStyles","icon","color","common","white","ThemeModeButton","translate","dispatch","themeMode","state","themeModePreference","setThemeModePreference","handleClick","newTheme"],"mappings":"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","sourcesContent":["import React, { cloneElement, useEffect } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LightModeIcon from '@material-ui/icons/Brightness7';\nimport DarkModeIcon from '@material-ui/icons/Brightness4';\nimport { HideOnScroll, LoadingIndicator, useTranslate } from 'react-admin';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    ApiHubUserMenu,\n    ApiHubLanguageSwitcher,\n    SidebarButton,\n    useApiHubPreference,\n} from 'layer7-apihub';\nimport { BrandLogo } from '../ui';\nimport { changeTheme } from '../theme';\n\nconst useStyles = makeStyles(\n    theme => ({\n        toolbar: {\n            paddingRight: 24,\n        },\n        header: {\n            flex: 1,\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'flex-start',\n            textOverflow: 'ellipsis',\n            whiteSpace: 'nowrap',\n            overflow: 'hidden',\n            minWidth: '156px',\n        },\n        divider: {\n            alignSelf: 'stretch',\n            backgroundColor: theme.palette.primary.contrastText,\n            height: 'auto',\n            marginBottom: theme.spacing(2),\n            marginLeft: theme.spacing(4),\n            marginRight: theme.spacing(4),\n            marginTop: theme.spacing(2),\n        },\n        logo: {\n            height: theme.spacing(9),\n        },\n    }),\n    { name: 'RaAppBar' }\n);\n\nexport const CustomAppBar = ({\n    children,\n    classes: classesOverride,\n    className,\n    languagesMenu,\n    logo,\n    logout,\n    open,\n    sidebarButton,\n    title,\n    userMenu,\n    ...rest\n}) => {\n    const classes = useStyles({ classes: classesOverride });\n\n    return (\n        <HideOnScroll>\n            <AppBar\n                className={className}\n                color=\"secondary\"\n                elevation={0}\n                {...rest}\n            >\n                <Toolbar\n                    disableGutters\n                    variant=\"regular\"\n                    className={classes.toolbar}\n                >\n                    {cloneElement(sidebarButton, { open })}\n                    <div className={classes.header}>\n                        <BrandLogo className={classes.logo} fill=\"#fff\" />\n                    </div>\n                    <LoadingIndicator />\n                    <ThemeModeButton />\n                    {cloneElement(languagesMenu)}\n                    <Divider\n                        className={classes.divider}\n                        orientation=\"vertical\"\n                    />\n                    {cloneElement(userMenu, { logout })}\n                </Toolbar>\n            </AppBar>\n        </HideOnScroll>\n    );\n};\n\nCustomAppBar.defaultProps = {\n    userMenu: <ApiHubUserMenu />,\n    languagesMenu: <ApiHubLanguageSwitcher />,\n    sidebarButton: <SidebarButton />,\n};\n\nconst useThemeModeButtonStyles = makeStyles(theme => ({\n    icon: {\n        color: theme.palette.common.white,\n    },\n}));\n\nexport const ThemeModeButton = () => {\n    const classes = useThemeModeButtonStyles();\n    const translate = useTranslate();\n\n    const dispatch = useDispatch();\n    const themeMode = useSelector(state => state.theme);\n    const [themeModePreference, setThemeModePreference] = useApiHubPreference(\n        'themeMode'\n    );\n\n    useEffect(() => {\n        if (themeModePreference && themeModePreference !== themeMode) {\n            dispatch(changeTheme(themeModePreference));\n        }\n    }, [themeModePreference, themeMode, dispatch]);\n\n    const handleClick = () => {\n        const newTheme = themeMode === 'light' ? 'dark' : 'light';\n        setThemeModePreference(newTheme);\n    };\n\n    return (\n        <Tooltip title={translate('example.action.toggle_dark_mode')}>\n            <IconButton color=\"default\" onClick={handleClick}>\n                {themeMode === 'light' ? (\n                    <DarkModeIcon className={classes.icon} />\n                ) : (\n                    <LightModeIcon className={classes.icon} />\n                )}\n            </IconButton>\n        </Tooltip>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}