{"ast":null,"code":"import _regeneratorRuntime from\"/Users/aricday/Projects/APIHub/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _slicedToArray from\"/Users/aricday/Projects/APIHub/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{PasswordInput,required,SimpleForm,TextInput,useLogin,useTranslate}from'react-admin';import{Link as RouterLink}from'react-router-dom';import{makeStyles,Link,Typography}from'@material-ui/core';import{LoginToolbar}from'./LoginToolbar';var useStyles=makeStyles(function(theme){return{form:{'& >:first-child':{padding:0}},title:{fontSize:theme.typography.fontSize*2,marginBottom:theme.spacing(6),color:theme.palette.getContrastText(theme.palette.background[\"default\"])}};});export var LoginForm=function LoginForm(props){var login=useLogin();var classes=useStyles(props);var translate=useTranslate();var _useState=useState(null),_useState2=_slicedToArray(_useState,2),isLoading=_useState2[0],setIsLoading=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),error=_useState4[0],setError=_useState4[1];var submit=function submit(_ref){var username,password;return _regeneratorRuntime.async(function submit$(_context){while(1){switch(_context.prev=_context.next){case 0:username=_ref.username,password=_ref.password;setError(null);setIsLoading(true);_context.prev=3;_context.next=6;return _regeneratorRuntime.awrap(login({scheme:'credentials',username:username,password:password}));case 6:_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](3);setError('apihub.login.notifications.invalid_credentials');case 11:setIsLoading(false);case 12:case\"end\":return _context.stop();}}},null,null,[[3,8]]);};return React.createElement(React.Fragment,null,React.createElement(Typography,{variant:\"h2\",className:classes.title},translate('apihub.login.title')),React.createElement(SimpleForm,{className:classes.form,save:submit,toolbar:React.createElement(LoginToolbar,{loading:isLoading,error:error})},React.createElement(TextInput,{source:\"username\",type:\"text\",label:\"apihub.login.fields.username\",variant:\"outlined\",fullWidth:true,validate:required()}),React.createElement(PasswordInput,{source:\"password\",label:\"apihub.login.fields.password\",variant:\"outlined\",fullWidth:true,validate:required()})),React.createElement(Typography,{variant:\"body1\"},React.createElement(Link,{component:RouterLink,to:\"/reset-password\"},translate('apihub.login.actions.forgot_password'))));};LoginForm.__docgenInfo={\"description\":\"\",\"methods\":[],\"displayName\":\"LoginForm\"};if(typeof STORYBOOK_REACT_CLASSES!==\"undefined\"){STORYBOOK_REACT_CLASSES[\"src/authentication/Login/LoginForm.js\"]={name:\"LoginForm\",docgenInfo:LoginForm.__docgenInfo,path:\"src/authentication/Login/LoginForm.js\"};}","map":{"version":3,"sources":["/Users/aricday/Projects/APIHub/packages/layer7-apihub/src/authentication/Login/LoginForm.js"],"names":["React","useState","PasswordInput","required","SimpleForm","TextInput","useLogin","useTranslate","Link","RouterLink","makeStyles","Typography","LoginToolbar","useStyles","theme","form","padding","title","fontSize","typography","marginBottom","spacing","color","palette","getContrastText","background","LoginForm","props","login","classes","translate","isLoading","setIsLoading","error","setError","submit","username","password","scheme"],"mappings":"iSAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OACIC,aADJ,CAEIC,QAFJ,CAGIC,UAHJ,CAIIC,SAJJ,CAKIC,QALJ,CAMIC,YANJ,KAOO,aAPP,CAQA,OAASC,IAAI,GAAIC,CAAAA,UAAjB,KAAmC,kBAAnC,CACA,OAASC,UAAT,CAAqBF,IAArB,CAA2BG,UAA3B,KAA6C,mBAA7C,CACA,OAASC,YAAT,KAA6B,gBAA7B,CAEA,GAAMC,CAAAA,SAAS,CAAGH,UAAU,CAAC,SAAAI,KAAK,QAAK,CACnCC,IAAI,CAAE,CACF,kBAAmB,CACfC,OAAO,CAAE,CADM,CADjB,CAD6B,CAMnCC,KAAK,CAAE,CACHC,QAAQ,CAAEJ,KAAK,CAACK,UAAN,CAAiBD,QAAjB,CAA4B,CADnC,CAEHE,YAAY,CAAEN,KAAK,CAACO,OAAN,CAAc,CAAd,CAFX,CAGHC,KAAK,CAAER,KAAK,CAACS,OAAN,CAAcC,eAAd,CAA8BV,KAAK,CAACS,OAAN,CAAcE,UAAd,WAA9B,CAHJ,CAN4B,CAAL,EAAN,CAA5B,CAaA,MAAO,IAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAAAC,KAAK,CAAI,CAC9B,GAAMC,CAAAA,KAAK,CAAGtB,QAAQ,EAAtB,CACA,GAAMuB,CAAAA,OAAO,CAAGhB,SAAS,CAACc,KAAD,CAAzB,CACA,GAAMG,CAAAA,SAAS,CAAGvB,YAAY,EAA9B,CAH8B,cAIIN,QAAQ,CAAC,IAAD,CAJZ,wCAIvB8B,SAJuB,eAIZC,YAJY,8BAKJ/B,QAAQ,CAAC,IAAD,CALJ,yCAKvBgC,KALuB,eAKhBC,QALgB,eAO9B,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,6IAASC,QAAT,MAASA,QAAT,CAAmBC,QAAnB,MAAmBA,QAAnB,CACXH,QAAQ,CAAC,IAAD,CAAR,CACAF,YAAY,CAAC,IAAD,CAAZ,CAFW,iEAKDJ,KAAK,CAAC,CAAEU,MAAM,CAAE,aAAV,CAAyBF,QAAQ,CAARA,QAAzB,CAAmCC,QAAQ,CAARA,QAAnC,CAAD,CALJ,wFAOPH,QAAQ,CAAC,gDAAD,CAAR,CAPO,QAUXF,YAAY,CAAC,KAAD,CAAZ,CAVW,iEAAf,CAaA,MACI,yCACI,oBAAC,UAAD,EAAY,OAAO,CAAC,IAApB,CAAyB,SAAS,CAAEH,OAAO,CAACZ,KAA5C,EACKa,SAAS,CAAC,oBAAD,CADd,CADJ,CAKI,oBAAC,UAAD,EACI,SAAS,CAAED,OAAO,CAACd,IADvB,CAEI,IAAI,CAAEoB,MAFV,CAGI,OAAO,CAAE,oBAAC,YAAD,EAAc,OAAO,CAAEJ,SAAvB,CAAkC,KAAK,CAAEE,KAAzC,EAHb,EAKI,oBAAC,SAAD,EACI,MAAM,CAAC,UADX,CAEI,IAAI,CAAC,MAFT,CAGI,KAAK,CAAC,8BAHV,CAII,OAAO,CAAC,UAJZ,CAKI,SAAS,KALb,CAMI,QAAQ,CAAE9B,QAAQ,EANtB,EALJ,CAaI,oBAAC,aAAD,EACI,MAAM,CAAC,UADX,CAEI,KAAK,CAAC,8BAFV,CAGI,OAAO,CAAC,UAHZ,CAII,SAAS,KAJb,CAKI,QAAQ,CAAEA,QAAQ,EALtB,EAbJ,CALJ,CA2BI,oBAAC,UAAD,EAAY,OAAO,CAAC,OAApB,EACI,oBAAC,IAAD,EAAM,SAAS,CAAEM,UAAjB,CAA6B,EAAE,CAAC,iBAAhC,EACKqB,SAAS,CAAC,sCAAD,CADd,CADJ,CA3BJ,CADJ,CAmCH,CAvDM,C","sourcesContent":["import React, { useState } from 'react';\nimport {\n    PasswordInput,\n    required,\n    SimpleForm,\n    TextInput,\n    useLogin,\n    useTranslate,\n} from 'react-admin';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { makeStyles, Link, Typography } from '@material-ui/core';\nimport { LoginToolbar } from './LoginToolbar';\n\nconst useStyles = makeStyles(theme => ({\n    form: {\n        '& >:first-child': {\n            padding: 0,\n        },\n    },\n    title: {\n        fontSize: theme.typography.fontSize * 2,\n        marginBottom: theme.spacing(6),\n        color: theme.palette.getContrastText(theme.palette.background.default),\n    },\n}));\n\nexport const LoginForm = props => {\n    const login = useLogin();\n    const classes = useStyles(props);\n    const translate = useTranslate();\n    const [isLoading, setIsLoading] = useState(null);\n    const [error, setError] = useState(null);\n\n    const submit = async ({ username, password }) => {\n        setError(null);\n        setIsLoading(true);\n\n        try {\n            await login({ scheme: 'credentials', username, password });\n        } catch {\n            setError('apihub.login.notifications.invalid_credentials');\n        }\n\n        setIsLoading(false);\n    };\n\n    return (\n        <>\n            <Typography variant=\"h2\" className={classes.title}>\n                {translate('apihub.login.title')}\n            </Typography>\n\n            <SimpleForm\n                className={classes.form}\n                save={submit}\n                toolbar={<LoginToolbar loading={isLoading} error={error} />}\n            >\n                <TextInput\n                    source=\"username\"\n                    type=\"text\"\n                    label=\"apihub.login.fields.username\"\n                    variant=\"outlined\"\n                    fullWidth\n                    validate={required()}\n                />\n                <PasswordInput\n                    source=\"password\"\n                    label=\"apihub.login.fields.password\"\n                    variant=\"outlined\"\n                    fullWidth\n                    validate={required()}\n                />\n            </SimpleForm>\n\n            <Typography variant=\"body1\">\n                <Link component={RouterLink} to=\"/reset-password\">\n                    {translate('apihub.login.actions.forgot_password')}\n                </Link>\n            </Typography>\n        </>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}