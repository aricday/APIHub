{"ast":null,"code":"import _objectSpread from\"/Users/aricday/Projects/APIHub/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import get from'lodash/get';import set from'lodash/set';import{combineReducers}from'redux';export var SAVE_EXPANDED_NODES='@layer7/SAVE_EXPANDED_NODES';export var ADD_EXPANDED_NODES='@layer7/ADD_EXPANDED_NODES';export var DOCUMENT_ADDED='@layer7/DOCUMENT_ADDED';export var documentationTreeReducer=function documentationTreeReducer(){var previousState=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var _ref=arguments.length>1?arguments[1]:undefined,type=_ref.type,payload=_ref.payload;if(!payload||!payload.entityUuid||!payload.locale){return previousState;}switch(type){case SAVE_EXPANDED_NODES:{var newState=_objectSpread({},previousState);return set(newState,\"\".concat(payload.entityUuid,\"[\").concat(payload.locale,\"]\"),payload.expandedNodes);}case ADD_EXPANDED_NODES:{var newExpandedNodes=new Set(get(previousState,\"\".concat(payload.entityUuid,\"[\").concat(payload.locale,\"]\"),[]));payload.nodeIds.forEach(function(id){return newExpandedNodes.add(id);});var _newState=_objectSpread({},previousState);return set(_newState,\"\".concat(payload.entityUuid,\"[\").concat(payload.locale,\"]\"),Array.from(newExpandedNodes));}default:return previousState;}};export var newDocument=function newDocument(){var previousState=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;var _ref2=arguments.length>1?arguments[1]:undefined,type=_ref2.type,payload=_ref2.payload;switch(type){case DOCUMENT_ADDED:return payload;default:return previousState;}};export var documentationReducer={documentation:combineReducers({documentationTree:documentationTreeReducer,newDocument:newDocument})};// Tree\nexport var saveExpandedNodes=function saveExpandedNodes(entityUuid,locale,expandedNodes){return{type:SAVE_EXPANDED_NODES,payload:{entityUuid:entityUuid,locale:locale,expandedNodes:expandedNodes}};};export var addExpandedNodes=function addExpandedNodes(entityUuid,locale,nodeIds){return{type:ADD_EXPANDED_NODES,payload:{entityUuid:entityUuid,locale:locale,nodeIds:nodeIds}};};export var selectExpandedNodes=function selectExpandedNodes(entityUuid,locale){return function(state){return get(state,\"documentation.documentationTree.\".concat(entityUuid,\".\").concat(locale),[]);};};// New Document\nexport var addNewDocument=function addNewDocument(document){return{type:DOCUMENT_ADDED,payload:document};};export var removeNewDocument=function removeNewDocument(){return{type:DOCUMENT_ADDED,payload:null};};export var getNewDocument=function getNewDocument(state){return state.documentation.newDocument;};","map":{"version":3,"sources":["/Users/aricday/Projects/APIHub/packages/layer7-apihub/src/apis/Documentation/documentationReducer.js"],"names":["get","set","combineReducers","SAVE_EXPANDED_NODES","ADD_EXPANDED_NODES","DOCUMENT_ADDED","documentationTreeReducer","previousState","type","payload","entityUuid","locale","newState","expandedNodes","newExpandedNodes","Set","nodeIds","forEach","id","add","Array","from","newDocument","documentationReducer","documentation","documentationTree","saveExpandedNodes","addExpandedNodes","selectExpandedNodes","state","addNewDocument","document","removeNewDocument","getNewDocument"],"mappings":"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","sourcesContent":["import get from 'lodash/get';\nimport set from 'lodash/set';\nimport { combineReducers } from 'redux';\n\nexport const SAVE_EXPANDED_NODES = '@layer7/SAVE_EXPANDED_NODES';\nexport const ADD_EXPANDED_NODES = '@layer7/ADD_EXPANDED_NODES';\n\nexport const DOCUMENT_ADDED = '@layer7/DOCUMENT_ADDED';\n\nexport const documentationTreeReducer = (\n    previousState = {},\n    { type, payload }\n) => {\n    if (!payload || !payload.entityUuid || !payload.locale) {\n        return previousState;\n    }\n\n    switch (type) {\n        case SAVE_EXPANDED_NODES: {\n            const newState = { ...previousState };\n            return set(\n                newState,\n                `${payload.entityUuid}[${payload.locale}]`,\n                payload.expandedNodes\n            );\n        }\n        case ADD_EXPANDED_NODES: {\n            const newExpandedNodes = new Set(\n                get(\n                    previousState,\n                    `${payload.entityUuid}[${payload.locale}]`,\n                    []\n                )\n            );\n\n            payload.nodeIds.forEach(id => newExpandedNodes.add(id));\n            const newState = { ...previousState };\n\n            return set(\n                newState,\n                `${payload.entityUuid}[${payload.locale}]`,\n                Array.from(newExpandedNodes)\n            );\n        }\n        default:\n            return previousState;\n    }\n};\n\nexport const newDocument = (previousState = null, { type, payload }) => {\n    switch (type) {\n        case DOCUMENT_ADDED:\n            return payload;\n\n        default:\n            return previousState;\n    }\n};\n\nexport const documentationReducer = {\n    documentation: combineReducers({\n        documentationTree: documentationTreeReducer,\n        newDocument,\n    }),\n};\n\n// Tree\n\nexport const saveExpandedNodes = (entityUuid, locale, expandedNodes) => ({\n    type: SAVE_EXPANDED_NODES,\n    payload: { entityUuid, locale, expandedNodes },\n});\n\nexport const addExpandedNodes = (entityUuid, locale, nodeIds) => ({\n    type: ADD_EXPANDED_NODES,\n    payload: { entityUuid, locale, nodeIds },\n});\n\nexport const selectExpandedNodes = (entityUuid, locale) => state =>\n    get(state, `documentation.documentationTree.${entityUuid}.${locale}`, []);\n\n// New Document\n\nexport const addNewDocument = document => ({\n    type: DOCUMENT_ADDED,\n    payload: document,\n});\n\nexport const removeNewDocument = () => ({\n    type: DOCUMENT_ADDED,\n    payload: null,\n});\n\nexport const getNewDocument = state => state.documentation.newDocument;\n"]},"metadata":{},"sourceType":"module"}