{"ast":null,"code":"import React,{useMemo}from'react';import{Datagrid as RaDatagrid}from'react-admin';import{makeStyles,useTheme}from'@material-ui/core/styles';var computeDatagridPadding=function computeDatagridPadding(theme,props){return props&&props.size==='small'?\"\".concat(theme.spacing(0.5),\"px \").concat(theme.spacing(3),\"px\"):\"\".concat(theme.spacing(1),\"px \").concat(theme.spacing(3),\"px\");};var useStyles=makeStyles(function(theme){return{headerCell:{backgroundColor:theme.palette.action.selected,fontWeight:theme.typography.fontWeightBold,textTransform:'uppercase'},rowCell:{padding:function padding(props){return computeDatagridPadding(theme,props);}}};});export var Datagrid=function Datagrid(props){var theme=useTheme();var classes=useStyles(props);// HACK: For some reason, the header cells loses their styles when dynamically\n// changing the theme. Passing a new key when changing the theme fixes that\nvar key=useMemo(function(){return Math.random();},[theme]);// eslint-disable-line\nreturn React.createElement(RaDatagrid,Object.assign({key:key,classes:classes},props));};Datagrid.__docgenInfo={\"description\":\"\",\"methods\":[],\"displayName\":\"Datagrid\"};if(typeof STORYBOOK_REACT_CLASSES!==\"undefined\"){STORYBOOK_REACT_CLASSES[\"src/ui/Datagrid.js\"]={name:\"Datagrid\",docgenInfo:Datagrid.__docgenInfo,path:\"src/ui/Datagrid.js\"};}","map":{"version":3,"sources":["/Users/aricday/Projects/APIHub/packages/layer7-apihub/src/ui/Datagrid.js"],"names":["React","useMemo","Datagrid","RaDatagrid","makeStyles","useTheme","computeDatagridPadding","theme","props","size","spacing","useStyles","headerCell","backgroundColor","palette","action","selected","fontWeight","typography","fontWeightBold","textTransform","rowCell","padding","classes","key","Math","random"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,OAAhB,KAA+B,OAA/B,CACA,OAASC,QAAQ,GAAIC,CAAAA,UAArB,KAAuC,aAAvC,CACA,OAASC,UAAT,CAAqBC,QAArB,KAAqC,0BAArC,CAEA,GAAMC,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,CAACC,KAAD,CAAQC,KAAR,QAC3BA,CAAAA,KAAK,EAAIA,KAAK,CAACC,IAAN,GAAe,OAAxB,WACSF,KAAK,CAACG,OAAN,CAAc,GAAd,CADT,eACiCH,KAAK,CAACG,OAAN,CAAc,CAAd,CADjC,iBAESH,KAAK,CAACG,OAAN,CAAc,CAAd,CAFT,eAE+BH,KAAK,CAACG,OAAN,CAAc,CAAd,CAF/B,MAD2B,EAA/B,CAKA,GAAMC,CAAAA,SAAS,CAAGP,UAAU,CAAC,SAAAG,KAAK,QAAK,CACnCK,UAAU,CAAE,CACRC,eAAe,CAAEN,KAAK,CAACO,OAAN,CAAcC,MAAd,CAAqBC,QAD9B,CAERC,UAAU,CAAEV,KAAK,CAACW,UAAN,CAAiBC,cAFrB,CAGRC,aAAa,CAAE,WAHP,CADuB,CAMnCC,OAAO,CAAE,CACLC,OAAO,CAAE,iBAAAd,KAAK,QAAIF,CAAAA,sBAAsB,CAACC,KAAD,CAAQC,KAAR,CAA1B,EADT,CAN0B,CAAL,EAAN,CAA5B,CAWA,MAAO,IAAMN,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAAM,KAAK,CAAI,CAC7B,GAAMD,CAAAA,KAAK,CAAGF,QAAQ,EAAtB,CACA,GAAMkB,CAAAA,OAAO,CAAGZ,SAAS,CAACH,KAAD,CAAzB,CAEA;AACA;AACA,GAAMgB,CAAAA,GAAG,CAAGvB,OAAO,CAAC,iBAAMwB,CAAAA,IAAI,CAACC,MAAL,EAAN,EAAD,CAAsB,CAACnB,KAAD,CAAtB,CAAnB,CAAmD;AAEnD,MAAO,qBAAC,UAAD,gBAAY,GAAG,CAAEiB,GAAjB,CAAsB,OAAO,CAAED,OAA/B,EAA4Cf,KAA5C,EAAP,CACH,CATM,C","sourcesContent":["import React, { useMemo } from 'react';\nimport { Datagrid as RaDatagrid } from 'react-admin';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nconst computeDatagridPadding = (theme, props) =>\n    props && props.size === 'small'\n        ? `${theme.spacing(0.5)}px ${theme.spacing(3)}px`\n        : `${theme.spacing(1)}px ${theme.spacing(3)}px`;\n\nconst useStyles = makeStyles(theme => ({\n    headerCell: {\n        backgroundColor: theme.palette.action.selected,\n        fontWeight: theme.typography.fontWeightBold,\n        textTransform: 'uppercase',\n    },\n    rowCell: {\n        padding: props => computeDatagridPadding(theme, props),\n    },\n}));\n\nexport const Datagrid = props => {\n    const theme = useTheme();\n    const classes = useStyles(props);\n\n    // HACK: For some reason, the header cells loses their styles when dynamically\n    // changing the theme. Passing a new key when changing the theme fixes that\n    const key = useMemo(() => Math.random(), [theme]); // eslint-disable-line\n\n    return <RaDatagrid key={key} classes={classes} {...props} />;\n};\n"]},"metadata":{},"sourceType":"module"}