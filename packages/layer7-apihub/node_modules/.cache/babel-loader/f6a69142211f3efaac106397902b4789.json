{"ast":null,"code":"import _objectWithoutProperties from\"/Users/aricday/Projects/APIHub/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import _slicedToArray from\"/Users/aricday/Projects/APIHub/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import ToggleButton from'@material-ui/lab/ToggleButton';import ToggleButtonGroup from'@material-ui/lab/ToggleButtonGroup';import Tooltip from'@material-ui/core/Tooltip';import ViewListIcon from'@material-ui/icons/ViewList';import ViewModuleIcon from'@material-ui/icons/ViewModule';import{useTranslate}from'ra-core';import{useListDisplay,LIST_DISPLAY_CARDS,LIST_DISPLAY_DATAGRID}from'./ListDisplayContext';export var ListDisplayButton=function ListDisplayButton(props){var _useListDisplay=useListDisplay(),_useListDisplay2=_slicedToArray(_useListDisplay,2),display=_useListDisplay2[0],setDisplay=_useListDisplay2[1];var handleChange=function handleChange(event,value){setDisplay(value);};return React.createElement(ToggleButtonGroup,Object.assign({exclusive:true,onChange:handleChange,value:display,size:\"small\"},props),React.createElement(ToggleButtonWithTooltip,{label:\"apihub.actions.view_as_cards\",value:LIST_DISPLAY_CARDS},React.createElement(ViewModuleIcon,null)),React.createElement(ToggleButtonWithTooltip,{label:\"apihub.actions.view_as_list\",value:LIST_DISPLAY_DATAGRID},React.createElement(ViewListIcon,null)));};var ToggleButtonWithTooltip=function ToggleButtonWithTooltip(_ref){var label=_ref.label,_ref$title=_ref.title,title=_ref$title===void 0?label:_ref$title,props=_objectWithoutProperties(_ref,[\"label\",\"title\"]);var translate=useTranslate();var translatedLabel=translate(label,{_:label});var translatedTitle=translate(title,{_:title});return React.createElement(Tooltip,{title:translatedTitle},React.createElement(ToggleButton,Object.assign({\"aria-label\":translatedLabel},props)));};ListDisplayButton.__docgenInfo={\"description\":\"\",\"methods\":[],\"displayName\":\"ListDisplayButton\"};if(typeof STORYBOOK_REACT_CLASSES!==\"undefined\"){STORYBOOK_REACT_CLASSES[\"src/ui/ListDisplay/ListDisplayButton.js\"]={name:\"ListDisplayButton\",docgenInfo:ListDisplayButton.__docgenInfo,path:\"src/ui/ListDisplay/ListDisplayButton.js\"};}","map":{"version":3,"sources":["/Users/aricday/Projects/APIHub/packages/layer7-apihub/src/ui/ListDisplay/ListDisplayButton.js"],"names":["React","ToggleButton","ToggleButtonGroup","Tooltip","ViewListIcon","ViewModuleIcon","useTranslate","useListDisplay","LIST_DISPLAY_CARDS","LIST_DISPLAY_DATAGRID","ListDisplayButton","props","display","setDisplay","handleChange","event","value","ToggleButtonWithTooltip","label","title","translate","translatedLabel","_","translatedTitle"],"mappings":"8TAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,YAAP,KAAyB,+BAAzB,CACA,MAAOC,CAAAA,iBAAP,KAA8B,oCAA9B,CACA,MAAOC,CAAAA,OAAP,KAAoB,2BAApB,CACA,MAAOC,CAAAA,YAAP,KAAyB,6BAAzB,CACA,MAAOC,CAAAA,cAAP,KAA2B,+BAA3B,CACA,OAASC,YAAT,KAA6B,SAA7B,CAEA,OACIC,cADJ,CAEIC,kBAFJ,CAGIC,qBAHJ,KAIO,sBAJP,CAMA,MAAO,IAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAAAC,KAAK,CAAI,qBACRJ,cAAc,EADN,oDAC/BK,OAD+B,qBACtBC,UADsB,qBAGtC,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAQC,KAAR,CAAkB,CACnCH,UAAU,CAACG,KAAD,CAAV,CACH,CAFD,CAIA,MACI,qBAAC,iBAAD,gBACI,SAAS,KADb,CAEI,QAAQ,CAAEF,YAFd,CAGI,KAAK,CAAEF,OAHX,CAII,IAAI,CAAC,OAJT,EAKQD,KALR,EAOI,oBAAC,uBAAD,EACI,KAAK,CAAC,8BADV,CAEI,KAAK,CAAEH,kBAFX,EAII,oBAAC,cAAD,MAJJ,CAPJ,CAaI,oBAAC,uBAAD,EACI,KAAK,CAAC,6BADV,CAEI,KAAK,CAAEC,qBAFX,EAII,oBAAC,YAAD,MAJJ,CAbJ,CADJ,CAsBH,CA7BM,CA+BP,GAAMQ,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,MAAwC,IAArCC,CAAAA,KAAqC,MAArCA,KAAqC,iBAA9BC,KAA8B,CAA9BA,KAA8B,qBAAtBD,KAAsB,YAAZP,KAAY,kDACpE,GAAMS,CAAAA,SAAS,CAAGd,YAAY,EAA9B,CAEA,GAAMe,CAAAA,eAAe,CAAGD,SAAS,CAACF,KAAD,CAAQ,CAAEI,CAAC,CAAEJ,KAAL,CAAR,CAAjC,CACA,GAAMK,CAAAA,eAAe,CAAGH,SAAS,CAACD,KAAD,CAAQ,CAAEG,CAAC,CAAEH,KAAL,CAAR,CAAjC,CAEA,MACI,qBAAC,OAAD,EAAS,KAAK,CAAEI,eAAhB,EACI,oBAAC,YAAD,gBAAc,aAAYF,eAA1B,EAA+CV,KAA/C,EADJ,CADJ,CAKH,CAXD,C","sourcesContent":["import React from 'react';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport ViewListIcon from '@material-ui/icons/ViewList';\nimport ViewModuleIcon from '@material-ui/icons/ViewModule';\nimport { useTranslate } from 'ra-core';\n\nimport {\n    useListDisplay,\n    LIST_DISPLAY_CARDS,\n    LIST_DISPLAY_DATAGRID,\n} from './ListDisplayContext';\n\nexport const ListDisplayButton = props => {\n    const [display, setDisplay] = useListDisplay();\n\n    const handleChange = (event, value) => {\n        setDisplay(value);\n    };\n\n    return (\n        <ToggleButtonGroup\n            exclusive\n            onChange={handleChange}\n            value={display}\n            size=\"small\"\n            {...props}\n        >\n            <ToggleButtonWithTooltip\n                label=\"apihub.actions.view_as_cards\"\n                value={LIST_DISPLAY_CARDS}\n            >\n                <ViewModuleIcon />\n            </ToggleButtonWithTooltip>\n            <ToggleButtonWithTooltip\n                label=\"apihub.actions.view_as_list\"\n                value={LIST_DISPLAY_DATAGRID}\n            >\n                <ViewListIcon />\n            </ToggleButtonWithTooltip>\n        </ToggleButtonGroup>\n    );\n};\n\nconst ToggleButtonWithTooltip = ({ label, title = label, ...props }) => {\n    const translate = useTranslate();\n\n    const translatedLabel = translate(label, { _: label });\n    const translatedTitle = translate(title, { _: title });\n\n    return (\n        <Tooltip title={translatedTitle}>\n            <ToggleButton aria-label={translatedLabel} {...props} />\n        </Tooltip>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}