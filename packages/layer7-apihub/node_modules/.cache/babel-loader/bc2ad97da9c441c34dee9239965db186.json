{"ast":null,"code":"import _slicedToArray from\"/Users/aricday/Projects/APIHub/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect}from'react';import{List as RaList,Pagination as RaPagination}from'react-admin';import{ViewTitle}from'./ViewTitle';import{useApiHubPreference,readApiHubPreference}from'../preferences';var Pagination=function Pagination(props){var resource=props.resource,perPage=props.perPage,setPerPage=props.setPerPage;var _useApiHubPreference=useApiHubPreference(\"perPage/\".concat(resource),perPage),_useApiHubPreference2=_slicedToArray(_useApiHubPreference,2),perPagePreference=_useApiHubPreference2[0],setPerPagePreference=_useApiHubPreference2[1];useEffect(function(){if(perPagePreference!==perPage){setPerPage(perPagePreference);}},[perPage,perPagePreference,setPerPage]);var handleSetPerPage=function handleSetPerPage(newPerPage){setPerPagePreference(newPerPage);};return React.createElement(RaPagination,Object.assign({},props,{perPage:parseInt(perPagePreference,10),setPerPage:handleSetPerPage}));};/**\n * A List component which displays the react-admin list with the title above.\n *\n * @param {*} props The react-admin list properties\n *\n */export var List=function List(props){var resource=props.resource,perPage=props.perPage;// Get the initial per page preference per resources\n// The readApiHubPreference method is used\n// instead of the useApiHubPreference hook\n// to not rerender the whole list each time the perPage property changes.\n// See the <Pagination /> component above to understand the complete usage of the per page preferences.\nvar perPagePreference=readApiHubPreference(\"perPage/\".concat(resource),perPage);return React.createElement(React.Fragment,null,React.createElement(ViewTitle,null),React.createElement(RaList,Object.assign({},props,{perPage:parseInt(perPagePreference,10),pagination:React.createElement(Pagination,null)})));};List.__docgenInfo={\"description\":\"A List component which displays the react-admin list with the title above.\\n\\n@param {*} props The react-admin list properties\",\"methods\":[],\"displayName\":\"List\"};if(typeof STORYBOOK_REACT_CLASSES!==\"undefined\"){STORYBOOK_REACT_CLASSES[\"src/ui/List.js\"]={name:\"List\",docgenInfo:List.__docgenInfo,path:\"src/ui/List.js\"};}","map":{"version":3,"sources":["/Users/aricday/Projects/APIHub/packages/layer7-apihub/src/ui/List.js"],"names":["React","useEffect","List","RaList","Pagination","RaPagination","ViewTitle","useApiHubPreference","readApiHubPreference","props","resource","perPage","setPerPage","perPagePreference","setPerPagePreference","handleSetPerPage","newPerPage","parseInt"],"mappings":"qJAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,IAAI,GAAIC,CAAAA,MAAjB,CAAyBC,UAAU,GAAIC,CAAAA,YAAvC,KAA2D,aAA3D,CAEA,OAASC,SAAT,KAA0B,aAA1B,CACA,OAASC,mBAAT,CAA8BC,oBAA9B,KAA0D,gBAA1D,CAEA,GAAMJ,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAAAK,KAAK,CAAI,IAChBC,CAAAA,QADgB,CACkBD,KADlB,CAChBC,QADgB,CACNC,OADM,CACkBF,KADlB,CACNE,OADM,CACGC,UADH,CACkBH,KADlB,CACGG,UADH,0BAG0BL,mBAAmB,mBACtDG,QADsD,EAEjEC,OAFiE,CAH7C,8DAGjBE,iBAHiB,0BAGEC,oBAHF,0BAQxBb,SAAS,CAAC,UAAM,CACZ,GAAIY,iBAAiB,GAAKF,OAA1B,CAAmC,CAC/BC,UAAU,CAACC,iBAAD,CAAV,CACH,CACJ,CAJQ,CAIN,CAACF,OAAD,CAAUE,iBAAV,CAA6BD,UAA7B,CAJM,CAAT,CAMA,GAAMG,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAAAC,UAAU,CAAI,CACnCF,oBAAoB,CAACE,UAAD,CAApB,CACH,CAFD,CAIA,MACI,qBAAC,YAAD,kBACQP,KADR,EAEI,OAAO,CAAEQ,QAAQ,CAACJ,iBAAD,CAAoB,EAApB,CAFrB,CAGI,UAAU,CAAEE,gBAHhB,GADJ,CAOH,CAzBD,CA2BA;;;;;GAMA,MAAO,IAAMb,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,CAAAO,KAAK,CAAI,IACjBC,CAAAA,QADiB,CACKD,KADL,CACjBC,QADiB,CACPC,OADO,CACKF,KADL,CACPE,OADO,CAGzB;AACA;AACA;AACA;AACA;AACA,GAAME,CAAAA,iBAAiB,CAAGL,oBAAoB,mBAC/BE,QAD+B,EAE1CC,OAF0C,CAA9C,CAKA,MACI,yCACI,oBAAC,SAAD,MADJ,CAEI,oBAAC,MAAD,kBACQF,KADR,EAEI,OAAO,CAAEQ,QAAQ,CAACJ,iBAAD,CAAoB,EAApB,CAFrB,CAGI,UAAU,CAAE,oBAAC,UAAD,MAHhB,GAFJ,CADJ,CAUH,CAvBM,C","sourcesContent":["import React, { useEffect } from 'react';\nimport { List as RaList, Pagination as RaPagination } from 'react-admin';\n\nimport { ViewTitle } from './ViewTitle';\nimport { useApiHubPreference, readApiHubPreference } from '../preferences';\n\nconst Pagination = props => {\n    const { resource, perPage, setPerPage } = props;\n\n    const [perPagePreference, setPerPagePreference] = useApiHubPreference(\n        `perPage/${resource}`,\n        perPage\n    );\n\n    useEffect(() => {\n        if (perPagePreference !== perPage) {\n            setPerPage(perPagePreference);\n        }\n    }, [perPage, perPagePreference, setPerPage]);\n\n    const handleSetPerPage = newPerPage => {\n        setPerPagePreference(newPerPage);\n    };\n\n    return (\n        <RaPagination\n            {...props}\n            perPage={parseInt(perPagePreference, 10)}\n            setPerPage={handleSetPerPage}\n        />\n    );\n};\n\n/**\n * A List component which displays the react-admin list with the title above.\n *\n * @param {*} props The react-admin list properties\n *\n */\nexport const List = props => {\n    const { resource, perPage } = props;\n\n    // Get the initial per page preference per resources\n    // The readApiHubPreference method is used\n    // instead of the useApiHubPreference hook\n    // to not rerender the whole list each time the perPage property changes.\n    // See the <Pagination /> component above to understand the complete usage of the per page preferences.\n    const perPagePreference = readApiHubPreference(\n        `perPage/${resource}`,\n        perPage\n    );\n\n    return (\n        <>\n            <ViewTitle />\n            <RaList\n                {...props}\n                perPage={parseInt(perPagePreference, 10)}\n                pagination={<Pagination />}\n            />\n        </>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}