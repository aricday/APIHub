{"ast":null,"code":"import _slicedToArray from\"/Users/aricday/Projects/APIHub/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{Children,cloneElement,isValidElement,useState}from'react';import classnames from'classnames';import{useTranslate}from'ra-core';import Tooltip from'@material-ui/core/Tooltip';import Button from'@material-ui/core/Button';import Menu from'@material-ui/core/Menu';import MenuItem from'@material-ui/core/MenuItem';import ListItemIcon from'@material-ui/core/ListItemIcon';import{makeStyles}from'@material-ui/core/styles';import Divider from'@material-ui/core/Divider';import AccountCircle from'@material-ui/icons/AccountCircle';import ArrowDropDownIcon from'@material-ui/icons/ArrowDropDown';import{Link,useLocation}from'react-router-dom';import{CurrentUserId}from'./dataProvider/userContexts';import{UserOrganizationSwitcher,useUserContext}from'./userContexts';var useStyles=makeStyles(function(theme){return{menuItem:{color:theme.palette.text.secondary,marginBottom:theme.spacing()},menuItemLogout:{marginBottom:'0px'},divider:{marginBottom:theme.spacing()},icon:{minWidth:theme.spacing(5)}};},{name:'RaUserMenu'});/**\n * An hook to get the path of the related list of resources\n * from the current location.\n *\n * @example <caption>Simple usage</caption>\n *\n * const MyComponent = () => {\n *     const location = useLocation();\n *     console.log(location.pathname); // Shows \"/apis/uuid-of-api/show\"\n *\n *     const resourceListLocation = useResourceListLocation();\n *     console.log(resourceListLocation) // Show \"/apis\"\n * };\n *\n */export var useResourceListLocation=function useResourceListLocation(){var location=useLocation();var RESOURCE_LIST_MATCH=/\\/[^/]*/;var match=location.pathname.match(RESOURCE_LIST_MATCH);return match[0];};/**\n * The ApiHub UserMenu used in the ApiHub AppBar.\n *\n * @param {*} props UserMenu properties\n *\n * @example <caption>Simple usage</caption>\n * <ApiHubUserMenu />\n *\n * const MyAppBar = props => <ApiHubAppBar userMenu={ApiHubUserMenu} {...props} />\n *\n */export var ApiHubUserMenu=function ApiHubUserMenu(props){var translate=useTranslate();var classes=useStyles(props);var _useState=useState(null),_useState2=_slicedToArray(_useState,2),anchorEl=_useState2[0],setAnchorEl=_useState2[1];var redirectTo=useResourceListLocation();var _useUserContext=useUserContext(redirectTo),_useUserContext2=_slicedToArray(_useUserContext,3),userContext=_useUserContext2[0],_handleChangeUserProfile=_useUserContext2[1],// eslint-disable-line no-unused-vars\nhandleChangeUserActiveOrg=_useUserContext2[2];var children=props.children,label=props.label,icon=props.icon,logout=props.logout;if(!logout&&!children){return null;}var userName=userContext?translate('apihub.menu.user_details.full_name',{last_name:userContext.userDetails.lastName,first_name:userContext.userDetails.firstName}):'';var open=Boolean(anchorEl);var handleMenu=function handleMenu(event){return setAnchorEl(event.currentTarget);};var handleClose=function handleClose(){return setAnchorEl(null);};return React.createElement(\"div\",null,React.createElement(Tooltip,{title:label&&translate(label,{_:label})},React.createElement(Button,{\"aria-label\":label&&translate(label,{_:label}),\"aria-owns\":open?'menu-appbar':null,\"aria-haspopup\":true,color:\"inherit\",onClick:handleMenu,startIcon:icon,endIcon:React.createElement(ArrowDropDownIcon,null),key:userName},userName)),React.createElement(Menu,{id:\"menu-appbar\",anchorEl:anchorEl,anchorOrigin:{vertical:'top',horizontal:'right'},transformOrigin:{vertical:'top',horizontal:'right'},open:open,onClose:handleClose},React.createElement(MenuItem,{component:Link,to:\"/userContexts/\".concat(CurrentUserId),onClick:handleClose,className:classes.menuItem},React.createElement(ListItemIcon,{className:classes.icon},React.createElement(AccountCircle,null)),translate('resources.userContexts.actions.edit_profile')),React.createElement(Divider,{className:classes.divider}),React.createElement(UserOrganizationSwitcher,{userContext:userContext,onChangeUserContext:handleChangeUserActiveOrg}),Children.map(children,function(menuItem){return isValidElement(menuItem)?cloneElement(menuItem,{className:classes.menuItem,onClick:handleClose}):null;}),cloneElement(logout,{className:classnames(classes.menuItem,classes.menuItemLogout)})));};ApiHubUserMenu.defaultProps={label:'ra.auth.user_menu',icon:React.createElement(AccountCircle,null)};ApiHubUserMenu.__docgenInfo={\"description\":\"The ApiHub UserMenu used in the ApiHub AppBar.\\n\\n@param {*} props UserMenu properties\\n\\n@example <caption>Simple usage</caption>\\n<ApiHubUserMenu />\\n\\nconst MyAppBar = props => <ApiHubAppBar userMenu={ApiHubUserMenu} {...props} />\",\"methods\":[],\"displayName\":\"ApiHubUserMenu\",\"props\":{\"label\":{\"defaultValue\":{\"value\":\"'ra.auth.user_menu'\",\"computed\":false},\"required\":false},\"icon\":{\"defaultValue\":{\"value\":\"<AccountCircle />\",\"computed\":false},\"required\":false}}};if(typeof STORYBOOK_REACT_CLASSES!==\"undefined\"){STORYBOOK_REACT_CLASSES[\"src/ApiHubUserMenu.js\"]={name:\"ApiHubUserMenu\",docgenInfo:ApiHubUserMenu.__docgenInfo,path:\"src/ApiHubUserMenu.js\"};}","map":{"version":3,"sources":["/Users/aricday/Projects/APIHub/packages/layer7-apihub/src/ApiHubUserMenu.js"],"names":["React","Children","cloneElement","isValidElement","useState","classnames","useTranslate","Tooltip","Button","Menu","MenuItem","ListItemIcon","makeStyles","Divider","AccountCircle","ArrowDropDownIcon","Link","useLocation","CurrentUserId","UserOrganizationSwitcher","useUserContext","useStyles","theme","menuItem","color","palette","text","secondary","marginBottom","spacing","menuItemLogout","divider","icon","minWidth","name","useResourceListLocation","location","RESOURCE_LIST_MATCH","match","pathname","ApiHubUserMenu","props","translate","classes","anchorEl","setAnchorEl","redirectTo","userContext","_handleChangeUserProfile","handleChangeUserActiveOrg","children","label","logout","userName","last_name","userDetails","lastName","first_name","firstName","open","Boolean","handleMenu","event","currentTarget","handleClose","_","vertical","horizontal","map","className","onClick","defaultProps"],"mappings":"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","sourcesContent":["import React, { Children, cloneElement, isValidElement, useState } from 'react';\nimport classnames from 'classnames';\nimport { useTranslate } from 'ra-core';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Divider from '@material-ui/core/Divider';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport { Link, useLocation } from 'react-router-dom';\n\nimport { CurrentUserId } from './dataProvider/userContexts';\nimport { UserOrganizationSwitcher, useUserContext } from './userContexts';\n\nconst useStyles = makeStyles(\n    theme => ({\n        menuItem: {\n            color: theme.palette.text.secondary,\n            marginBottom: theme.spacing(),\n        },\n        menuItemLogout: {\n            marginBottom: '0px',\n        },\n        divider: {\n            marginBottom: theme.spacing(),\n        },\n        icon: {\n            minWidth: theme.spacing(5),\n        },\n    }),\n    {\n        name: 'RaUserMenu',\n    }\n);\n\n/**\n * An hook to get the path of the related list of resources\n * from the current location.\n *\n * @example <caption>Simple usage</caption>\n *\n * const MyComponent = () => {\n *     const location = useLocation();\n *     console.log(location.pathname); // Shows \"/apis/uuid-of-api/show\"\n *\n *     const resourceListLocation = useResourceListLocation();\n *     console.log(resourceListLocation) // Show \"/apis\"\n * };\n *\n */\nexport const useResourceListLocation = () => {\n    const location = useLocation();\n    const RESOURCE_LIST_MATCH = /\\/[^/]*/;\n    const match = location.pathname.match(RESOURCE_LIST_MATCH);\n    return match[0];\n};\n\n/**\n * The ApiHub UserMenu used in the ApiHub AppBar.\n *\n * @param {*} props UserMenu properties\n *\n * @example <caption>Simple usage</caption>\n * <ApiHubUserMenu />\n *\n * const MyAppBar = props => <ApiHubAppBar userMenu={ApiHubUserMenu} {...props} />\n *\n */\nexport const ApiHubUserMenu = props => {\n    const translate = useTranslate();\n    const classes = useStyles(props);\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    const redirectTo = useResourceListLocation();\n    const [\n        userContext,\n        _handleChangeUserProfile, // eslint-disable-line no-unused-vars\n        handleChangeUserActiveOrg,\n    ] = useUserContext(redirectTo);\n\n    const { children, label, icon, logout } = props;\n\n    if (!logout && !children) {\n        return null;\n    }\n\n    const userName = userContext\n        ? translate('apihub.menu.user_details.full_name', {\n              last_name: userContext.userDetails.lastName,\n              first_name: userContext.userDetails.firstName,\n          })\n        : '';\n\n    const open = Boolean(anchorEl);\n\n    const handleMenu = event => setAnchorEl(event.currentTarget);\n    const handleClose = () => setAnchorEl(null);\n\n    return (\n        <div>\n            <Tooltip title={label && translate(label, { _: label })}>\n                <Button\n                    aria-label={label && translate(label, { _: label })}\n                    aria-owns={open ? 'menu-appbar' : null}\n                    aria-haspopup\n                    color=\"inherit\"\n                    onClick={handleMenu}\n                    startIcon={icon}\n                    endIcon={<ArrowDropDownIcon />}\n                    key={userName}\n                >\n                    {userName}\n                </Button>\n            </Tooltip>\n            <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                }}\n                open={open}\n                onClose={handleClose}\n            >\n                <MenuItem\n                    component={Link}\n                    to={`/userContexts/${CurrentUserId}`}\n                    onClick={handleClose}\n                    className={classes.menuItem}\n                >\n                    <ListItemIcon className={classes.icon}>\n                        <AccountCircle />\n                    </ListItemIcon>\n                    {translate('resources.userContexts.actions.edit_profile')}\n                </MenuItem>\n                <Divider className={classes.divider} />\n                <UserOrganizationSwitcher\n                    userContext={userContext}\n                    onChangeUserContext={handleChangeUserActiveOrg}\n                />\n                {Children.map(children, menuItem =>\n                    isValidElement(menuItem)\n                        ? cloneElement(menuItem, {\n                              className: classes.menuItem,\n                              onClick: handleClose,\n                          })\n                        : null\n                )}\n                {cloneElement(logout, {\n                    className: classnames(\n                        classes.menuItem,\n                        classes.menuItemLogout\n                    ),\n                })}\n            </Menu>\n        </div>\n    );\n};\n\nApiHubUserMenu.defaultProps = {\n    label: 'ra.auth.user_menu',\n    icon: <AccountCircle />,\n};\n"]},"metadata":{},"sourceType":"module"}