{"ast":null,"code":"import _slicedToArray from\"/Users/aricday/Projects/APIHub/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import{makeStyles}from'@material-ui/core/styles';import Table from'@material-ui/core/Table';import TableBody from'@material-ui/core/TableBody';import TableCell from'@material-ui/core/TableCell';import TableContainer from'@material-ui/core/TableContainer';import TableHead from'@material-ui/core/TableHead';import TableRow from'@material-ui/core/TableRow';import Paper from'@material-ui/core/Paper';import Button from'@material-ui/core/Button';import{Sync}from'@material-ui/icons';import{useApiHubPreference}from'./';export default{title:'Preferences/Examples'};var useStyles=makeStyles(function(theme){return{toolbar:{marginTop:theme.spacing(),marginBottom:theme.spacing()}};});export var DatagridSize=function DatagridSize(){var classes=useStyles();var _useApiHubPreference=useApiHubPreference('size','small'),_useApiHubPreference2=_slicedToArray(_useApiHubPreference,2),sizePreference=_useApiHubPreference2[0],writeSizePreference=_useApiHubPreference2[1];var handleChangeSizePreference=function handleChangeSizePreference(){writeSizePreference(sizePreference==='small'?'medium':'small');};return React.createElement(React.Fragment,null,React.createElement(\"div\",{className:classes.toolbar},React.createElement(Button,{color:\"primary\",startIcon:React.createElement(Sync,null),onClick:handleChangeSizePreference},\"Change Size\")),React.createElement(SimpleDatagridWithPreferences,null));};// Helper methods and components\nfunction createData(name,calories,fat,carbs,protein){return{name:name,calories:calories,fat:fat,carbs:carbs,protein:protein};}var rows=[createData('Frozen yoghurt',159,6.0,24,4.0),createData('Ice cream sandwich',237,9.0,37,4.3),createData('Eclair',262,16.0,24,6.0),createData('Cupcake',305,3.7,67,4.3),createData('Gingerbread',356,16.0,49,3.9)];var useSimpleDatagridStyles=makeStyles({table:{minWidth:650}});function SimpleDatagrid(props){var classes=useSimpleDatagridStyles(props);var size=props.size;return React.createElement(TableContainer,{component:Paper},React.createElement(Table,{className:classes.table,size:size},React.createElement(TableHead,null,React.createElement(TableRow,null,React.createElement(TableCell,null,\"Dessert (100g serving)\"),React.createElement(TableCell,{align:\"right\"},\"Calories\"),React.createElement(TableCell,{align:\"right\"},\"Fat\\xA0(g)\"),React.createElement(TableCell,{align:\"right\"},\"Carbs\\xA0(g)\"),React.createElement(TableCell,{align:\"right\"},\"Protein\\xA0(g)\"))),React.createElement(TableBody,null,rows.map(function(row){return React.createElement(TableRow,{key:row.name},React.createElement(TableCell,{component:\"th\",scope:\"row\"},row.name),React.createElement(TableCell,{align:\"right\"},row.calories),React.createElement(TableCell,{align:\"right\"},row.fat),React.createElement(TableCell,{align:\"right\"},row.carbs),React.createElement(TableCell,{align:\"right\"},row.protein));}))));}function SimpleDatagridWithPreferences(props){var _useApiHubPreference3=useApiHubPreference('size'),_useApiHubPreference4=_slicedToArray(_useApiHubPreference3,1),sizePreference=_useApiHubPreference4[0];return React.createElement(SimpleDatagrid,Object.assign({},props,{size:sizePreference}));}DatagridSize.__docgenInfo={\"description\":\"\",\"methods\":[],\"displayName\":\"DatagridSize\"};if(typeof STORYBOOK_REACT_CLASSES!==\"undefined\"){STORYBOOK_REACT_CLASSES[\"src/preferences/Preferences.stories.js\"]={name:\"DatagridSize\",docgenInfo:DatagridSize.__docgenInfo,path:\"src/preferences/Preferences.stories.js\"};}","map":{"version":3,"sources":["/Users/aricday/Projects/APIHub/packages/layer7-apihub/src/preferences/Preferences.stories.js"],"names":["React","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Button","Sync","useApiHubPreference","title","useStyles","theme","toolbar","marginTop","spacing","marginBottom","DatagridSize","classes","sizePreference","writeSizePreference","handleChangeSizePreference","createData","name","calories","fat","carbs","protein","rows","useSimpleDatagridStyles","table","minWidth","SimpleDatagrid","props","size","map","row","SimpleDatagridWithPreferences"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport { Sync } from '@material-ui/icons';\n\nimport { useApiHubPreference } from './';\n\nexport default {\n    title: 'Preferences/Examples',\n};\n\nconst useStyles = makeStyles(theme => ({\n    toolbar: {\n        marginTop: theme.spacing(),\n        marginBottom: theme.spacing(),\n    },\n}));\n\nexport const DatagridSize = () => {\n    const classes = useStyles();\n\n    const [sizePreference, writeSizePreference] = useApiHubPreference(\n        'size',\n        'small'\n    );\n\n    const handleChangeSizePreference = () => {\n        writeSizePreference(sizePreference === 'small' ? 'medium' : 'small');\n    };\n\n    return (\n        <>\n            <div className={classes.toolbar}>\n                <Button\n                    color=\"primary\"\n                    startIcon={<Sync />}\n                    onClick={handleChangeSizePreference}\n                >\n                    Change Size\n                </Button>\n            </div>\n            <SimpleDatagridWithPreferences />\n        </>\n    );\n};\n\n// Helper methods and components\n\nfunction createData(name, calories, fat, carbs, protein) {\n    return { name, calories, fat, carbs, protein };\n}\n\nconst rows = [\n    createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n    createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n    createData('Eclair', 262, 16.0, 24, 6.0),\n    createData('Cupcake', 305, 3.7, 67, 4.3),\n    createData('Gingerbread', 356, 16.0, 49, 3.9),\n];\n\nconst useSimpleDatagridStyles = makeStyles({\n    table: {\n        minWidth: 650,\n    },\n});\n\nfunction SimpleDatagrid(props) {\n    const classes = useSimpleDatagridStyles(props);\n    const { size } = props;\n\n    return (\n        <TableContainer component={Paper}>\n            <Table className={classes.table} size={size}>\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Dessert (100g serving)</TableCell>\n                        <TableCell align=\"right\">Calories</TableCell>\n                        <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\n                        <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\n                        <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {rows.map(row => (\n                        <TableRow key={row.name}>\n                            <TableCell component=\"th\" scope=\"row\">\n                                {row.name}\n                            </TableCell>\n                            <TableCell align=\"right\">{row.calories}</TableCell>\n                            <TableCell align=\"right\">{row.fat}</TableCell>\n                            <TableCell align=\"right\">{row.carbs}</TableCell>\n                            <TableCell align=\"right\">{row.protein}</TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    );\n}\n\nfunction SimpleDatagridWithPreferences(props) {\n    const [sizePreference] = useApiHubPreference('size');\n\n    return <SimpleDatagrid {...props} size={sizePreference} />;\n}\n"]},"metadata":{},"sourceType":"module"}