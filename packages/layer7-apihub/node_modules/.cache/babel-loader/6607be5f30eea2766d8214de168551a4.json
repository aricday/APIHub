{"ast":null,"code":"import _objectWithoutProperties from\"/Users/aricday/Projects/APIHub/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React from'react';import{TabbedShowLayout,Tab,useGetOne,useQuery,CRUD_GET_ONE}from'react-admin';import{useTranslate}from'ra-core';import{makeStyles}from'@material-ui/core/styles';import get from'lodash/get';import{Show}from'../ui';import{CurrentUserId}from'../dataProvider/userContexts';import{isPublisher}from'../userContexts';import{Overview}from'./Overview';import{Documentation}from'./Documentation';import{Specs}from'./Specs';var ApiTitle=function ApiTitle(_ref){var record=_ref.record;return record?record.name:'';};var useTabStyles=makeStyles(function(theme){return{root:{textTransform:'capitalize'},selected:{color:theme.palette.primary.main,fontWeight:theme.typography.fontWeightBold}};});export var ApiShow=function ApiShow(_ref2){var id=_ref2.id,rest=_objectWithoutProperties(_ref2,[\"id\"]);var _useGetOne=useGetOne('userContexts',CurrentUserId,{action:CRUD_GET_ONE}),userContexts=_useGetOne.data;var _useQuery=useQuery({type:'getPermissions',resource:'apis',payload:{id:id}}),apisPermissions=_useQuery.data;return React.createElement(Show,Object.assign({title:React.createElement(ApiTitle,null),id:id},rest),React.createElement(ApiShowTabs,{userIsPublisher:isPublisher(userContexts),userCanEdit:get(apisPermissions,'canEdit',false),userCanDelete:get(apisPermissions,'canEdit',false)}));};export var isSoapApi=function isSoapApi(record){// The API type is defined as ssgServiceType in the API list page,\n// but as apiServiceType in the API show page.\n// The react-admin engine first renders the API show page with the data of the API list page\n// in order to improve the user experience.\n// So we need to test both names to avoid a visual glitch when rendering the Tabs.\nvar type=get(record,'apiServiceType',null)||get(record,'ssgServiceType',null);return type&&type.toLowerCase()==='soap';};var ApiShowTabs=function ApiShowTabs(props){var translate=useTranslate();var classes=useTabStyles(props);var userIsPublisher=props.userIsPublisher,userCanEdit=props.userCanEdit,userCanDelete=props.userCanDelete,rest=_objectWithoutProperties(props,[\"userIsPublisher\",\"userCanEdit\",\"userCanDelete\"]);var showSpecs=!isSoapApi(props.record);return React.createElement(TabbedShowLayout,rest,React.createElement(Tab,{label:translate('resources.apis.overview.title'),classes:classes},React.createElement(Overview,{userIsPublisher:userIsPublisher})),showSpecs&&React.createElement(Tab,{label:translate('resources.apis.specification.title'),path:\"spec\",classes:classes},React.createElement(Specs,null)),React.createElement(Tab,{label:translate('resources.apis.documentation.title'),path:\"doc\",classes:classes},React.createElement(Documentation,{userCanEdit:userCanEdit,userCanDelete:userCanDelete})));};ApiShow.__docgenInfo={\"description\":\"\",\"methods\":[],\"displayName\":\"ApiShow\"};if(typeof STORYBOOK_REACT_CLASSES!==\"undefined\"){STORYBOOK_REACT_CLASSES[\"src/apis/ApiShow.js\"]={name:\"ApiShow\",docgenInfo:ApiShow.__docgenInfo,path:\"src/apis/ApiShow.js\"};}","map":{"version":3,"sources":["/Users/aricday/Projects/APIHub/packages/layer7-apihub/src/apis/ApiShow.js"],"names":["React","TabbedShowLayout","Tab","useGetOne","useQuery","CRUD_GET_ONE","useTranslate","makeStyles","get","Show","CurrentUserId","isPublisher","Overview","Documentation","Specs","ApiTitle","record","name","useTabStyles","theme","root","textTransform","selected","color","palette","primary","main","fontWeight","typography","fontWeightBold","ApiShow","id","rest","action","userContexts","data","type","resource","payload","apisPermissions","isSoapApi","toLowerCase","ApiShowTabs","props","translate","classes","userIsPublisher","userCanEdit","userCanDelete","showSpecs"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n    TabbedShowLayout,\n    Tab,\n    useGetOne,\n    useQuery,\n    CRUD_GET_ONE,\n} from 'react-admin';\nimport { useTranslate } from 'ra-core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport get from 'lodash/get';\n\nimport { Show } from '../ui';\nimport { CurrentUserId } from '../dataProvider/userContexts';\nimport { isPublisher } from '../userContexts';\nimport { Overview } from './Overview';\nimport { Documentation } from './Documentation';\nimport { Specs } from './Specs';\n\nconst ApiTitle = ({ record }) => (record ? record.name : '');\n\nconst useTabStyles = makeStyles(theme => ({\n    root: {\n        textTransform: 'capitalize',\n    },\n    selected: {\n        color: theme.palette.primary.main,\n        fontWeight: theme.typography.fontWeightBold,\n    },\n}));\n\nexport const ApiShow = ({ id, ...rest }) => {\n    const { data: userContexts } = useGetOne('userContexts', CurrentUserId, {\n        action: CRUD_GET_ONE,\n    });\n\n    const { data: apisPermissions } = useQuery({\n        type: 'getPermissions',\n        resource: 'apis',\n        payload: { id },\n    });\n\n    return (\n        <Show title={<ApiTitle />} id={id} {...rest}>\n            <ApiShowTabs\n                userIsPublisher={isPublisher(userContexts)}\n                userCanEdit={get(apisPermissions, 'canEdit', false)}\n                userCanDelete={get(apisPermissions, 'canEdit', false)}\n            />\n        </Show>\n    );\n};\n\nexport const isSoapApi = record => {\n    // The API type is defined as ssgServiceType in the API list page,\n    // but as apiServiceType in the API show page.\n    // The react-admin engine first renders the API show page with the data of the API list page\n    // in order to improve the user experience.\n    // So we need to test both names to avoid a visual glitch when rendering the Tabs.\n    const type =\n        get(record, 'apiServiceType', null) ||\n        get(record, 'ssgServiceType', null);\n    return type && type.toLowerCase() === 'soap';\n};\n\nconst ApiShowTabs = props => {\n    const translate = useTranslate();\n    const classes = useTabStyles(props);\n    const { userIsPublisher, userCanEdit, userCanDelete, ...rest } = props;\n\n    const showSpecs = !isSoapApi(props.record);\n\n    return (\n        <TabbedShowLayout {...rest}>\n            <Tab\n                label={translate('resources.apis.overview.title')}\n                classes={classes}\n            >\n                <Overview userIsPublisher={userIsPublisher} />\n            </Tab>\n            {showSpecs && (\n                <Tab\n                    label={translate('resources.apis.specification.title')}\n                    path=\"spec\"\n                    classes={classes}\n                >\n                    <Specs />\n                </Tab>\n            )}\n            <Tab\n                label={translate('resources.apis.documentation.title')}\n                path=\"doc\"\n                classes={classes}\n            >\n                <Documentation\n                    userCanEdit={userCanEdit}\n                    userCanDelete={userCanDelete}\n                />\n            </Tab>\n        </TabbedShowLayout>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}