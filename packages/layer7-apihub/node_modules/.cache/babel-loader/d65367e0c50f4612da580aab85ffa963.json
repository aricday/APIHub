{"ast":null,"code":"import _slicedToArray from\"/Users/aricday/Projects/APIHub/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import{makeStyles}from'@material-ui/core/styles';import Table from'@material-ui/core/Table';import TableBody from'@material-ui/core/TableBody';import TableCell from'@material-ui/core/TableCell';import TableContainer from'@material-ui/core/TableContainer';import TableHead from'@material-ui/core/TableHead';import TableRow from'@material-ui/core/TableRow';import Paper from'@material-ui/core/Paper';import Card from'@material-ui/core/Card';import CardHeader from'@material-ui/core/CardHeader';import CardContent from'@material-ui/core/CardContent';import Typography from'@material-ui/core/Typography';import Grid from'@material-ui/core/Grid';import{ListDisplayButton,ListDisplayProvider,LIST_DISPLAY_CARDS,useListDisplay}from'./';export default{title:'UI/ListDisplay'};var ListDisplay=function ListDisplay(){var _useListDisplay=useListDisplay(),_useListDisplay2=_slicedToArray(_useListDisplay,1),display=_useListDisplay2[0];if(display===LIST_DISPLAY_CARDS){return React.createElement(SimpleCardList,null);}return React.createElement(SimpleDatagrid,null);};var useStyles=makeStyles(function(theme){return{toolbar:{marginTop:theme.spacing(),marginBottom:theme.spacing()}};});export var Default=function Default(){var classes=useStyles();return React.createElement(ListDisplayProvider,{preferenceName:\"storybook\"},React.createElement(\"div\",{className:classes.toolbar},React.createElement(ListDisplayButton,null)),React.createElement(\"div\",null,React.createElement(ListDisplay,null)));};// Helper methods and components\nfunction createData(name,calories,fat,carbs,protein){return{name:name,calories:calories,fat:fat,carbs:carbs,protein:protein};}var rows=[createData('Frozen yoghurt',159,6.0,24,4.0),createData('Ice cream sandwich',237,9.0,37,4.3),createData('Eclair',262,16.0,24,6.0),createData('Cupcake',305,3.7,67,4.3),createData('Gingerbread',356,16.0,49,3.9)];var useSimpleCardListStyles=makeStyles(function(theme){return{root:{minWidth:275,backgroundColor:theme.palette.background.paper},header:{minWidth:100,'& > p':{fontWeight:'bold'}}};});function SimpleCardList(){var classes=useSimpleCardListStyles();return React.createElement(Grid,{container:true,spacing:4},rows.map(function(row){return React.createElement(Grid,{item:true},React.createElement(Card,{className:classes.root},React.createElement(CardHeader,{className:classes.title,color:\"textSecondary\",title:row.name,subheader:\"100g serving\",gutterBottom:true}),React.createElement(CardContent,null,React.createElement(Grid,{spacing:\"1\",container:true},React.createElement(Grid,{className:classes.header,item:true},React.createElement(Typography,{component:\"p\"},\"Calories:\")),React.createElement(Grid,{item:true},React.createElement(Typography,null,row.calories))),React.createElement(Grid,{spacing:\"1\",container:true},React.createElement(Grid,{className:classes.header,item:true},React.createElement(Typography,{component:\"p\"},\"Fat\\xA0:\")),React.createElement(Grid,{item:true},React.createElement(Typography,null,row.fat,\"g\"))),React.createElement(Grid,{spacing:\"1\",container:true},React.createElement(Grid,{className:classes.header,item:true},React.createElement(Typography,{component:\"p\"},\"Carbs\\xA0:\")),React.createElement(Grid,{item:true},React.createElement(Typography,null,row.carbs,\"g\"))),React.createElement(Grid,{spacing:\"1\",container:true},React.createElement(Grid,{className:classes.header,item:true},React.createElement(Typography,{component:\"p\"},\"Protein\\xA0:\")),React.createElement(Grid,{item:true,alignContent:\"flex-end\"},React.createElement(Typography,null,row.protein,\"g\"))))));}));}var useSimpleDatagridStyles=makeStyles({table:{minWidth:650}});function SimpleDatagrid(){var classes=useSimpleDatagridStyles();return React.createElement(TableContainer,{component:Paper},React.createElement(Table,{className:classes.table,size:\"small\"},React.createElement(TableHead,null,React.createElement(TableRow,null,React.createElement(TableCell,null,\"Dessert (100g serving)\"),React.createElement(TableCell,{align:\"right\"},\"Calories\"),React.createElement(TableCell,{align:\"right\"},\"Fat\\xA0(g)\"),React.createElement(TableCell,{align:\"right\"},\"Carbs\\xA0(g)\"),React.createElement(TableCell,{align:\"right\"},\"Protein\\xA0(g)\"))),React.createElement(TableBody,null,rows.map(function(row){return React.createElement(TableRow,{key:row.name},React.createElement(TableCell,{component:\"th\",scope:\"row\"},row.name),React.createElement(TableCell,{align:\"right\"},row.calories),React.createElement(TableCell,{align:\"right\"},row.fat),React.createElement(TableCell,{align:\"right\"},row.carbs),React.createElement(TableCell,{align:\"right\"},row.protein));}))));}Default.__docgenInfo={\"description\":\"\",\"methods\":[],\"displayName\":\"Default\"};if(typeof STORYBOOK_REACT_CLASSES!==\"undefined\"){STORYBOOK_REACT_CLASSES[\"src/ui/ListDisplay/ListDisplay.stories.js\"]={name:\"Default\",docgenInfo:Default.__docgenInfo,path:\"src/ui/ListDisplay/ListDisplay.stories.js\"};}","map":{"version":3,"sources":["/Users/aricday/Projects/APIHub/packages/layer7-apihub/src/ui/ListDisplay/ListDisplay.stories.js"],"names":["React","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Card","CardHeader","CardContent","Typography","Grid","ListDisplayButton","ListDisplayProvider","LIST_DISPLAY_CARDS","useListDisplay","title","ListDisplay","display","useStyles","theme","toolbar","marginTop","spacing","marginBottom","Default","classes","createData","name","calories","fat","carbs","protein","rows","useSimpleCardListStyles","root","minWidth","backgroundColor","palette","background","paper","header","fontWeight","SimpleCardList","map","row","useSimpleDatagridStyles","table","SimpleDatagrid"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\n\nimport {\n    ListDisplayButton,\n    ListDisplayProvider,\n    LIST_DISPLAY_CARDS,\n    useListDisplay,\n} from './';\n\nexport default {\n    title: 'UI/ListDisplay',\n};\n\nconst ListDisplay = () => {\n    const [display] = useListDisplay();\n\n    if (display === LIST_DISPLAY_CARDS) {\n        return <SimpleCardList />;\n    }\n\n    return <SimpleDatagrid />;\n};\n\nconst useStyles = makeStyles(theme => ({\n    toolbar: {\n        marginTop: theme.spacing(),\n        marginBottom: theme.spacing(),\n    },\n}));\n\nexport const Default = () => {\n    const classes = useStyles();\n    return (\n        <ListDisplayProvider preferenceName=\"storybook\">\n            <div className={classes.toolbar}>\n                <ListDisplayButton />\n            </div>\n            <div>\n                <ListDisplay />\n            </div>\n        </ListDisplayProvider>\n    );\n};\n\n// Helper methods and components\n\nfunction createData(name, calories, fat, carbs, protein) {\n    return { name, calories, fat, carbs, protein };\n}\n\nconst rows = [\n    createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n    createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n    createData('Eclair', 262, 16.0, 24, 6.0),\n    createData('Cupcake', 305, 3.7, 67, 4.3),\n    createData('Gingerbread', 356, 16.0, 49, 3.9),\n];\n\nconst useSimpleCardListStyles = makeStyles(theme => ({\n    root: {\n        minWidth: 275,\n        backgroundColor: theme.palette.background.paper,\n    },\n    header: {\n        minWidth: 100,\n        '& > p': {\n            fontWeight: 'bold',\n        },\n    },\n}));\n\nfunction SimpleCardList() {\n    const classes = useSimpleCardListStyles();\n\n    return (\n        <Grid container spacing={4}>\n            {rows.map(row => (\n                <Grid item>\n                    <Card className={classes.root}>\n                        <CardHeader\n                            className={classes.title}\n                            color=\"textSecondary\"\n                            title={row.name}\n                            subheader=\"100g serving\"\n                            gutterBottom\n                        ></CardHeader>\n                        <CardContent>\n                            <Grid spacing=\"1\" container>\n                                <Grid className={classes.header} item>\n                                    <Typography component=\"p\">\n                                        Calories:\n                                    </Typography>\n                                </Grid>\n                                <Grid item>\n                                    <Typography>{row.calories}</Typography>\n                                </Grid>\n                            </Grid>\n                            <Grid spacing=\"1\" container>\n                                <Grid className={classes.header} item>\n                                    <Typography component=\"p\">\n                                        Fat&nbsp;:\n                                    </Typography>\n                                </Grid>\n                                <Grid item>\n                                    <Typography>{row.fat}g</Typography>\n                                </Grid>\n                            </Grid>\n                            <Grid spacing=\"1\" container>\n                                <Grid className={classes.header} item>\n                                    <Typography component=\"p\">\n                                        Carbs&nbsp;:\n                                    </Typography>\n                                </Grid>\n                                <Grid item>\n                                    <Typography>{row.carbs}g</Typography>\n                                </Grid>\n                            </Grid>\n                            <Grid spacing=\"1\" container>\n                                <Grid className={classes.header} item>\n                                    <Typography component=\"p\">\n                                        Protein&nbsp;:\n                                    </Typography>\n                                </Grid>\n                                <Grid item alignContent=\"flex-end\">\n                                    <Typography>{row.protein}g</Typography>\n                                </Grid>\n                            </Grid>\n                        </CardContent>\n                    </Card>\n                </Grid>\n            ))}\n        </Grid>\n    );\n}\n\nconst useSimpleDatagridStyles = makeStyles({\n    table: {\n        minWidth: 650,\n    },\n});\n\nfunction SimpleDatagrid() {\n    const classes = useSimpleDatagridStyles();\n\n    return (\n        <TableContainer component={Paper}>\n            <Table className={classes.table} size=\"small\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Dessert (100g serving)</TableCell>\n                        <TableCell align=\"right\">Calories</TableCell>\n                        <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\n                        <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\n                        <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {rows.map(row => (\n                        <TableRow key={row.name}>\n                            <TableCell component=\"th\" scope=\"row\">\n                                {row.name}\n                            </TableCell>\n                            <TableCell align=\"right\">{row.calories}</TableCell>\n                            <TableCell align=\"right\">{row.fat}</TableCell>\n                            <TableCell align=\"right\">{row.carbs}</TableCell>\n                            <TableCell align=\"right\">{row.protein}</TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}