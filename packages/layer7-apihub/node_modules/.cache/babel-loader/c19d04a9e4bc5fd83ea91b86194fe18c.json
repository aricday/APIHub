{"ast":null,"code":"import _slicedToArray from\"/Users/aricday/Projects/APIHub/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{useTranslate,useGetList}from'ra-core';import{makeStyles}from'@material-ui/core/styles';import FormControl from'@material-ui/core/FormControl';import InputLabel from'@material-ui/core/InputLabel';import Grid from'@material-ui/core/Grid';import Select from'@material-ui/core/Select';import MenuItem from'@material-ui/core/MenuItem';import LinearProgress from'@material-ui/core/LinearProgress';import Typography from'@material-ui/core/Typography';import{ApplicationCredentials}from'./ApplicationCredentials';var useStyles=makeStyles(function(theme){return{root:{fontFamily:theme.typography.body2.fontFamily,padding:'0px 20px'},formControl:{minWidth:'240px'}};});export var Applications=function Applications(_ref){var id=_ref.id;var translate=useTranslate();var classes=useStyles();var _useGetList=useGetList('applications',undefined,{field:'name',order:'ASC'},{apiUuid:id}),data=_useGetList.data,loaded=_useGetList.loaded,error=_useGetList.error;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),selectedApi=_useState2[0],setSelectedApi=_useState2[1];var handleChange=function handleChange(event){var selectedApiId=event.target.value;if(!data){return;}setSelectedApi(data[selectedApiId]);};if(!loaded){return React.createElement(LinearProgress,null);}if(!data||error){return React.createElement(Typography,{variant:\"body2\",color:\"error\"},translate('ra.page.error'));}var applications=Object.keys(data).map(function(key){return data[key];});if(applications.length===0){return null;}return React.createElement(\"div\",{className:classes.root},React.createElement(Grid,{container:true,spacing:3},React.createElement(Grid,{item:true,xs:7},React.createElement(Typography,{variant:\"h6\",color:\"textSecondary\",gutterBottom:true},translate('resources.apis.specification.actions.select_application')),React.createElement(FormControl,{className:classes.formControl},React.createElement(InputLabel,{id:\"select-application-label\"},translate('resources.apis.specification.fields.select_application_label')),React.createElement(Select,{labelId:\"select-application-label\",value:selectedApi?selectedApi.id:'',onChange:handleChange},applications.map(function(_ref2){var id=_ref2.id,name=_ref2.name;return React.createElement(MenuItem,{key:id,value:id},name);})))),React.createElement(Grid,{item:true,xs:5},selectedApi&&React.createElement(ApplicationCredentials,{id:selectedApi.id}))));};Applications.__docgenInfo={\"description\":\"\",\"methods\":[],\"displayName\":\"Applications\"};if(typeof STORYBOOK_REACT_CLASSES!==\"undefined\"){STORYBOOK_REACT_CLASSES[\"src/apis/Application/Applications.js\"]={name:\"Applications\",docgenInfo:Applications.__docgenInfo,path:\"src/apis/Application/Applications.js\"};}","map":{"version":3,"sources":["/Users/aricday/Projects/APIHub/packages/layer7-apihub/src/apis/Application/Applications.js"],"names":["React","useState","useTranslate","useGetList","makeStyles","FormControl","InputLabel","Grid","Select","MenuItem","LinearProgress","Typography","ApplicationCredentials","useStyles","theme","root","fontFamily","typography","body2","padding","formControl","minWidth","Applications","id","translate","classes","undefined","field","order","apiUuid","data","loaded","error","selectedApi","setSelectedApi","handleChange","event","selectedApiId","target","value","applications","Object","keys","map","key","length","name"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useTranslate, useGetList } from 'ra-core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Grid from '@material-ui/core/Grid';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Typography from '@material-ui/core/Typography';\n\nimport { ApplicationCredentials } from './ApplicationCredentials';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        fontFamily: theme.typography.body2.fontFamily,\n        padding: '0px 20px',\n    },\n    formControl: {\n        minWidth: '240px',\n    },\n}));\n\nexport const Applications = ({ id }) => {\n    const translate = useTranslate();\n    const classes = useStyles();\n\n    const { data, loaded, error } = useGetList(\n        'applications',\n        undefined,\n        { field: 'name', order: 'ASC' },\n        {\n            apiUuid: id,\n        }\n    );\n\n    const [selectedApi, setSelectedApi] = useState(null);\n\n    const handleChange = event => {\n        const selectedApiId = event.target.value;\n        if (!data) {\n            return;\n        }\n        setSelectedApi(data[selectedApiId]);\n    };\n\n    if (!loaded) {\n        return <LinearProgress />;\n    }\n\n    if (!data || error) {\n        return (\n            <Typography variant=\"body2\" color=\"error\">\n                {translate('ra.page.error')}\n            </Typography>\n        );\n    }\n\n    const applications = Object.keys(data).map(key => data[key]);\n\n    if (applications.length === 0) {\n        return null;\n    }\n\n    return (\n        <div className={classes.root}>\n            <Grid container spacing={3}>\n                <Grid item xs={7}>\n                    <Typography variant=\"h6\" color=\"textSecondary\" gutterBottom>\n                        {translate(\n                            'resources.apis.specification.actions.select_application'\n                        )}\n                    </Typography>\n                    <FormControl className={classes.formControl}>\n                        <InputLabel id=\"select-application-label\">\n                            {translate(\n                                'resources.apis.specification.fields.select_application_label'\n                            )}\n                        </InputLabel>\n                        <Select\n                            labelId=\"select-application-label\"\n                            value={selectedApi ? selectedApi.id : ''}\n                            onChange={handleChange}\n                        >\n                            {applications.map(({ id, name }) => (\n                                <MenuItem key={id} value={id}>\n                                    {name}\n                                </MenuItem>\n                            ))}\n                        </Select>\n                    </FormControl>\n                </Grid>\n                <Grid item xs={5}>\n                    {selectedApi && (\n                        <ApplicationCredentials id={selectedApi.id} />\n                    )}\n                </Grid>\n            </Grid>\n        </div>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}