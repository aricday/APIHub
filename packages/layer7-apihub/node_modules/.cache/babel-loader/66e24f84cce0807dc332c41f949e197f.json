{"ast":null,"code":"import _objectWithoutProperties from\"/Users/aricday/Projects/APIHub/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React,{cloneElement}from'react';import AppBar from'@material-ui/core/AppBar';import Divider from'@material-ui/core/Divider';import Toolbar from'@material-ui/core/Toolbar';import{makeStyles}from'@material-ui/core/styles';import{HideOnScroll,LoadingIndicator,useLocale}from'react-admin';import{ApiHubUserMenu}from'./ApiHubUserMenu';import{ApiHubLanguageSwitcher}from'./ApiHubLanguageSwitcher';import{SidebarButton}from'./SidebarButton';var useStyles=makeStyles(function(theme){return{toolbar:{paddingRight:24},header:{flex:1,display:'flex',alignItems:'center',justifyContent:'flex-start',textOverflow:'ellipsis',whiteSpace:'nowrap',overflow:'hidden',minWidth:'156px'},divider:{alignSelf:'stretch',backgroundColor:theme.palette.primary.contrastText,height:'auto',marginBottom:theme.spacing(2),marginLeft:theme.spacing(4),marginRight:theme.spacing(4),marginTop:theme.spacing(2)}};},{name:'RaAppBar'});/**\n * The ApiHub AppBar used in the ApiHub Layout.\n *\n * @param {*} props AppBar properties\n */export var ApiHubAppBar=function ApiHubAppBar(_ref){var children=_ref.children,classesOverride=_ref.classes,className=_ref.className,languagesMenu=_ref.languagesMenu,logo=_ref.logo,logout=_ref.logout,open=_ref.open,sidebarButton=_ref.sidebarButton,title=_ref.title,userMenu=_ref.userMenu,rest=_objectWithoutProperties(_ref,[\"children\",\"classes\",\"className\",\"languagesMenu\",\"logo\",\"logout\",\"open\",\"sidebarButton\",\"title\",\"userMenu\"]);var classes=useStyles({classes:classesOverride});useLocale();// Make sure the locale change would rerender the component\nreturn React.createElement(HideOnScroll,null,React.createElement(AppBar,Object.assign({className:className,color:\"secondary\",elevation:0},rest),React.createElement(Toolbar,{disableGutters:true,variant:\"regular\",className:classes.toolbar},cloneElement(sidebarButton,{open:open}),React.createElement(\"div\",{className:classes.header},children),React.createElement(LoadingIndicator,null),cloneElement(languagesMenu),React.createElement(Divider,{className:classes.divider,orientation:\"vertical\"}),cloneElement(userMenu,{logout:logout}))));};ApiHubAppBar.defaultProps={userMenu:React.createElement(ApiHubUserMenu,null),languagesMenu:React.createElement(ApiHubLanguageSwitcher,null),sidebarButton:React.createElement(SidebarButton,null)};ApiHubAppBar.__docgenInfo={\"description\":\"The ApiHub AppBar used in the ApiHub Layout.\\n\\n@param {*} props AppBar properties\",\"methods\":[],\"displayName\":\"ApiHubAppBar\",\"props\":{\"userMenu\":{\"defaultValue\":{\"value\":\"<ApiHubUserMenu />\",\"computed\":false},\"required\":false},\"languagesMenu\":{\"defaultValue\":{\"value\":\"<ApiHubLanguageSwitcher />\",\"computed\":false},\"required\":false},\"sidebarButton\":{\"defaultValue\":{\"value\":\"<SidebarButton />\",\"computed\":false},\"required\":false}}};if(typeof STORYBOOK_REACT_CLASSES!==\"undefined\"){STORYBOOK_REACT_CLASSES[\"src/ApiHubAppBar.js\"]={name:\"ApiHubAppBar\",docgenInfo:ApiHubAppBar.__docgenInfo,path:\"src/ApiHubAppBar.js\"};}","map":{"version":3,"sources":["/Users/aricday/Projects/APIHub/packages/layer7-apihub/src/ApiHubAppBar.js"],"names":["React","cloneElement","AppBar","Divider","Toolbar","makeStyles","HideOnScroll","LoadingIndicator","useLocale","ApiHubUserMenu","ApiHubLanguageSwitcher","SidebarButton","useStyles","theme","toolbar","paddingRight","header","flex","display","alignItems","justifyContent","textOverflow","whiteSpace","overflow","minWidth","divider","alignSelf","backgroundColor","palette","primary","contrastText","height","marginBottom","spacing","marginLeft","marginRight","marginTop","name","ApiHubAppBar","children","classesOverride","classes","className","languagesMenu","logo","logout","open","sidebarButton","title","userMenu","rest","defaultProps"],"mappings":"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","sourcesContent":["import React, { cloneElement } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Divider from '@material-ui/core/Divider';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { HideOnScroll, LoadingIndicator, useLocale } from 'react-admin';\nimport { ApiHubUserMenu } from './ApiHubUserMenu';\nimport { ApiHubLanguageSwitcher } from './ApiHubLanguageSwitcher';\nimport { SidebarButton } from './SidebarButton';\n\nconst useStyles = makeStyles(\n    theme => ({\n        toolbar: {\n            paddingRight: 24,\n        },\n        header: {\n            flex: 1,\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'flex-start',\n            textOverflow: 'ellipsis',\n            whiteSpace: 'nowrap',\n            overflow: 'hidden',\n            minWidth: '156px',\n        },\n        divider: {\n            alignSelf: 'stretch',\n            backgroundColor: theme.palette.primary.contrastText,\n            height: 'auto',\n            marginBottom: theme.spacing(2),\n            marginLeft: theme.spacing(4),\n            marginRight: theme.spacing(4),\n            marginTop: theme.spacing(2),\n        },\n    }),\n    { name: 'RaAppBar' }\n);\n\n/**\n * The ApiHub AppBar used in the ApiHub Layout.\n *\n * @param {*} props AppBar properties\n */\nexport const ApiHubAppBar = ({\n    children,\n    classes: classesOverride,\n    className,\n    languagesMenu,\n    logo,\n    logout,\n    open,\n    sidebarButton,\n    title,\n    userMenu,\n    ...rest\n}) => {\n    const classes = useStyles({ classes: classesOverride });\n    useLocale(); // Make sure the locale change would rerender the component\n\n    return (\n        <HideOnScroll>\n            <AppBar\n                className={className}\n                color=\"secondary\"\n                elevation={0}\n                {...rest}\n            >\n                <Toolbar\n                    disableGutters\n                    variant=\"regular\"\n                    className={classes.toolbar}\n                >\n                    {cloneElement(sidebarButton, { open })}\n                    <div className={classes.header}>{children}</div>\n                    <LoadingIndicator />\n                    {cloneElement(languagesMenu)}\n                    <Divider\n                        className={classes.divider}\n                        orientation=\"vertical\"\n                    />\n                    {cloneElement(userMenu, { logout })}\n                </Toolbar>\n            </AppBar>\n        </HideOnScroll>\n    );\n};\n\nApiHubAppBar.defaultProps = {\n    userMenu: <ApiHubUserMenu />,\n    languagesMenu: <ApiHubLanguageSwitcher />,\n    sidebarButton: <SidebarButton />,\n};\n"]},"metadata":{},"sourceType":"module"}