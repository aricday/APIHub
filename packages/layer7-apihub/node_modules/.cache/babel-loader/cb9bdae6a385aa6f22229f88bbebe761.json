{"ast":null,"code":"import _objectWithoutProperties from\"/Users/aricday/Projects/APIHub/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import _defineProperty from\"/Users/aricday/Projects/APIHub/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import React from'react';import{useTranslate}from'react-admin';import{makeStyles}from'@material-ui/core/styles';import List from'@material-ui/core/List';import ListItem from'@material-ui/core/ListItem';import ListSubheader from'@material-ui/core/ListSubheader';import ListItemIcon from'@material-ui/core/ListItemIcon';import ListItemText from'@material-ui/core/ListItemText';import Tooltip from'@material-ui/core/Tooltip';import Divider from'@material-ui/core/Divider';import CheckIcon from'@material-ui/icons/Check';import{getUserOrganizations}from'.';var useStyles=makeStyles(function(theme){return{root:{padding:\"0px 0px \".concat(theme.spacing(),\"px 0px\")},item:{color:theme.palette.text.secondary},itemText:_defineProperty({display:'block',marginTop:'0px',marginBottom:'0px',maxWidth:'300px'},theme.breakpoints.up('lg'),{maxWidth:'250px'}),truncatedText:_defineProperty({display:'inline-block',whiteSpace:'nowrap',overflow:'hidden',textOverflow:'ellipsis',maxWidth:'300px'},theme.breakpoints.up('lg'),{maxWidth:'250px'}),secondaryText:{fontSize:theme.typography.caption.fontSize},icon:{marginLeft:theme.spacing(2),minWidth:theme.spacing(3),color:theme.palette.success.main},divider:{marginBottom:theme.spacing()}};});export var UserOrganizationSwitcher=function UserOrganizationSwitcher(_ref){var userContext=_ref.userContext,onChangeUserContext=_ref.onChangeUserContext,props=_objectWithoutProperties(_ref,[\"userContext\",\"onChangeUserContext\"]);var classes=useStyles(props);var translate=useTranslate();var _getUserOrganizations=getUserOrganizations(userContext),hasAccessibleOrgs=_getUserOrganizations.hasAccessibleOrgs,accessibleOrgs=_getUserOrganizations.accessibleOrgs,activeOrg=_getUserOrganizations.activeOrg;return hasAccessibleOrgs?React.createElement(React.Fragment,null,React.createElement(List,{compnent:\"div\",className:classes.root},React.createElement(ListSubheader,{className:classes.item},translate('resources.userContexts.accessibleOrgs.title',{smart_count:accessibleOrgs.length||0})),accessibleOrgs.map(function(_ref2){var uuid=_ref2.uuid,name=_ref2.name;var isActiveOrg=uuid===activeOrg.uuid;return React.createElement(Tooltip,{key:uuid,title:name},React.createElement(ListItem,{className:classes.item,\"aria-label\":translate(isActiveOrg?'resources.userContexts.activeOrgUuid.status.active':'resources.userContexts.activeOrgUuid.status.not_active'),onClick:function onClick(){return onChangeUserContext({activeOrgUuid:uuid});},button:!isActiveOrg},React.createElement(ListItemText,{className:classes.itemText,primary:name,primaryTypographyProps:{variant:'subtitle1',className:classes.truncatedText}}),isActiveOrg&&React.createElement(ListItemIcon,{className:classes.icon},React.createElement(CheckIcon,null))));})),React.createElement(Divider,{className:classes.divider})):null;};UserOrganizationSwitcher.__docgenInfo={\"description\":\"\",\"methods\":[],\"displayName\":\"UserOrganizationSwitcher\"};if(typeof STORYBOOK_REACT_CLASSES!==\"undefined\"){STORYBOOK_REACT_CLASSES[\"src/userContexts/UserOrganizationSwitcher.js\"]={name:\"UserOrganizationSwitcher\",docgenInfo:UserOrganizationSwitcher.__docgenInfo,path:\"src/userContexts/UserOrganizationSwitcher.js\"};}","map":{"version":3,"sources":["/Users/aricday/Projects/APIHub/packages/layer7-apihub/src/userContexts/UserOrganizationSwitcher.js"],"names":["React","useTranslate","makeStyles","List","ListItem","ListSubheader","ListItemIcon","ListItemText","Tooltip","Divider","CheckIcon","getUserOrganizations","useStyles","theme","root","padding","spacing","item","color","palette","text","secondary","itemText","display","marginTop","marginBottom","maxWidth","breakpoints","up","truncatedText","whiteSpace","overflow","textOverflow","secondaryText","fontSize","typography","caption","icon","marginLeft","minWidth","success","main","divider","UserOrganizationSwitcher","userContext","onChangeUserContext","props","classes","translate","hasAccessibleOrgs","accessibleOrgs","activeOrg","smart_count","length","map","uuid","name","isActiveOrg","activeOrgUuid","variant","className"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useTranslate } from 'react-admin';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Divider from '@material-ui/core/Divider';\nimport CheckIcon from '@material-ui/icons/Check';\n\nimport { getUserOrganizations } from '.';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        padding: `0px 0px ${theme.spacing()}px 0px`,\n    },\n    item: {\n        color: theme.palette.text.secondary,\n    },\n    itemText: {\n        display: 'block',\n        marginTop: '0px',\n        marginBottom: '0px',\n        maxWidth: '300px',\n        [theme.breakpoints.up('lg')]: {\n            maxWidth: '250px',\n        },\n    },\n    truncatedText: {\n        display: 'inline-block',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        maxWidth: '300px',\n        [theme.breakpoints.up('lg')]: {\n            maxWidth: '250px',\n        },\n    },\n    secondaryText: {\n        fontSize: theme.typography.caption.fontSize,\n    },\n    icon: {\n        marginLeft: theme.spacing(2),\n        minWidth: theme.spacing(3),\n        color: theme.palette.success.main,\n    },\n    divider: {\n        marginBottom: theme.spacing(),\n    },\n}));\n\nexport const UserOrganizationSwitcher = ({\n    userContext,\n    onChangeUserContext,\n    ...props\n}) => {\n    const classes = useStyles(props);\n    const translate = useTranslate();\n\n    const {\n        hasAccessibleOrgs,\n        accessibleOrgs,\n        activeOrg,\n    } = getUserOrganizations(userContext);\n\n    return hasAccessibleOrgs ? (\n        <>\n            <List compnent=\"div\" className={classes.root}>\n                <ListSubheader className={classes.item}>\n                    {translate('resources.userContexts.accessibleOrgs.title', {\n                        smart_count: accessibleOrgs.length || 0,\n                    })}\n                </ListSubheader>\n                {accessibleOrgs.map(({ uuid, name }) => {\n                    const isActiveOrg = uuid === activeOrg.uuid;\n\n                    return (\n                        <Tooltip key={uuid} title={name}>\n                            <ListItem\n                                className={classes.item}\n                                aria-label={translate(\n                                    isActiveOrg\n                                        ? 'resources.userContexts.activeOrgUuid.status.active'\n                                        : 'resources.userContexts.activeOrgUuid.status.not_active'\n                                )}\n                                onClick={() =>\n                                    onChangeUserContext({\n                                        activeOrgUuid: uuid,\n                                    })\n                                }\n                                button={!isActiveOrg}\n                            >\n                                <ListItemText\n                                    className={classes.itemText}\n                                    primary={name}\n                                    primaryTypographyProps={{\n                                        variant: 'subtitle1',\n                                        className: classes.truncatedText,\n                                    }}\n                                />\n                                {isActiveOrg && (\n                                    <ListItemIcon className={classes.icon}>\n                                        <CheckIcon />\n                                    </ListItemIcon>\n                                )}\n                            </ListItem>\n                        </Tooltip>\n                    );\n                })}\n            </List>\n            <Divider className={classes.divider} />\n        </>\n    ) : null;\n};\n"]},"metadata":{},"sourceType":"module"}