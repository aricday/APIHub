{"ast":null,"code":"import _slicedToArray from\"/Users/aricday/Projects/APIHub/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectWithoutProperties from\"/Users/aricday/Projects/APIHub/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React,{useState}from'react';import{TextInput}from'react-admin';import{useTranslate}from'ra-core';import{InfoOutlined,Visibility,VisibilityOff}from'@material-ui/icons';import{makeStyles,IconButton,InputAdornment}from'@material-ui/core';import{HtmlTooltip}from'./HtmlTooltip';export var PasswordInput=function PasswordInput(_ref){var title=_ref.title,props=_objectWithoutProperties(_ref,[\"title\"]);var _usePasswordVisibilit=usePasswordVisibility(),_usePasswordVisibilit2=_slicedToArray(_usePasswordVisibilit,2),passwordVisible=_usePasswordVisibilit2[0],setPasswordVisible=_usePasswordVisibilit2[1];var translate=useTranslate();var classes=useStyles(props);return React.createElement(TextInput,Object.assign({type:passwordVisible?'text':'password',variant:\"outlined\",InputProps:{endAdornment:React.createElement(InputAdornment,{position:\"end\"},React.createElement(React.Fragment,null,React.createElement(IconButton,{\"aria-label\":translate(passwordVisible?'ra.input.password.toggle_visible':'ra.input.password.toggle_hidden'),onClick:setPasswordVisible},passwordVisible?React.createElement(VisibilityOff,null):React.createElement(Visibility,null)),title?React.createElement(HtmlTooltip,{className:classes.tootip,title:translate(title),placement:\"right\",arrow:true},React.createElement(InfoOutlined,null)):null))}},props));};export var usePasswordVisibility=function usePasswordVisibility(initialValue){var _useState=useState(initialValue),_useState2=_slicedToArray(_useState,2),visible=_useState2[0],setVisible=_useState2[1];var toggleVisibility=function toggleVisibility(){setVisible(!visible);};return[visible,toggleVisibility];};var useStyles=makeStyles({tootip:{cursor:'pointer'}});PasswordInput.__docgenInfo={\"description\":\"\",\"methods\":[],\"displayName\":\"PasswordInput\"};if(typeof STORYBOOK_REACT_CLASSES!==\"undefined\"){STORYBOOK_REACT_CLASSES[\"src/ui/PasswordInput.js\"]={name:\"PasswordInput\",docgenInfo:PasswordInput.__docgenInfo,path:\"src/ui/PasswordInput.js\"};}","map":{"version":3,"sources":["/Users/aricday/Projects/APIHub/packages/layer7-apihub/src/ui/PasswordInput.js"],"names":["React","useState","TextInput","useTranslate","InfoOutlined","Visibility","VisibilityOff","makeStyles","IconButton","InputAdornment","HtmlTooltip","PasswordInput","title","props","usePasswordVisibility","passwordVisible","setPasswordVisible","translate","classes","useStyles","endAdornment","tootip","initialValue","visible","setVisible","toggleVisibility","cursor"],"mappings":"8TAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,SAAT,KAA0B,aAA1B,CACA,OAASC,YAAT,KAA6B,SAA7B,CACA,OAASC,YAAT,CAAuBC,UAAvB,CAAmCC,aAAnC,KAAwD,oBAAxD,CACA,OAASC,UAAT,CAAqBC,UAArB,CAAiCC,cAAjC,KAAuD,mBAAvD,CAEA,OAASC,WAAT,KAA4B,eAA5B,CAEA,MAAO,IAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,MAAyB,IAAtBC,CAAAA,KAAsB,MAAtBA,KAAsB,CAAZC,KAAY,oEACJC,qBAAqB,EADjB,gEAC3CC,eAD2C,2BAC1BC,kBAD0B,2BAElD,GAAMC,CAAAA,SAAS,CAAGd,YAAY,EAA9B,CACA,GAAMe,CAAAA,OAAO,CAAGC,SAAS,CAACN,KAAD,CAAzB,CAEA,MACI,qBAAC,SAAD,gBACI,IAAI,CAAEE,eAAe,CAAG,MAAH,CAAY,UADrC,CAEI,OAAO,CAAC,UAFZ,CAGI,UAAU,CAAE,CACRK,YAAY,CACR,oBAAC,cAAD,EAAgB,QAAQ,CAAC,KAAzB,EACI,wCACI,oBAAC,UAAD,EACI,aAAYH,SAAS,CACjBF,eAAe,CACT,kCADS,CAET,iCAHW,CADzB,CAMI,OAAO,CAAEC,kBANb,EAQKD,eAAe,CACZ,oBAAC,aAAD,MADY,CAGZ,oBAAC,UAAD,MAXR,CADJ,CAeKH,KAAK,CACF,oBAAC,WAAD,EACI,SAAS,CAAEM,OAAO,CAACG,MADvB,CAEI,KAAK,CAAEJ,SAAS,CAACL,KAAD,CAFpB,CAGI,SAAS,CAAC,OAHd,CAII,KAAK,KAJT,EAMI,oBAAC,YAAD,MANJ,CADE,CASF,IAxBR,CADJ,CAFI,CAHhB,EAmCQC,KAnCR,EADJ,CAuCH,CA5CM,CA8CP,MAAO,IAAMC,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,CAAAQ,YAAY,CAAI,eACnBrB,QAAQ,CAACqB,YAAD,CADW,wCAC1CC,OAD0C,eACjCC,UADiC,eAGjD,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAM,CAC3BD,UAAU,CAAC,CAACD,OAAF,CAAV,CACH,CAFD,CAIA,MAAO,CAACA,OAAD,CAAUE,gBAAV,CAAP,CACH,CARM,CAUP,GAAMN,CAAAA,SAAS,CAAGZ,UAAU,CAAC,CACzBc,MAAM,CAAE,CACJK,MAAM,CAAE,SADJ,CADiB,CAAD,CAA5B,C","sourcesContent":["import React, { useState } from 'react';\nimport { TextInput } from 'react-admin';\nimport { useTranslate } from 'ra-core';\nimport { InfoOutlined, Visibility, VisibilityOff } from '@material-ui/icons';\nimport { makeStyles, IconButton, InputAdornment } from '@material-ui/core';\n\nimport { HtmlTooltip } from './HtmlTooltip';\n\nexport const PasswordInput = ({ title, ...props }) => {\n    const [passwordVisible, setPasswordVisible] = usePasswordVisibility();\n    const translate = useTranslate();\n    const classes = useStyles(props);\n\n    return (\n        <TextInput\n            type={passwordVisible ? 'text' : 'password'}\n            variant=\"outlined\"\n            InputProps={{\n                endAdornment: (\n                    <InputAdornment position=\"end\">\n                        <>\n                            <IconButton\n                                aria-label={translate(\n                                    passwordVisible\n                                        ? 'ra.input.password.toggle_visible'\n                                        : 'ra.input.password.toggle_hidden'\n                                )}\n                                onClick={setPasswordVisible}\n                            >\n                                {passwordVisible ? (\n                                    <VisibilityOff />\n                                ) : (\n                                    <Visibility />\n                                )}\n                            </IconButton>\n                            {title ? (\n                                <HtmlTooltip\n                                    className={classes.tootip}\n                                    title={translate(title)}\n                                    placement=\"right\"\n                                    arrow\n                                >\n                                    <InfoOutlined />\n                                </HtmlTooltip>\n                            ) : null}\n                        </>\n                    </InputAdornment>\n                ),\n            }}\n            {...props}\n        />\n    );\n};\n\nexport const usePasswordVisibility = initialValue => {\n    const [visible, setVisible] = useState(initialValue);\n\n    const toggleVisibility = () => {\n        setVisible(!visible);\n    };\n\n    return [visible, toggleVisibility];\n};\n\nconst useStyles = makeStyles({\n    tootip: {\n        cursor: 'pointer',\n    },\n});\n"]},"metadata":{},"sourceType":"module"}