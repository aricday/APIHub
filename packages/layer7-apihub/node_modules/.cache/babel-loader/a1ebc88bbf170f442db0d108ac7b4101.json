{"ast":null,"code":"import _regeneratorRuntime from\"/Users/aricday/Projects/APIHub/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _slicedToArray from\"/Users/aricday/Projects/APIHub/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useCallback}from'react';import{fetchUtils,SaveButton,SimpleForm,TextField,TextInput,Toolbar,required,useNotify,useTranslate}from'react-admin';import Card from'@material-ui/core/Card';import{makeStyles}from'@material-ui/core';import{Edit}from'../ui';import{useApiHub}from'../ApiHubContext';import{usePasswordEncryption}from'../authentication/usePasswordEncryption';import{NewPasswordForm}from'./NewPasswordForm';var UserContextTitle=function UserContextTitle(){var translate=useTranslate();return translate('resources.userContexts.title');};var validateField=[required()];export var UserContextEdit=function UserContextEdit(props){var classes=useUserContextEditStyles();return React.createElement(Edit,Object.assign({},props,{title:React.createElement(UserContextTitle,null),aside:React.createElement(UserContextEditAside,null),successMessage:\"resources.userContexts.notifications.update_success\"}),React.createElement(SimpleForm,{toolbar:React.createElement(UserContextEditToolbar,null),redirect:false},React.createElement(TextField,{addLabel:true,source:\"userDetails.username\",className:classes.field}),React.createElement(TextInput,{source:\"userDetails.lastName\",className:classes.field,validate:validateField}),React.createElement(TextInput,{source:\"userDetails.firstName\",className:classes.field,validate:validateField}),React.createElement(TextInput,{source:\"userDetails.email\",className:classes.field,validate:validateField})));};var useUserContextEditStyles=makeStyles({field:{width:456}});var UserContextEditToolbar=function UserContextEditToolbar(props){return React.createElement(Toolbar,props,React.createElement(SaveButton,null));};export var UserContextEditAside=function UserContextEditAside(_ref){var record=_ref.record;var classes=useUserContextEditAsideStyles();return React.createElement(\"div\",{className:classes.root},React.createElement(UserContextEditNewPassword,{record:record}));};var useUpdatePassword=function useUpdatePassword(_ref2){var user=_ref2.user;var _useApiHub=useApiHub(),url=_useApiHub.url;var notify=useNotify();var _usePasswordEncryptio=usePasswordEncryption(),_usePasswordEncryptio2=_slicedToArray(_usePasswordEncryptio,2),publicKey=_usePasswordEncryptio2[0],encrypt=_usePasswordEncryptio2[1];var uuid=user===null||user===void 0?void 0:user.uuid;return useCallback(function _callee(_ref3){var password,newPassword,finalPassword,finalNewPassword,_ref4,_ref5,encryptedPassword,encryptedNewPassword;return _regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:password=_ref3.password,newPassword=_ref3.newPassword;finalPassword=password;finalNewPassword=newPassword;if(!publicKey){_context.next=12;break;}_context.next=6;return _regeneratorRuntime.awrap(Promise.all([encrypt(password),encrypt(newPassword)]));case 6:_ref4=_context.sent;_ref5=_slicedToArray(_ref4,2);encryptedPassword=_ref5[0];encryptedNewPassword=_ref5[1];finalPassword=encryptedPassword;finalNewPassword=encryptedNewPassword;case 12:_context.next=14;return _regeneratorRuntime.awrap(fetch(\"\".concat(url,\"/admin/sessionCheck\"),{credentials:'include'}));case 14:fetchUtils.fetchJson(\"\".concat(url,\"/admin/v2/users/password/change\"),{credentials:'include',body:JSON.stringify({password:finalPassword,newPassword:finalNewPassword,uuid:uuid}),method:'PUT'}).then(function(){notify('resources.userContexts.notifications.confirm_password_change');})[\"catch\"](function(error){if(error.status===400){notify('resources.userContexts.notifications.invalid_password','warning');}notify('resources.userContexts.notifications.update_error','warning');});case 15:case\"end\":return _context.stop();}}});},[encrypt,notify,publicKey,url,uuid]);};export var UserContextEditNewPassword=function UserContextEditNewPassword(_ref6){var record=_ref6.record;var handleSubmit=useUpdatePassword({user:record});return React.createElement(Card,null,React.createElement(NewPasswordForm,{onSubmit:handleSubmit}));};var useUserContextEditAsideStyles=makeStyles(function(theme){return{root:{marginLeft:theme.spacing(3)}};});UserContextEdit.__docgenInfo={\"description\":\"\",\"methods\":[],\"displayName\":\"UserContextEdit\"};if(typeof STORYBOOK_REACT_CLASSES!==\"undefined\"){STORYBOOK_REACT_CLASSES[\"src/userContexts/UserContextEdit.js\"]={name:\"UserContextEdit\",docgenInfo:UserContextEdit.__docgenInfo,path:\"src/userContexts/UserContextEdit.js\"};}UserContextEditAside.__docgenInfo={\"description\":\"\",\"methods\":[],\"displayName\":\"UserContextEditAside\"};if(typeof STORYBOOK_REACT_CLASSES!==\"undefined\"){STORYBOOK_REACT_CLASSES[\"src/userContexts/UserContextEdit.js\"]={name:\"UserContextEditAside\",docgenInfo:UserContextEditAside.__docgenInfo,path:\"src/userContexts/UserContextEdit.js\"};}UserContextEditNewPassword.__docgenInfo={\"description\":\"\",\"methods\":[],\"displayName\":\"UserContextEditNewPassword\"};if(typeof STORYBOOK_REACT_CLASSES!==\"undefined\"){STORYBOOK_REACT_CLASSES[\"src/userContexts/UserContextEdit.js\"]={name:\"UserContextEditNewPassword\",docgenInfo:UserContextEditNewPassword.__docgenInfo,path:\"src/userContexts/UserContextEdit.js\"};}","map":{"version":3,"sources":["/Users/aricday/Projects/APIHub/packages/layer7-apihub/src/userContexts/UserContextEdit.js"],"names":["React","useCallback","fetchUtils","SaveButton","SimpleForm","TextField","TextInput","Toolbar","required","useNotify","useTranslate","Card","makeStyles","Edit","useApiHub","usePasswordEncryption","NewPasswordForm","UserContextTitle","translate","validateField","UserContextEdit","props","classes","useUserContextEditStyles","field","width","UserContextEditToolbar","UserContextEditAside","record","useUserContextEditAsideStyles","root","useUpdatePassword","user","url","notify","publicKey","encrypt","uuid","password","newPassword","finalPassword","finalNewPassword","Promise","all","encryptedPassword","encryptedNewPassword","fetch","credentials","fetchJson","body","JSON","stringify","method","then","error","status","UserContextEditNewPassword","handleSubmit","theme","marginLeft","spacing"],"mappings":"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","sourcesContent":["import React, { useCallback } from 'react';\nimport {\n    fetchUtils,\n    SaveButton,\n    SimpleForm,\n    TextField,\n    TextInput,\n    Toolbar,\n    required,\n    useNotify,\n    useTranslate,\n} from 'react-admin';\nimport Card from '@material-ui/core/Card';\nimport { makeStyles } from '@material-ui/core';\n\nimport { Edit } from '../ui';\nimport { useApiHub } from '../ApiHubContext';\nimport { usePasswordEncryption } from '../authentication/usePasswordEncryption';\nimport { NewPasswordForm } from './NewPasswordForm';\n\nconst UserContextTitle = () => {\n    const translate = useTranslate();\n\n    return translate('resources.userContexts.title');\n};\n\nconst validateField = [required()];\n\nexport const UserContextEdit = props => {\n    const classes = useUserContextEditStyles();\n\n    return (\n        <Edit\n            {...props}\n            title={<UserContextTitle />}\n            aside={<UserContextEditAside />}\n            successMessage=\"resources.userContexts.notifications.update_success\"\n        >\n            <SimpleForm toolbar={<UserContextEditToolbar />} redirect={false}>\n                <TextField\n                    addLabel\n                    source=\"userDetails.username\"\n                    className={classes.field}\n                />\n                <TextInput\n                    source=\"userDetails.lastName\"\n                    className={classes.field}\n                    validate={validateField}\n                />\n                <TextInput\n                    source=\"userDetails.firstName\"\n                    className={classes.field}\n                    validate={validateField}\n                />\n                <TextInput\n                    source=\"userDetails.email\"\n                    className={classes.field}\n                    validate={validateField}\n                />\n            </SimpleForm>\n        </Edit>\n    );\n};\n\nconst useUserContextEditStyles = makeStyles({\n    field: {\n        width: 456,\n    },\n});\n\nconst UserContextEditToolbar = props => (\n    <Toolbar {...props}>\n        <SaveButton />\n    </Toolbar>\n);\n\nexport const UserContextEditAside = ({ record }) => {\n    const classes = useUserContextEditAsideStyles();\n\n    return (\n        <div className={classes.root}>\n            <UserContextEditNewPassword record={record} />\n        </div>\n    );\n};\n\nconst useUpdatePassword = ({ user }) => {\n    const { url } = useApiHub();\n    const notify = useNotify();\n    const [publicKey, encrypt] = usePasswordEncryption();\n    const uuid = user?.uuid;\n\n    return useCallback(\n        async ({ password, newPassword }) => {\n            let finalPassword = password;\n            let finalNewPassword = newPassword;\n\n            if (publicKey) {\n                const [\n                    encryptedPassword,\n                    encryptedNewPassword,\n                ] = await Promise.all([\n                    encrypt(password),\n                    encrypt(newPassword),\n                ]);\n\n                finalPassword = encryptedPassword;\n                finalNewPassword = encryptedNewPassword;\n            }\n\n            // This is need to get a special cookie required for password change\n            await fetch(`${url}/admin/sessionCheck`, {\n                credentials: 'include',\n            });\n\n            fetchUtils\n                .fetchJson(`${url}/admin/v2/users/password/change`, {\n                    credentials: 'include',\n                    body: JSON.stringify({\n                        password: finalPassword,\n                        newPassword: finalNewPassword,\n                        uuid,\n                    }),\n                    method: 'PUT',\n                })\n                .then(() => {\n                    notify(\n                        'resources.userContexts.notifications.confirm_password_change'\n                    );\n                })\n                .catch(error => {\n                    if (error.status === 400) {\n                        notify(\n                            'resources.userContexts.notifications.invalid_password',\n                            'warning'\n                        );\n                    }\n                    notify(\n                        'resources.userContexts.notifications.update_error',\n                        'warning'\n                    );\n                });\n        },\n        [encrypt, notify, publicKey, url, uuid]\n    );\n};\n\nexport const UserContextEditNewPassword = ({ record }) => {\n    const handleSubmit = useUpdatePassword({ user: record });\n\n    return (\n        <Card>\n            <NewPasswordForm onSubmit={handleSubmit} />\n        </Card>\n    );\n};\n\nconst useUserContextEditAsideStyles = makeStyles(theme => ({\n    root: {\n        marginLeft: theme.spacing(3),\n    },\n}));\n"]},"metadata":{},"sourceType":"module"}