{"ast":null,"code":"import _objectWithoutProperties from\"/Users/aricday/Projects/APIHub/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import _slicedToArray from\"/Users/aricday/Projects/APIHub/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{cloneElement}from'react';import{DateField,Filter,ReferenceArrayInput,sanitizeListRestProps,SelectArrayInput,SearchInput,SelectInput,TextField,TopToolbar}from'react-admin';import{useTranslate}from'ra-core';import classnames from'classnames';import{makeStyles}from'@material-ui/core/styles';import Card from'@material-ui/core/Card';import{AccessField,CardGrid,Datagrid,List,ListDisplayButton,ListDisplayProvider,LIST_DISPLAY_CARDS,MarkdownField,SortButton,SortMenuItem,TruncatedTextField,useListDisplay}from'../ui';import{ApiCard}from'./ApiCard';import{VisibilityField}from'./VisibilityField';import{TagsField}from'./TagsField';import{LastUpdateField}from'./LastUpdateField';import{readApiHubPreference}from'../preferences';var defaultSort={field:'createTs',order:'DESC'};var listDisplayPreferenceName='listDisplay/apis';export var ApiList=function ApiList(props){var initialListDisplay=readApiHubPreference(listDisplayPreferenceName,LIST_DISPLAY_CARDS);return React.createElement(ListDisplayProvider,{initialListDisplay:initialListDisplay,preferenceName:listDisplayPreferenceName},React.createElement(List,Object.assign({actions:React.createElement(ApiListActions,null),filters:React.createElement(ApiFilter,null),sort:defaultSort,bulkActionButtons:false,component:ApiListComponent},props),React.createElement(ApiListDisplay,null)));};var ApiListComponent=function ApiListComponent(props){return React.createElement(\"div\",props);};var useApiFilterStyles=makeStyles({searchInput:{minWidth:'300px'}});var ApiFilter=function ApiFilter(props){var translate=useTranslate();var classes=useApiFilterStyles();return React.createElement(Filter,props,React.createElement(SearchInput,{source:\"q\",className:classes.searchInput,alwaysOn:true,placeholder:translate('resources.apis.list.filters.search')}),React.createElement(SelectInput,{source:\"accessStatus\",choices:[{id:'public',name:'resources.apis.accessStatus.public'},{id:'private',name:'resources.apis.accessStatus.private'}]}),React.createElement(SelectInput,{source:\"portalStatus\",choices:[{id:'Enabled',name:'resources.apis.portalStatus.enabled'},{id:'Disabled',name:'resources.apis.portalStatus.disabled'},{id:'Deprecated',name:'resources.apis.portalStatus.deprecated'},{id:'New',name:'resources.apis.portalStatus.unpublished'}]}),React.createElement(SelectInput// The field is ssgServiceType in the response payload but apiServiceType in filters\n,{source:\"apiServiceType\",choices:[{id:'SOAP',name:'SOAP'},{id:'REST',name:'REST'}]}),React.createElement(ReferenceArrayInput,{source:\"tags\",reference:\"tags\"},React.createElement(SelectArrayInput,{optionText:\"name\"})));};var ApiListDisplay=function ApiListDisplay(props){var _useListDisplay=useListDisplay(),_useListDisplay2=_slicedToArray(_useListDisplay,1),display=_useListDisplay2[0];if(display===LIST_DISPLAY_CARDS){return React.createElement(CardGrid,props,React.createElement(ApiCard,null));}return React.createElement(Card,null,React.createElement(Datagrid,Object.assign({rowClick:\"show\"},props),React.createElement(TruncatedTextField,{source:\"name\"}),React.createElement(MarkdownField,{source:\"description\",stripTags:true,truncate:true}),React.createElement(TagsField,{source:\"tags\",sortable:false}),React.createElement(DateField,{source:\"createTs\"}),React.createElement(TruncatedTextField,{source:\"version\",label:\"resources.apis.fields.versionShort\"}),React.createElement(TextField,{source:\"ssgServiceType\"}),React.createElement(VisibilityField,{source:\"accessStatus\"}),React.createElement(LastUpdateField,{source:\"modifyTs\"}),React.createElement(AccessField,{source:\"portalStatus\",translationKey:\"resources.apis.portalStatus\"})));};var useApiListActionsStyles=makeStyles(function(theme){return{root:{alignItems:'center'},button:{marginLeft:theme.spacing()}};});var ApiListActions=function ApiListActions(_ref){var className=_ref.className,currentSort=_ref.currentSort,displayedFilters=_ref.displayedFilters,exporter=_ref.exporter,filters=_ref.filters,filterValues=_ref.filterValues,permanentFilter=_ref.permanentFilter,resource=_ref.resource,showFilter=_ref.showFilter,props=_objectWithoutProperties(_ref,[\"className\",\"currentSort\",\"displayedFilters\",\"exporter\",\"filters\",\"filterValues\",\"permanentFilter\",\"resource\",\"showFilter\"]);var classes=useApiListActionsStyles();var _useListDisplay3=useListDisplay(),_useListDisplay4=_slicedToArray(_useListDisplay3,1),display=_useListDisplay4[0];return React.createElement(TopToolbar,Object.assign({className:classnames(classes.root,className)},sanitizeListRestProps(props)),filters&&cloneElement(filters,{resource:resource,showFilter:showFilter,displayedFilters:displayedFilters,filterValues:filterValues,context:'button'}),display===LIST_DISPLAY_CARDS?React.createElement(ApiListSortButton,{resource:resource,currentSort:currentSort}):null,React.createElement(ListDisplayButton,{className:classes.button}));};export var ApiListSortButton=function ApiListSortButton(props){return React.createElement(SortButton,props,React.createElement(SortMenuItem,{label:\"resources.apis.list.sort.name.asc\",sort:SortByNameASC}),React.createElement(SortMenuItem,{label:\"resources.apis.list.sort.name.desc\",sort:SortByNameDESC}),React.createElement(SortMenuItem,{label:\"resources.apis.list.sort.createTs.desc\",sort:SortByCreateTsDESC}),React.createElement(SortMenuItem,{label:\"resources.apis.list.sort.createTs.asc\",sort:SortByCreateTsASC}),React.createElement(SortMenuItem,{label:\"resources.apis.list.sort.modifyTs.desc\",sort:SortByModifyTsDESC}),React.createElement(SortMenuItem,{label:\"resources.apis.list.sort.modifyTs.asc\",sort:SortByModifyTsASC}));};var SortByNameASC={field:'name',order:'ASC'};var SortByNameDESC={field:'name',order:'DESC'};var SortByCreateTsASC={field:'createTs',order:'ASC'};var SortByCreateTsDESC={field:'createTs',order:'DESC'};var SortByModifyTsASC={field:'modifyTs',order:'ASC'};var SortByModifyTsDESC={field:'modifyTs',order:'DESC'};ApiList.__docgenInfo={\"description\":\"\",\"methods\":[],\"displayName\":\"ApiList\"};if(typeof STORYBOOK_REACT_CLASSES!==\"undefined\"){STORYBOOK_REACT_CLASSES[\"src/apis/ApiList.js\"]={name:\"ApiList\",docgenInfo:ApiList.__docgenInfo,path:\"src/apis/ApiList.js\"};}ApiListSortButton.__docgenInfo={\"description\":\"\",\"methods\":[],\"displayName\":\"ApiListSortButton\"};if(typeof STORYBOOK_REACT_CLASSES!==\"undefined\"){STORYBOOK_REACT_CLASSES[\"src/apis/ApiList.js\"]={name:\"ApiListSortButton\",docgenInfo:ApiListSortButton.__docgenInfo,path:\"src/apis/ApiList.js\"};}","map":{"version":3,"sources":["/Users/aricday/Projects/APIHub/packages/layer7-apihub/src/apis/ApiList.js"],"names":["React","cloneElement","DateField","Filter","ReferenceArrayInput","sanitizeListRestProps","SelectArrayInput","SearchInput","SelectInput","TextField","TopToolbar","useTranslate","classnames","makeStyles","Card","AccessField","CardGrid","Datagrid","List","ListDisplayButton","ListDisplayProvider","LIST_DISPLAY_CARDS","MarkdownField","SortButton","SortMenuItem","TruncatedTextField","useListDisplay","ApiCard","VisibilityField","TagsField","LastUpdateField","readApiHubPreference","defaultSort","field","order","listDisplayPreferenceName","ApiList","props","initialListDisplay","ApiListComponent","useApiFilterStyles","searchInput","minWidth","ApiFilter","translate","classes","id","name","ApiListDisplay","display","useApiListActionsStyles","theme","root","alignItems","button","marginLeft","spacing","ApiListActions","className","currentSort","displayedFilters","exporter","filters","filterValues","permanentFilter","resource","showFilter","context","ApiListSortButton","SortByNameASC","SortByNameDESC","SortByCreateTsDESC","SortByCreateTsASC","SortByModifyTsDESC","SortByModifyTsASC"],"mappings":"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","sourcesContent":["import React, { cloneElement } from 'react';\nimport {\n    DateField,\n    Filter,\n    ReferenceArrayInput,\n    sanitizeListRestProps,\n    SelectArrayInput,\n    SearchInput,\n    SelectInput,\n    TextField,\n    TopToolbar,\n} from 'react-admin';\nimport { useTranslate } from 'ra-core';\nimport classnames from 'classnames';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\n\nimport {\n    AccessField,\n    CardGrid,\n    Datagrid,\n    List,\n    ListDisplayButton,\n    ListDisplayProvider,\n    LIST_DISPLAY_CARDS,\n    MarkdownField,\n    SortButton,\n    SortMenuItem,\n    TruncatedTextField,\n    useListDisplay,\n} from '../ui';\nimport { ApiCard } from './ApiCard';\nimport { VisibilityField } from './VisibilityField';\nimport { TagsField } from './TagsField';\nimport { LastUpdateField } from './LastUpdateField';\nimport { readApiHubPreference } from '../preferences';\n\nconst defaultSort = { field: 'createTs', order: 'DESC' };\n\nconst listDisplayPreferenceName = 'listDisplay/apis';\n\nexport const ApiList = props => {\n    const initialListDisplay = readApiHubPreference(\n        listDisplayPreferenceName,\n        LIST_DISPLAY_CARDS\n    );\n\n    return (\n        <ListDisplayProvider\n            initialListDisplay={initialListDisplay}\n            preferenceName={listDisplayPreferenceName}\n        >\n            <List\n                actions={<ApiListActions />}\n                filters={<ApiFilter />}\n                sort={defaultSort}\n                bulkActionButtons={false}\n                component={ApiListComponent}\n                {...props}\n            >\n                <ApiListDisplay />\n            </List>\n        </ListDisplayProvider>\n    );\n};\n\nconst ApiListComponent = props => <div {...props} />;\n\nconst useApiFilterStyles = makeStyles({\n    searchInput: {\n        minWidth: '300px',\n    },\n});\n\nconst ApiFilter = props => {\n    const translate = useTranslate();\n    const classes = useApiFilterStyles();\n\n    return (\n        <Filter {...props}>\n            <SearchInput\n                source=\"q\"\n                className={classes.searchInput}\n                alwaysOn\n                placeholder={translate('resources.apis.list.filters.search')}\n            />\n            <SelectInput\n                source=\"accessStatus\"\n                choices={[\n                    {\n                        id: 'public',\n                        name: 'resources.apis.accessStatus.public',\n                    },\n                    {\n                        id: 'private',\n                        name: 'resources.apis.accessStatus.private',\n                    },\n                ]}\n            />\n            <SelectInput\n                source=\"portalStatus\"\n                choices={[\n                    {\n                        id: 'Enabled',\n                        name: 'resources.apis.portalStatus.enabled',\n                    },\n                    {\n                        id: 'Disabled',\n                        name: 'resources.apis.portalStatus.disabled',\n                    },\n                    {\n                        id: 'Deprecated',\n                        name: 'resources.apis.portalStatus.deprecated',\n                    },\n                    {\n                        id: 'New',\n                        name: 'resources.apis.portalStatus.unpublished',\n                    },\n                ]}\n            />\n            <SelectInput\n                // The field is ssgServiceType in the response payload but apiServiceType in filters\n                source=\"apiServiceType\"\n                choices={[\n                    {\n                        id: 'SOAP',\n                        name: 'SOAP',\n                    },\n                    {\n                        id: 'REST',\n                        name: 'REST',\n                    },\n                ]}\n            />\n            <ReferenceArrayInput source=\"tags\" reference=\"tags\">\n                <SelectArrayInput optionText=\"name\" />\n            </ReferenceArrayInput>\n        </Filter>\n    );\n};\n\nconst ApiListDisplay = props => {\n    const [display] = useListDisplay();\n\n    if (display === LIST_DISPLAY_CARDS) {\n        return (\n            <CardGrid {...props}>\n                <ApiCard />\n            </CardGrid>\n        );\n    }\n\n    return (\n        <Card>\n            <Datagrid rowClick=\"show\" {...props}>\n                <TruncatedTextField source=\"name\" />\n                <MarkdownField source=\"description\" stripTags truncate />\n                <TagsField source=\"tags\" sortable={false} />\n                <DateField source=\"createTs\" />\n                <TruncatedTextField\n                    source=\"version\"\n                    label=\"resources.apis.fields.versionShort\"\n                />\n                <TextField source=\"ssgServiceType\" />\n                <VisibilityField source=\"accessStatus\" />\n                <LastUpdateField source=\"modifyTs\" />\n                <AccessField\n                    source=\"portalStatus\"\n                    translationKey=\"resources.apis.portalStatus\"\n                />\n            </Datagrid>\n        </Card>\n    );\n};\n\nconst useApiListActionsStyles = makeStyles(theme => ({\n    root: {\n        alignItems: 'center',\n    },\n    button: {\n        marginLeft: theme.spacing(),\n    },\n}));\n\nconst ApiListActions = ({\n    className,\n    currentSort,\n    displayedFilters,\n    exporter,\n    filters,\n    filterValues,\n    permanentFilter,\n    resource,\n    showFilter,\n    ...props\n}) => {\n    const classes = useApiListActionsStyles();\n    const [display] = useListDisplay();\n\n    return (\n        <TopToolbar\n            className={classnames(classes.root, className)}\n            {...sanitizeListRestProps(props)}\n        >\n            {filters &&\n                cloneElement(filters, {\n                    resource,\n                    showFilter,\n                    displayedFilters,\n                    filterValues,\n                    context: 'button',\n                })}\n            {display === LIST_DISPLAY_CARDS ? (\n                <ApiListSortButton\n                    resource={resource}\n                    currentSort={currentSort}\n                />\n            ) : null}\n            <ListDisplayButton className={classes.button} />\n        </TopToolbar>\n    );\n};\n\nexport const ApiListSortButton = props => (\n    <SortButton {...props}>\n        <SortMenuItem\n            label=\"resources.apis.list.sort.name.asc\"\n            sort={SortByNameASC}\n        />\n        <SortMenuItem\n            label=\"resources.apis.list.sort.name.desc\"\n            sort={SortByNameDESC}\n        />\n        <SortMenuItem\n            label=\"resources.apis.list.sort.createTs.desc\"\n            sort={SortByCreateTsDESC}\n        />\n        <SortMenuItem\n            label=\"resources.apis.list.sort.createTs.asc\"\n            sort={SortByCreateTsASC}\n        />\n        <SortMenuItem\n            label=\"resources.apis.list.sort.modifyTs.desc\"\n            sort={SortByModifyTsDESC}\n        />\n        <SortMenuItem\n            label=\"resources.apis.list.sort.modifyTs.asc\"\n            sort={SortByModifyTsASC}\n        />\n    </SortButton>\n);\n\nconst SortByNameASC = { field: 'name', order: 'ASC' };\nconst SortByNameDESC = { field: 'name', order: 'DESC' };\nconst SortByCreateTsASC = { field: 'createTs', order: 'ASC' };\nconst SortByCreateTsDESC = { field: 'createTs', order: 'DESC' };\nconst SortByModifyTsASC = { field: 'modifyTs', order: 'ASC' };\nconst SortByModifyTsDESC = { field: 'modifyTs', order: 'DESC' };\n"]},"metadata":{},"sourceType":"module"}