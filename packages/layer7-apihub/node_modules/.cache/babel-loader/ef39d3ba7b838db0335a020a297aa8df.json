{"ast":null,"code":"import React from'react';import{SaveButton,Toolbar}from'react-admin';import{ValidationError}from'ra-core';import{makeStyles}from'@material-ui/core';import Typography from'@material-ui/core/Typography';import{FormSpy}from'react-final-form';var useStyles=makeStyles(function(theme){return{toolbar:{display:'flex',flexDirection:'column',alignItems:'stretch',flexBasis:'100%',backgroundColor:'transparent',padding:0,marginTop:theme.spacing(2)},error:{marginTop:theme.spacing(2)},success:{color:theme.palette.success.main,marginTop:theme.spacing(2)}};});var subscription={error:true,touched:true,submitSucceeded:true};export var NewPasswordToolbar=function NewPasswordToolbar(props){var classes=useStyles(props);return React.createElement(FormSpy,{subscription:subscription},function(_ref){var error=_ref.error,touched=_ref.touched;var showError=error&&touched.password&&touched.confirm_password;return React.createElement(React.Fragment,null,showError?React.createElement(Typography,{variant:\"body1\",color:\"error\",className:classes.error},React.createElement(ValidationError,{error:error})):null,React.createElement(Toolbar,Object.assign({className:classes.toolbar},props),React.createElement(SaveButton,{icon:React.createElement(\"span\",null),label:\"apihub.new_password.actions.change_password\"})));});};NewPasswordToolbar.__docgenInfo={\"description\":\"\",\"methods\":[],\"displayName\":\"NewPasswordToolbar\"};if(typeof STORYBOOK_REACT_CLASSES!==\"undefined\"){STORYBOOK_REACT_CLASSES[\"src/authentication/NewPassword/NewPasswordToolbar.js\"]={name:\"NewPasswordToolbar\",docgenInfo:NewPasswordToolbar.__docgenInfo,path:\"src/authentication/NewPassword/NewPasswordToolbar.js\"};}","map":{"version":3,"sources":["/Users/aricday/Projects/APIHub/packages/layer7-apihub/src/authentication/NewPassword/NewPasswordToolbar.js"],"names":["React","SaveButton","Toolbar","ValidationError","makeStyles","Typography","FormSpy","useStyles","theme","toolbar","display","flexDirection","alignItems","flexBasis","backgroundColor","padding","marginTop","spacing","error","success","color","palette","main","subscription","touched","submitSucceeded","NewPasswordToolbar","props","classes","showError","password","confirm_password"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,UAAT,CAAqBC,OAArB,KAAoC,aAApC,CACA,OAASC,eAAT,KAAgC,SAAhC,CACA,OAASC,UAAT,KAA2B,mBAA3B,CACA,MAAOC,CAAAA,UAAP,KAAuB,8BAAvB,CACA,OAASC,OAAT,KAAwB,kBAAxB,CAEA,GAAMC,CAAAA,SAAS,CAAGH,UAAU,CAAC,SAAAI,KAAK,QAAK,CACnCC,OAAO,CAAE,CACLC,OAAO,CAAE,MADJ,CAELC,aAAa,CAAE,QAFV,CAGLC,UAAU,CAAE,SAHP,CAILC,SAAS,CAAE,MAJN,CAKLC,eAAe,CAAE,aALZ,CAMLC,OAAO,CAAE,CANJ,CAOLC,SAAS,CAAER,KAAK,CAACS,OAAN,CAAc,CAAd,CAPN,CAD0B,CAUnCC,KAAK,CAAE,CACHF,SAAS,CAAER,KAAK,CAACS,OAAN,CAAc,CAAd,CADR,CAV4B,CAanCE,OAAO,CAAE,CACLC,KAAK,CAAEZ,KAAK,CAACa,OAAN,CAAcF,OAAd,CAAsBG,IADxB,CAELN,SAAS,CAAER,KAAK,CAACS,OAAN,CAAc,CAAd,CAFN,CAb0B,CAAL,EAAN,CAA5B,CAmBA,GAAMM,CAAAA,YAAY,CAAG,CAAEL,KAAK,CAAE,IAAT,CAAeM,OAAO,CAAE,IAAxB,CAA8BC,eAAe,CAAE,IAA/C,CAArB,CAEA,MAAO,IAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAAAC,KAAK,CAAI,CACvC,GAAMC,CAAAA,OAAO,CAAGrB,SAAS,CAACoB,KAAD,CAAzB,CAEA,MACI,qBAAC,OAAD,EAAS,YAAY,CAAEJ,YAAvB,EACK,cAAwB,IAArBL,CAAAA,KAAqB,MAArBA,KAAqB,CAAdM,OAAc,MAAdA,OAAc,CACrB,GAAMK,CAAAA,SAAS,CACXX,KAAK,EAAIM,OAAO,CAACM,QAAjB,EAA6BN,OAAO,CAACO,gBADzC,CAGA,MACI,yCACKF,SAAS,CACN,oBAAC,UAAD,EACI,OAAO,CAAC,OADZ,CAEI,KAAK,CAAC,OAFV,CAGI,SAAS,CAAED,OAAO,CAACV,KAHvB,EAKI,oBAAC,eAAD,EAAiB,KAAK,CAAEA,KAAxB,EALJ,CADM,CAQN,IATR,CAUI,oBAAC,OAAD,gBAAS,SAAS,CAAEU,OAAO,CAACnB,OAA5B,EAAyCkB,KAAzC,EACI,oBAAC,UAAD,EACI,IAAI,CAAE,gCADV,CAEI,KAAK,CAAC,6CAFV,EADJ,CAVJ,CADJ,CAmBH,CAxBL,CADJ,CA4BH,CA/BM,C","sourcesContent":["import React from 'react';\nimport { SaveButton, Toolbar } from 'react-admin';\nimport { ValidationError } from 'ra-core';\nimport { makeStyles } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport { FormSpy } from 'react-final-form';\n\nconst useStyles = makeStyles(theme => ({\n    toolbar: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'stretch',\n        flexBasis: '100%',\n        backgroundColor: 'transparent',\n        padding: 0,\n        marginTop: theme.spacing(2),\n    },\n    error: {\n        marginTop: theme.spacing(2),\n    },\n    success: {\n        color: theme.palette.success.main,\n        marginTop: theme.spacing(2),\n    },\n}));\n\nconst subscription = { error: true, touched: true, submitSucceeded: true };\n\nexport const NewPasswordToolbar = props => {\n    const classes = useStyles(props);\n\n    return (\n        <FormSpy subscription={subscription}>\n            {({ error, touched }) => {\n                const showError =\n                    error && touched.password && touched.confirm_password;\n\n                return (\n                    <>\n                        {showError ? (\n                            <Typography\n                                variant=\"body1\"\n                                color=\"error\"\n                                className={classes.error}\n                            >\n                                <ValidationError error={error} />\n                            </Typography>\n                        ) : null}\n                        <Toolbar className={classes.toolbar} {...props}>\n                            <SaveButton\n                                icon={<span />}\n                                label=\"apihub.new_password.actions.change_password\"\n                            />\n                        </Toolbar>\n                    </>\n                );\n            }}\n        </FormSpy>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}